var searchIndex = {};
searchIndex["backtrace"] = {"doc":"A library for acquiring a backtrace at runtime","items":[[3,"Frame","backtrace","A trait representing one frame of a backtrace, yielded to the `trace` function of this crate.",null,null],[3,"Symbol","","A trait representing the resolution of a symbol in a file.",null,null],[3,"SymbolName","","A wrapper around a symbol name to provide ergonomic accessors to the demangled name, the raw bytes, the raw string, etc.",null,null],[3,"Backtrace","","Representation of an owned and self-contained backtrace.",null,null],[3,"BacktraceFrame","","Captured version of a frame in a backtrace.",null,null],[3,"BacktraceSymbol","","Captured version of a symbol in a backtrace.",null,null],[5,"trace","","Inspects the current call-stack, passing all active frames into the closure provided to calculate a stack trace.",null,{"inputs":[{"name":"f"}],"output":null}],[5,"resolve","","Resolve an address to a symbol, passing the symbol to the specified closure.",null,null],[11,"ip","","Returns the current instruction pointer of this frame.",0,null],[11,"symbol_address","","Returns the starting symbol address of the frame of this function.",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"name","","Returns the name of this function.",1,{"inputs":[{"name":"self"}],"output":{"generics":["symbolname"],"name":"option"}}],[11,"addr","","Returns the starting address of this function.",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"filename","","Returns the file name where this function was defined.",1,{"inputs":[{"name":"self"}],"output":{"generics":["path"],"name":"option"}}],[11,"lineno","","Returns the line number for where this symbol is currently executing.",1,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"option"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new symbol name from the raw underlying bytes.",2,null],[11,"as_str","","Returns the raw symbol name as a `str` if the symbols is valid utf-8.",2,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"as_bytes","","Returns the raw symbol name as a list of bytes",2,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"backtrace"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"backtraceframe"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"backtracesymbol"}}],[11,"new","","Captures a backtrace at the callsite of this function, returning an owned representation.",3,{"inputs":[],"output":{"name":"backtrace"}}],[11,"new_unresolved","","Similar to `new` except that this does not resolve any symbols, this simply captures the backtrace as a list of addresses.",3,{"inputs":[],"output":{"name":"backtrace"}}],[11,"frames","","Returns the frames from when this backtrace was captured.",3,null],[11,"resolve","","If this backtrace was created from `new_unresolved` then this function will resolve all addresses in the backtrace to their symbolic names.",3,{"inputs":[{"name":"self"}],"output":null}],[11,"from","","",3,{"inputs":[{"generics":["backtraceframe"],"name":"vec"}],"output":{"name":"self"}}],[11,"into","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["backtraceframe"],"name":"vec"}}],[11,"ip","","Same as `Frame::ip`",4,null],[11,"symbol_address","","Same as `Frame::symbol_address`",4,null],[11,"symbols","","Returns the list of symbols that this frame corresponds to.",4,null],[11,"name","","Same as `Symbol::name`",5,{"inputs":[{"name":"self"}],"output":{"generics":["symbolname"],"name":"option"}}],[11,"addr","","Same as `Symbol::addr`",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"filename","","Same as `Symbol::filename`",5,{"inputs":[{"name":"self"}],"output":{"generics":["path"],"name":"option"}}],[11,"lineno","","Same as `Symbol::lineno`",5,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"option"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"backtrace"}}]],"paths":[[3,"Frame"],[3,"Symbol"],[3,"SymbolName"],[3,"Backtrace"],[3,"BacktraceFrame"],[3,"BacktraceSymbol"]]};
searchIndex["backtrace_sys"] = {"doc":"","items":[[4,"backtrace_state","backtrace_sys","",null,null],[5,"backtrace_create_state","","",null,null],[5,"backtrace_syminfo","","",null,null],[5,"backtrace_pcinfo","","",null,null],[6,"backtrace_syminfo_callback","","",null,null],[6,"backtrace_full_callback","","",null,null],[6,"backtrace_error_callback","","",null,null]],"paths":[]};
searchIndex["byteorder"] = {"doc":"This crate provides convenience methods for encoding and decoding numbers in either big-endian or little-endian order.","items":[[4,"BigEndian","byteorder","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"BE","","A type alias for `BigEndian`.",null,null],[6,"LE","","A type alias for `LittleEndian`.",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends `Read` with methods for reading numbers. (For `std::io`.)",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"result"}}],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i8"],"name":"result"}}],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u16"],"name":"result"}}],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i16"],"name":"result"}}],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"result"}}],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"result"}}],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"result"}}],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"result"}}],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["u64"],"name":"result"}}],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["i64"],"name":"result"}}],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"result"}}],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["f64"],"name":"result"}}],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the underlying reader.",0,null],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the underlying reader.",0,null],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the underlying reader.",0,null],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the underlying reader.",0,null],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the underlying reader.",0,null],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the underlying reader.",0,null],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f32_into_unchecked","","DEPRECATED.",0,null],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f64_into_unchecked","","DEPRECATED.",0,null],[8,"WriteBytesExt","","Extends `Write` with methods for writing numbers. (For `std::io`.)",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"result"}}],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"result"}}],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"result"}}],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"result"}}],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"result"}}],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"result"}}],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"result"}}],[8,"ByteOrder","","ByteOrder describes types that can serialize integers as bytes.",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,null],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,null],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,null],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,null],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,null],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,null],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in u32.",2,null],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,null],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,null],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,null],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,null],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",2,null],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,null],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,null],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",2,null],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,null],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,null],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,null],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,null],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",2,null],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",2,null],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",2,null],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",2,null],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",2,null],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",2,null],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",2,null],[11,"read_f32_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,null],[11,"read_f64_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,null],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",2,null],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",2,null],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",2,null],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",2,null],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",2,null],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",2,null],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,null],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point numbers from `src` into `dst`.",2,null],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a particular endianness.",2,null],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a particular endianness.",2,null],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a particular endianness.",2,null],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a particular endianness.",2,null],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a particular endianness.",2,null],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a particular endianness.",2,null],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4 bytes) floating point numbers to a particular endianness.",2,null],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8 bytes) floating point numbers to a particular endianness.",2,null],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bigendian"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",3,null],[11,"cmp","","",3,{"inputs":[{"name":"self"},{"name":"bigendian"}],"output":{"name":"ordering"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"bigendian"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"self"},{"name":"bigendian"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"bigendian"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"littleendian"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",4,null],[11,"cmp","","",4,{"inputs":[{"name":"self"},{"name":"littleendian"}],"output":{"name":"ordering"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"littleendian"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"littleendian"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"default","","",4,{"inputs":[],"output":{"name":"littleendian"}}],[11,"read_u16","","",3,null],[11,"read_u32","","",3,null],[11,"read_u64","","",3,null],[11,"read_uint","","",3,null],[11,"write_u16","","",3,null],[11,"write_u32","","",3,null],[11,"write_u64","","",3,null],[11,"write_uint","","",3,null],[11,"read_u16_into","","",3,null],[11,"read_u32_into","","",3,null],[11,"read_u64_into","","",3,null],[11,"write_u16_into","","",3,null],[11,"write_u32_into","","",3,null],[11,"write_u64_into","","",3,null],[11,"from_slice_u16","","",3,null],[11,"from_slice_u32","","",3,null],[11,"from_slice_u64","","",3,null],[11,"from_slice_f32","","",3,null],[11,"from_slice_f64","","",3,null],[11,"read_u16","","",4,null],[11,"read_u32","","",4,null],[11,"read_u64","","",4,null],[11,"read_uint","","",4,null],[11,"write_u16","","",4,null],[11,"write_u32","","",4,null],[11,"write_u64","","",4,null],[11,"write_uint","","",4,null],[11,"read_u16_into","","",4,null],[11,"read_u32_into","","",4,null],[11,"read_u64_into","","",4,null],[11,"write_u16_into","","",4,null],[11,"write_u32_into","","",4,null],[11,"write_u64_into","","",4,null],[11,"from_slice_u16","","",4,null],[11,"from_slice_u32","","",4,null],[11,"from_slice_u64","","",4,null],[11,"from_slice_f32","","",4,null],[11,"from_slice_f64","","",4,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"result"}}],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i8"],"name":"result"}}],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u16"],"name":"result"}}],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i16"],"name":"result"}}],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"result"}}],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"result"}}],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"result"}}],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"result"}}],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["u64"],"name":"result"}}],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["i64"],"name":"result"}}],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"result"}}],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["f64"],"name":"result"}}],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the underlying reader.",0,null],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the underlying reader.",0,null],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the underlying reader.",0,null],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the underlying reader.",0,null],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the underlying reader.",0,null],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the underlying reader.",0,null],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f32_into_unchecked","","DEPRECATED.",0,null],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f64_into_unchecked","","DEPRECATED.",0,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"result"}}],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"result"}}],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"result"}}],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"result"}}],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"result"}}],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"result"}}],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"result"}}]],"paths":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["cfg_if"] = {"doc":"A macro for defining #[cfg] if-else statements.","items":[[14,"cfg_if","cfg_if","",null,null]],"paths":[]};
searchIndex["failure"] = {"doc":"An experimental new error-handling library.","items":[[3,"Backtrace","failure","A `Backtrace`.",null,null],[3,"Compat","","A compatibility wrapper around an error type from this crate.",null,null],[3,"Context","","An error with context around it.",null,null],[3,"SyncFailure","","Wrapper for `std` errors to make them `Sync`.",null,null],[3,"Error","","The `Error` type, which can contain any failure.",null,null],[3,"Causes","","A iterator over the causes of a `Fail`",null,null],[5,"err_msg","","Constructs a `Fail` type from a string.",null,{"inputs":[{"name":"d"}],"output":{"name":"error"}}],[11,"new","","Constructs a new backtrace. This will only create a real backtrace if the crate is compiled in std mode and the `RUST_BACKTRACE` environmental variable is activated.",0,{"inputs":[],"output":{"name":"backtrace"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"backtrace"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"compat"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"compat"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"compat"}],"output":{"name":"bool"}}],[11,"hash","","",1,null],[11,"default","","",1,{"inputs":[],"output":{"name":"compat"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into_inner","","Unwraps this into the inner error.",1,{"inputs":[{"name":"self"}],"output":{"name":"e"}}],[11,"description","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"new","","Creates a new context without an underlying error message.",2,{"inputs":[{"name":"d"}],"output":{"name":"context"}}],[11,"get_context","","Returns a reference to the context provided with this error.",2,{"inputs":[{"name":"self"}],"output":{"name":"d"}}],[11,"cause","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",2,{"inputs":[{"name":"d"}],"output":{"name":"context"}}],[11,"new","","Wraps a non-`Sync` `Error` in order to make it implement `Fail`.",3,{"inputs":[{"name":"e"}],"output":{"name":"self"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",4,{"inputs":[{"name":"f"}],"output":{"name":"error"}}],[11,"cause","","Returns a reference to the underlying cause of this `Error`. Unlike the method on `Fail`, this does not return an `Option`. The `Error` type always has an underlying failure.",4,{"inputs":[{"name":"self"}],"output":{"name":"fail"}}],[11,"backtrace","","Gets a reference to the `Backtrace` for this `Error`.",4,{"inputs":[{"name":"self"}],"output":{"name":"backtrace"}}],[11,"context","","Provides context for this `Error`.",4,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"context"}}],[11,"compat","","Wraps `Error` in a compatibility type.",4,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"compat"}}],[11,"downcast","","Attempts to downcast this `Error` to a particular `Fail` type.",4,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"result"}}],[11,"root_cause","","Returns the \"root cause\" of this error - the last value in the cause chain which does not return an underlying `cause`.",4,{"inputs":[{"name":"self"}],"output":{"name":"fail"}}],[11,"downcast_ref","","Attempts to downcast this `Error` to a particular `Fail` type by reference.",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"downcast_mut","","Attempts to downcast this `Error` to a particular `Fail` type by mutable reference.",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"causes","","Returns a iterator over the causes of the `Error`, beginning with the failure returned by the `cause` method and ending with the failure returned by `root_cause`.",4,{"inputs":[{"name":"self"}],"output":{"name":"causes"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"ResultExt","","Extension methods for `Result`.",null,null],[10,"compat","","Wraps the error in `Compat` to make it compatible with older error handling APIs that expect `std::error::Error`.",5,{"inputs":[{"name":"self"}],"output":{"generics":["compat"],"name":"result"}}],[10,"context","","Wraps the error type in a context type.",5,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"generics":["context"],"name":"result"}}],[10,"with_context","","Wraps the error type in a context type generated by looking at the error value.",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["context"],"name":"result"}}],[8,"Fail","","The `Fail` trait.",null,null],[11,"cause","","Returns a reference to the underlying cause of this failure, if it is an error that wraps other errors.",6,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","Returns a reference to the `Backtrace` carried by this failure, if it carries one.",6,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"context","","Provides context for this failure.",6,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"context"}}],[11,"compat","","Wraps this failure in a compatibility wrapper that implements `std::error::Error`.",6,{"inputs":[{"name":"self"}],"output":{"name":"compat"}}],[11,"causes","","Returns a iterator over the causes of this `Fail` with itself as the first item and the `root_cause` as the final item.",6,{"inputs":[{"name":"self"}],"output":{"name":"causes"}}],[11,"root_cause","","Returns the \"root cause\" of this `Fail` - the last value in the cause chain which does not return an underlying `cause`.",6,{"inputs":[{"name":"self"}],"output":{"name":"fail"}}],[11,"downcast_ref","","Attempts to downcast this failure to a concrete type by reference.",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"downcast_mut","","Attempts to downcast this failure to a concrete type by mutable reference.",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"root_cause","","Returns the \"root cause\" of this `Fail` - the last value in the cause chain which does not return an underlying `cause`.",6,{"inputs":[{"name":"self"}],"output":{"name":"fail"}}],[11,"causes","","Returns a iterator over the causes of this `Fail` with itself as the first item and the `root_cause` as the final item.",6,{"inputs":[{"name":"self"}],"output":{"name":"causes"}}],[11,"next","","",7,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[14,"bail","","Exits a function early with an `Error`.",null,null],[14,"ensure","","Exits a function early with an `Error` if the condition is not satisfied.",null,null],[14,"format_err","","Constructs an `Error` using the standard string interpolation syntax.",null,null]],"paths":[[3,"Backtrace"],[3,"Compat"],[3,"Context"],[3,"SyncFailure"],[3,"Error"],[8,"ResultExt"],[8,"Fail"],[3,"Causes"]]};
searchIndex["failure_derive"] = {"doc":"","items":[[5,"Fail","failure_derive","",null,{"inputs":[{"name":"tokenstream"}],"output":{"name":"tokenstream"}}]],"paths":[]};
searchIndex["futures"] = {"doc":"Zero-cost Futures in Rust","items":[[4,"Async","futures","Return type of future, indicating whether a value is ready or not.",null,null],[13,"Ready","","Represents that a value is immediately ready.",0,null],[13,"NotReady","","Represents that a value is not ready yet, but may be so later.",0,null],[4,"AsyncSink","","The result of an asynchronous attempt to send a value to a sink.",null,null],[13,"Ready","","The `start_send` attempt succeeded, so the sending process has started; you must use `Sink::poll_complete` to drive the send to completion.",1,null],[13,"NotReady","","The `start_send` attempt failed due to the sink being full. The value being sent is returned, and the current `Task` will be automatically notified again once the sink has room.",1,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"async"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"async"}],"output":{"name":"bool"}}],[11,"map","","Change the success value of this `Async` with the closure provided",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"async"}}],[11,"is_ready","","Returns whether this is `Async::Ready`",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_not_ready","","Returns whether this is `Async::NotReady`",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"async"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"asyncsink"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"asyncsink"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"asyncsink"}],"output":{"name":"bool"}}],[11,"map","","Change the NotReady value of this `AsyncSink` with the closure provided",1,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"asyncsink"}}],[11,"is_ready","","Returns whether this is `AsyncSink::Ready`",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_not_ready","","Returns whether this is `AsyncSink::NotReady`",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[0,"future","","Futures",null,null],[3,"Empty","futures::future","A future which is never resolved.",null,null],[3,"Lazy","","A future which defers creation of the actual future until a callback is scheduled.",null,null],[3,"PollFn","","A future which adapts a function returning `Poll`.",null,null],[3,"FutureResult","","A future representing a value that is immediately ready.",null,null],[3,"LoopFn","","A future implementing a tail-recursive loop.",null,null],[3,"AndThen","","Future for the `and_then` combinator, chaining a computation onto the end of another future which completes successfully.",null,null],[3,"Flatten","","Future for the `flatten` combinator, flattening a future-of-a-future to get just the result of the final future.",null,null],[3,"FlattenStream","","Future for the `flatten_stream` combinator, flattening a future-of-a-stream to get just the result of the final stream as a stream.",null,null],[3,"Fuse","","A future which \"fuses\" a future once it's been resolved.",null,null],[3,"IntoStream","","Future that forwards one element from the underlying future (whether it is success of error) and emits EOF after that.",null,null],[3,"Join","","Future for the `join` combinator, waiting for two futures to complete.",null,null],[3,"Join3","","Future for the `join3` combinator, waiting for three futures to complete.",null,null],[3,"Join4","","Future for the `join4` combinator, waiting for four futures to complete.",null,null],[3,"Join5","","Future for the `join5` combinator, waiting for five futures to complete.",null,null],[3,"Map","","Future for the `map` combinator, changing the type of a future.",null,null],[3,"MapErr","","Future for the `map_err` combinator, changing the error type of a future.",null,null],[3,"FromErr","","Future for the `from_err` combinator, changing the error type of a future.",null,null],[3,"OrElse","","Future for the `or_else` combinator, chaining a computation onto the end of a future which fails with an error.",null,null],[3,"Select","","Future for the `select` combinator, waiting for one of two futures to complete.",null,null],[3,"SelectNext","","Future yielded as the second result in a `Select` future.",null,null],[3,"Select2","","Future for the `merge` combinator, waiting for one of two differently-typed futures to complete.",null,null],[3,"Then","","Future for the `then` combinator, chaining computations on the end of another future regardless of its outcome.",null,null],[3,"Inspect","","Do something with the item of a future, passing it on.",null,null],[3,"CatchUnwind","","Future for the `catch_unwind` combinator.",null,null],[3,"JoinAll","","A future which takes a list of futures and resolves with a vector of the completed values.",null,null],[3,"SelectAll","","Future for the `select_all` combinator, waiting for one of any of a list of futures to complete.",null,null],[3,"SelectOk","","Future for the `select_ok` combinator, waiting for one of any of a list of futures to successfully complete. Unlike `select_all`, this future ignores all but the last error, if there are any.",null,null],[3,"Shared","","A future that is cloneable and can be polled in multiple threads. Use `Future::shared()` method to convert any future into a `Shared` future.",null,null],[3,"SharedItem","","A wrapped item of the original future that is cloneable and implements Deref for ease of use.",null,null],[3,"SharedError","","A wrapped error of the original future that is cloneable and implements Deref for ease of use.",null,null],[3,"ExecuteError","","Errors returned from the `Spawn::spawn` function.",null,null],[4,"Loop","","The status of a `loop_fn` loop.",null,null],[13,"Break","","Indicates that the loop has completed with output `T`.",2,null],[13,"Continue","","Indicates that the loop function should be called again with input state `S`.",2,null],[4,"Either","","Combines two different futures yielding the same item and error types into a single type.",null,null],[13,"A","","First branch of the type",3,null],[13,"B","","Second branch of the type",3,null],[4,"ExecuteErrorKind","","Kinds of errors that can be returned from the `Execute::spawn` function.",null,null],[13,"Shutdown","","This executor has shut down and will no longer accept new futures to spawn.",4,null],[13,"NoCapacity","","This executor has no more capacity to run more futures. Other futures need to finish before this executor can accept another.",4,null],[5,"empty","","Creates a future which never resolves, representing a computation that never finishes.",null,{"inputs":[],"output":{"name":"empty"}}],[5,"lazy","","Creates a new future which will eventually be the same as the one created by the closure provided.",null,{"inputs":[{"name":"f"}],"output":{"name":"lazy"}}],[5,"poll_fn","","Creates a new future wrapping around a function returning `Poll`.",null,{"inputs":[{"name":"f"}],"output":{"name":"pollfn"}}],[5,"result","","Creates a new \"leaf future\" which will resolve with the given result.",null,{"inputs":[{"name":"result"}],"output":{"name":"futureresult"}}],[5,"ok","","Creates a \"leaf future\" from an immediate value of a finished and successful computation.",null,{"inputs":[{"name":"t"}],"output":{"name":"futureresult"}}],[5,"err","","Creates a \"leaf future\" from an immediate value of a failed computation.",null,{"inputs":[{"name":"e"}],"output":{"name":"futureresult"}}],[5,"loop_fn","","Creates a new future implementing a tail-recursive loop.",null,{"inputs":[{"name":"s"},{"name":"f"}],"output":{"name":"loopfn"}}],[5,"join_all","","Creates a future which represents a collection of the results of the futures given.",null,{"inputs":[{"name":"i"}],"output":{"name":"joinall"}}],[5,"select_all","","Creates a new future which will select over a list of futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"selectall"}}],[5,"select_ok","","Creates a new future which will select the first successful future over a list of futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"selectok"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",5,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",6,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",7,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"futureresult"}}],[11,"poll","","",8,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",9,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",10,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",11,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",12,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",13,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",14,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",15,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",16,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",17,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",18,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",19,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",20,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",21,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",22,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",23,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",24,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",25,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",26,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"split","","Splits out the homogeneous type from an either of tuples.",3,null],[11,"poll","","",3,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",27,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",28,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",29,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",30,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",31,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"peek","","If any clone of this `Shared` has completed execution, returns its result immediately without blocking. Otherwise, returns None without triggering the work represented by this `Shared`.",32,{"inputs":[{"name":"self"}],"output":{"generics":["result"],"name":"option"}}],[11,"poll","","",32,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"drop","","",32,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"shareditem"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",33,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"sharederror"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",34,{"inputs":[{"name":"self"}],"output":{"name":"e"}}],[8,"Future","","Trait for types which are a placeholder of a value that may become available at some later point in time.",null,null],[16,"Item","","The type of value that this future will resolved with if it is successful.",35,null],[16,"Error","","The type of error that this future will resolve with if it fails in a normal fashion.",35,null],[10,"poll","","Query this future to see if its value has become available, registering interest if it is not.",35,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"wait","","Block the current thread until this future is resolved.",35,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"map","","Map this future's result to a different type, returning a new future of the resulting type.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"map"}}],[11,"map_err","","Map this future's error to a different error, returning a new future.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"maperr"}}],[11,"from_err","","Map this future's error to any error implementing `From` for this future's `Error`, returning a new future.",35,{"inputs":[{"name":"self"}],"output":{"name":"fromerr"}}],[11,"then","","Chain on a computation for when a future finished, passing the result of the future to the provided closure `f`.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"then"}}],[11,"and_then","","Execute another future after this one has resolved successfully.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"andthen"}}],[11,"or_else","","Execute another future if this one resolves with an error.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"orelse"}}],[11,"select","","Waits for either one of two futures to complete.",35,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"select"}}],[11,"select2","","Waits for either one of two differently-typed futures to complete.",35,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"select2"}}],[11,"join","","Joins the result of two futures, waiting for them both to complete.",35,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"join"}}],[11,"join3","","Same as `join`, but with more futures.",35,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"}],"output":{"name":"join3"}}],[11,"join4","","Same as `join`, but with more futures.",35,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"},{"name":"d"}],"output":{"name":"join4"}}],[11,"join5","","Same as `join`, but with more futures.",35,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"},{"name":"d"},{"name":"e"}],"output":{"name":"join5"}}],[11,"into_stream","","Convert this future into a single element stream.",35,{"inputs":[{"name":"self"}],"output":{"name":"intostream"}}],[11,"flatten","","Flatten the execution of this future when the successful result of this future is itself another future.",35,{"inputs":[{"name":"self"}],"output":{"name":"flatten"}}],[11,"flatten_stream","","Flatten the execution of this future when the successful result of this future is a stream.",35,{"inputs":[{"name":"self"}],"output":{"name":"flattenstream"}}],[11,"fuse","","Fuse a future such that `poll` will never again be called once it has completed.",35,{"inputs":[{"name":"self"}],"output":{"name":"fuse"}}],[11,"inspect","","Do something with the item of a future, passing it on.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"inspect"}}],[11,"catch_unwind","","Catches unwinding panics while polling the future.",35,{"inputs":[{"name":"self"}],"output":{"name":"catchunwind"}}],[11,"shared","","Create a cloneable handle to this future where all handles will resolve to the same result.",35,{"inputs":[{"name":"self"}],"output":{"name":"shared"}}],[8,"IntoFuture","","Class of types which can be converted into a future.",null,null],[16,"Future","","The future that this type can be converted into.",36,null],[16,"Item","","The item that the future may resolve with.",36,null],[16,"Error","","The error that the future may resolve with.",36,null],[10,"into_future","","Consumes this object and produces a future.",36,null],[8,"FutureFrom","","Asynchronous conversion from a type `T`.",null,null],[16,"Future","","The future for the conversion.",37,null],[16,"Error","","Possible errors during conversion.",37,null],[10,"future_from","","Consume the given value, beginning the conversion.",37,null],[8,"Executor","","A trait for types which can spawn fresh futures.",null,null],[10,"execute","","Spawns a future to run on this `Executor`, typically in the \"background\".",38,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["executeerror"],"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"executeerrorkind"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"executeerrorkind"}],"output":{"name":"bool"}}],[11,"new","","Create a new `ExecuteError`",39,{"inputs":[{"name":"executeerrorkind"},{"name":"f"}],"output":{"name":"executeerror"}}],[11,"kind","","Returns the associated reason for the error",39,{"inputs":[{"name":"self"}],"output":{"name":"executeerrorkind"}}],[11,"into_future","","Consumes self and returns the original future that was spawned.",39,{"inputs":[{"name":"self"}],"output":{"name":"f"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"stream","futures","Asynchronous streams",null,null],[3,"Iter","futures::stream","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"IterStream","","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"IterOk","","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"IterResult","","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"Repeat","","Stream that produces the same element repeatedly.",null,null],[3,"AndThen","","A stream combinator which chains a computation onto values produced by a stream.",null,null],[3,"Chain","","An adapter for chaining the output of two streams.",null,null],[3,"Concat","","A stream combinator to concatenate the results of a stream into the first yielded item.",null,null],[3,"Concat2","","A stream combinator to concatenate the results of a stream into the first yielded item.",null,null],[3,"Empty","","A stream which contains no elements.",null,null],[3,"Filter","","A stream combinator used to filter the results of a stream and only yield some values.",null,null],[3,"FilterMap","","A combinator used to filter the results of a stream and simultaneously map them to a different type.",null,null],[3,"Flatten","","A combinator used to flatten a stream-of-streams into one long stream of elements.",null,null],[3,"Fold","","A future used to collect all the results of a stream into one generic type.",null,null],[3,"ForEach","","A stream combinator which executes a unit closure over each item on a stream.",null,null],[3,"FromErr","","A stream combinator to change the error type of a stream.",null,null],[3,"Fuse","","A stream which \"fuse\"s a stream once it's terminated.",null,null],[3,"StreamFuture","","A combinator used to temporarily convert a stream into a future.",null,null],[3,"Inspect","","Do something with the items of a stream, passing it on.",null,null],[3,"Map","","A stream combinator which will change the type of a stream from one type to another.",null,null],[3,"MapErr","","A stream combinator which will change the error type of a stream from one type to another.",null,null],[3,"Merge","","An adapter for merging the output of two streams.",null,null],[3,"Once","","A stream which emits single element and then EOF.",null,null],[3,"OrElse","","A stream combinator which chains a computation onto errors produced by a stream.",null,null],[3,"Peekable","","A `Stream` that implements a `peek` method.",null,null],[3,"PollFn","","A stream which adapts a function returning `Poll`.",null,null],[3,"Select","","An adapter for merging the output of two streams.",null,null],[3,"Skip","","A stream combinator which skips a number of elements before continuing.",null,null],[3,"SkipWhile","","A stream combinator which skips elements of a stream while a predicate holds.",null,null],[3,"Take","","A stream combinator which returns a maximum number of elements.",null,null],[3,"TakeWhile","","A stream combinator which takes elements from a stream while a predicate holds.",null,null],[3,"Then","","A stream combinator which chains a computation onto each item produced by a stream.",null,null],[3,"Unfold","","A stream which creates futures, polls them and return their result",null,null],[3,"Zip","","An adapter for merging the output of two streams.",null,null],[3,"Forward","","Future for the `Stream::forward` combinator, which sends a stream of values to a sink and then waits until the sink has fully flushed those values.",null,null],[3,"Buffered","","An adaptor for a stream of futures to execute the futures concurrently, if possible.",null,null],[3,"BufferUnordered","","An adaptor for a stream of futures to execute the futures concurrently, if possible, delivering results as they become available.",null,null],[3,"CatchUnwind","","Stream for the `catch_unwind` combinator.",null,null],[3,"Chunks","","An adaptor that chunks up elements in a vector.",null,null],[3,"Collect","","A future which collects all of the values of a stream into a vector.",null,null],[3,"Wait","","A stream combinator which converts an asynchronous stream to a blocking iterator.",null,null],[3,"SplitStream","","A `Stream` part of the split pair",null,null],[3,"SplitSink","","A `Sink` part of the split pair",null,null],[3,"FuturesUnordered","","An unbounded set of futures.",null,null],[3,"FuturesOrdered","","An unbounded queue of futures.",null,null],[4,"MergedItem","","An item returned from a merge stream, which represents an item from one or both of the underlying streams.",null,null],[13,"First","","An item from the first stream",40,null],[13,"Second","","An item from the second stream",40,null],[13,"Both","","Items from both streams",40,null],[5,"iter","","Converts an `Iterator` over `Result`s into a `Stream` which is always ready to yield the next value.",null,{"inputs":[{"name":"j"}],"output":{"name":"iter"}}],[5,"iter_ok","","Converts an `Iterator` into a `Stream` which is always ready to yield the next value.",null,{"inputs":[{"name":"i"}],"output":{"name":"iterok"}}],[5,"iter_result","","Converts an `Iterator` over `Result`s into a `Stream` which is always ready to yield the next value.",null,{"inputs":[{"name":"j"}],"output":{"name":"iterresult"}}],[5,"repeat","","Create a stream which produces the same item repeatedly.",null,{"inputs":[{"name":"t"}],"output":{"name":"repeat"}}],[5,"empty","","Creates a stream which contains no elements.",null,{"inputs":[],"output":{"name":"empty"}}],[5,"once","","Creates a stream of single element",null,{"inputs":[{"name":"result"}],"output":{"name":"once"}}],[5,"poll_fn","","Creates a new stream wrapping around a function returning `Poll`.",null,{"inputs":[{"name":"f"}],"output":{"name":"pollfn"}}],[5,"unfold","","Creates a `Stream` from a seed and a closure returning a `Future`.",null,{"inputs":[{"name":"t"},{"name":"f"}],"output":{"name":"unfold"}}],[5,"futures_unordered","","Converts a list of futures into a `Stream` of results from the futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"futuresunordered"}}],[5,"futures_ordered","","Converts a list of futures into a `Stream` of results from the futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"futuresordered"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",41,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",42,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",43,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",44,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",45,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",45,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",45,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",45,null],[11,"poll_complete","","",45,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",45,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",45,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",46,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"poll","","",47,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"poll","","",48,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",49,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",50,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",50,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",50,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",50,null],[11,"poll_complete","","",50,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",50,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",50,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",51,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",51,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",51,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",51,null],[11,"poll_complete","","",51,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",51,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",51,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",52,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",52,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",52,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",52,null],[11,"poll_complete","","",52,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",52,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",52,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",53,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",54,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",55,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",55,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",55,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",55,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"start_send","","",55,null],[11,"poll_complete","","",55,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",55,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",56,null],[11,"poll_complete","","",56,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",56,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",56,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"is_done","","Returns whether the underlying stream has finished or not.",56,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",56,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",56,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",56,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",57,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",58,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",58,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",58,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",58,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",59,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",59,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",59,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",59,null],[11,"poll_complete","","",59,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",59,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",59,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",60,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",60,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",60,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",60,null],[11,"poll_complete","","",60,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",60,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",60,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",61,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",62,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",63,null],[11,"poll_complete","","",63,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",63,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",63,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",64,null],[11,"poll_complete","","",64,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",64,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",64,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"peek","","Peek retrieves a reference to the next item in the stream.",64,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",65,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",66,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",67,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",67,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",67,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",67,null],[11,"poll_complete","","",67,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",67,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",67,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",68,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",68,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",68,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",68,null],[11,"poll_complete","","",68,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",68,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",68,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",69,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",69,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",69,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",69,null],[11,"poll_complete","","",69,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",69,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",69,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",70,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",70,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",70,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",70,null],[11,"poll_complete","","",70,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",70,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",70,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",71,null],[11,"poll_complete","","",71,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",71,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",71,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",72,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",73,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",73,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",74,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",75,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",75,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",75,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",75,null],[11,"poll_complete","","",75,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",75,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",75,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",76,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",76,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",76,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",76,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"start_send","","",76,null],[11,"poll_complete","","",76,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",76,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",77,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",78,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",78,null],[11,"poll_complete","","",78,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",78,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",78,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",78,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",78,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",78,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",79,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"poll"}}],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",80,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",80,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",80,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"next","","",80,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream + Sink` back together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are a matching pair originating from the same call to `Stream::split`.",81,{"inputs":[{"name":"self"},{"name":"splitsink"}],"output":{"generics":["reuniteerror"],"name":"result"}}],[11,"poll","","",81,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream + Sink` back together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are a matching pair originating from the same call to `Stream::split`.",82,{"inputs":[{"name":"self"},{"name":"splitstream"}],"output":{"generics":["reuniteerror"],"name":"result"}}],[11,"start_send","","",82,null],[11,"poll_complete","","",82,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",82,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"new","","Constructs a new, empty `FuturesUnordered`",83,{"inputs":[],"output":{"name":"futuresunordered"}}],[11,"len","","Returns the number of futures contained in the set.",83,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the set contains no futures",83,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"push","","Push a future into the set.",83,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"poll","","",83,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",83,{"inputs":[{"name":"self"}],"output":null}],[11,"from_iter","","",83,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"new","","Constructs a new, empty `FuturesOrdered`",84,{"inputs":[],"output":{"name":"futuresordered"}}],[11,"len","","Returns the number of futures contained in the queue.",84,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the queue contains no futures",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"push","","Push a future into the queue.",84,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"poll","","",84,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",84,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[8,"Stream","","A stream of values, not all of which may have been produced yet.",null,null],[16,"Item","","The type of item this stream will yield on success.",85,null],[16,"Error","","The type of error this stream may generate.",85,null],[10,"poll","","Attempt to pull out the next value of this stream, returning `None` if the stream is finished.",85,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"wait","","Creates an iterator which blocks the current thread until each item of this stream is resolved.",85,{"inputs":[{"name":"self"}],"output":{"name":"wait"}}],[11,"into_future","","Converts this stream into a `Future`.",85,{"inputs":[{"name":"self"}],"output":{"name":"streamfuture"}}],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",85,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"map"}}],[11,"map_err","","Converts a stream of error type `T` to a stream of error type `U`.",85,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"maperr"}}],[11,"filter","","Filters the values produced by this stream according to the provided predicate.",85,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"filter"}}],[11,"filter_map","","Filters the values produced by this stream while simultaneously mapping them to a different type.",85,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"filtermap"}}],[11,"then","","Chain on a computation for when a value is ready, passing the resulting item to the provided closure `f`.",85,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"then"}}],[11,"and_then","","Chain on a computation for when a value is ready, passing the successful results to the provided closure `f`.",85,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"andthen"}}],[11,"or_else","","Chain on a computation for when an error happens, passing the erroneous result to the provided closure `f`.",85,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"orelse"}}],[11,"collect","","Collect all of the values of this stream into a vector, returning a future representing the result of that computation.",85,{"inputs":[{"name":"self"}],"output":{"name":"collect"}}],[11,"concat2","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",85,{"inputs":[{"name":"self"}],"output":{"name":"concat2"}}],[11,"concat","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",85,{"inputs":[{"name":"self"}],"output":{"name":"concat"}}],[11,"fold","","Execute an accumulating computation over a stream, collecting all the values into one final result.",85,{"inputs":[{"name":"self"},{"name":"t"},{"name":"f"}],"output":{"name":"fold"}}],[11,"flatten","","Flattens a stream of streams into just one continuous stream.",85,{"inputs":[{"name":"self"}],"output":{"name":"flatten"}}],[11,"skip_while","","Skip elements on this stream while the predicate provided resolves to `true`.",85,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"skipwhile"}}],[11,"take_while","","Take elements from this stream while the predicate provided resolves to `true`.",85,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"takewhile"}}],[11,"for_each","","Runs this stream to completion, executing the provided closure for each element on the stream.",85,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"foreach"}}],[11,"from_err","","Map this stream's error to any error implementing `From` for this stream's `Error`, returning a new stream.",85,{"inputs":[{"name":"self"}],"output":{"name":"fromerr"}}],[11,"take","","Creates a new stream of at most `amt` items of the underlying stream.",85,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"take"}}],[11,"skip","","Creates a new stream which skips `amt` items of the underlying stream.",85,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"skip"}}],[11,"fuse","","Fuse a stream such that `poll` will never again be called once it has finished.",85,{"inputs":[{"name":"self"}],"output":{"name":"fuse"}}],[11,"by_ref","","Borrows a stream, rather than consuming it.",85,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",85,{"inputs":[{"name":"self"}],"output":{"name":"catchunwind"}}],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",85,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"buffered"}}],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures (unordered).",85,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bufferunordered"}}],[11,"merge","","An adapter for merging the output of two streams.",85,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"merge"}}],[11,"zip","","An adapter for zipping two streams together.",85,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"zip"}}],[11,"chain","","Adapter for chaining two stream.",85,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"chain"}}],[11,"peekable","","Creates a new stream which exposes a `peek` method.",85,{"inputs":[{"name":"self"}],"output":{"name":"peekable"}}],[11,"chunks","","An adaptor for chunking up items of the stream inside a vector.",85,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"chunks"}}],[11,"select","","Creates a stream that selects the next element from either this stream or the provided one, whichever is ready first.",85,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"select"}}],[11,"forward","","A future that completes after the given stream has been fully processed into the sink, including flushing.",85,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"forward"}}],[11,"split","","Splits this `Stream + Sink` object into separate `Stream` and `Sink` objects.",85,null],[11,"inspect","","Do something with each item of this stream, afterwards passing it on.",85,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"inspect"}}],[0,"sink","futures","Asynchronous sinks",null,null],[3,"Buffer","futures::sink","Sink for the `Sink::buffer` combinator, which buffers up to some fixed number of values when the underlying sink is unable to accept them.",null,null],[3,"Wait","","A sink combinator which converts an asynchronous sink to a blocking sink.",null,null],[3,"With","","Sink for the `Sink::with` combinator, chaining a computation to run prior to pushing a value into the underlying sink.",null,null],[3,"WithFlatMap","","Sink for the `Sink::with_flat_map` combinator, chaining a computation that returns an iterator to run prior to pushing a value into the underlying sink",null,null],[3,"Flush","","Future for the `Sink::flush` combinator, which polls the sink until all data has been flushed.",null,null],[3,"Send","","Future for the `Sink::send` combinator, which sends a value to a sink and then waits until the sink has fully flushed.",null,null],[3,"SendAll","","Future for the `Sink::send_all` combinator, which sends a stream of values to a sink and then waits until the sink has fully flushed those values.",null,null],[3,"SinkMapErr","","Sink for the `Sink::sink_map_err` combinator.",null,null],[3,"SinkFromErr","","A sink combinator to change the error type of a sink.",null,null],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",86,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"get_ref","","Get a shared reference to the inner sink.",86,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",86,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",86,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",86,null],[11,"poll_complete","","",86,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",86,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",87,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",87,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",87,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",87,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"start_send","","",87,null],[11,"poll_complete","","",87,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",87,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",88,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",88,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",88,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",89,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",89,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",89,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",89,null],[11,"poll_complete","","",89,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",89,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",89,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",90,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",90,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",90,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",91,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",92,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",92,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",92,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",92,null],[11,"poll_complete","","",92,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",92,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",92,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",93,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",93,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",93,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",93,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"start_send","","",93,null],[11,"poll_complete","","",93,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",93,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"send","","Sends a value to this sink, blocking the current thread until it's able to do so.",94,null],[11,"flush","","Flushes any buffered data in this sink, blocking the current thread until it's entirely flushed.",94,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"close","","Close this sink, blocking the current thread until it's entirely closed.",94,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[6,"BoxSink","","A type alias for `Box<Sink + Send>`",null,null],[8,"Sink","","A `Sink` is a value into which other values can be sent, asynchronously.",null,null],[16,"SinkItem","","The type of value that the sink accepts.",95,null],[16,"SinkError","","The type of value produced by the sink when an error occurs.",95,null],[10,"start_send","","Begin the process of sending a value to the sink.",95,null],[10,"poll_complete","","Flush all output from this sink, if necessary.",95,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","A method to indicate that no more values will ever be pushed into this sink.",95,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"wait","","Creates a new object which will produce a synchronous sink.",95,{"inputs":[{"name":"self"}],"output":{"name":"wait"}}],[11,"with","","Composes a function in front of the sink.",95,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"with"}}],[11,"with_flat_map","","Composes a function in front of the sink.",95,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"withflatmap"}}],[11,"sink_map_err","","Transforms the error returned by the sink.",95,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"sinkmaperr"}}],[11,"sink_from_err","","Map this sink's error to any error implementing `From` for this sink's `Error`, returning a new sink.",95,{"inputs":[{"name":"self"}],"output":{"name":"sinkfromerr"}}],[11,"buffer","","Adds a fixed-size buffer to the current sink.",95,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"buffer"}}],[11,"flush","","A future that completes when the sink has finished processing all pending requests.",95,{"inputs":[{"name":"self"}],"output":{"name":"flush"}}],[11,"send","","A future that completes after the given item has been fully processed into the sink, including flushing.",95,null],[11,"send_all","","A future that completes after the given stream has been fully processed into the sink, including flushing.",95,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"sendall"}}],[0,"task","futures","Tasks used to drive a future computation",null,null],[3,"Task","futures::task","A handle to a \"task\", which represents a single lightweight \"thread\" of execution driving a future to completion.",null,null],[3,"AtomicTask","","A synchronization primitive for task notification.",null,null],[3,"LocalKey","","A key for task-local data stored in a future's task.",null,null],[3,"UnparkEvent","","A set insertion to trigger upon `unpark`.",null,null],[5,"current","","Returns a handle to the current task to call `notify` at a later date.",null,{"inputs":[],"output":{"name":"task"}}],[5,"init","","Initialize the `futures` task system.",null,null],[5,"with_unpark_event","","For the duration of the given callback, add an \"unpark event\" to be triggered when the task handle is used to unpark the task.",null,{"inputs":[{"name":"unparkevent"},{"name":"f"}],"output":{"name":"r"}}],[8,"EventSet","","A concurrent set which allows for the insertion of `usize` values.",null,null],[10,"insert","","Insert the given ID into the set",96,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[0,"executor","futures","Executors",null,null],[3,"Run","futures::executor","Units of work submitted to an `Executor`, currently only created internally.",null,null],[3,"Spawn","","Representation of a spawned future/stream.",null,null],[3,"NotifyHandle","","A `NotifyHandle` is the core value through which notifications are routed in the `futures` crate.",null,null],[5,"spawn","","Spawns a new future, returning the fused future and task.",null,{"inputs":[{"name":"t"}],"output":{"name":"spawn"}}],[5,"with_notify","","Sets the `NotifyHandle` of the current task for the duration of the provided closure.",null,{"inputs":[{"name":"t"},{"name":"usize"},{"name":"f"}],"output":{"name":"r"}}],[8,"Unpark","","A trait which represents a sink of notifications that a future is ready to make progress.",null,null],[10,"unpark","","Indicates that an associated future and/or task are ready to make progress.",97,{"inputs":[{"name":"self"}],"output":null}],[8,"Executor","","A trait representing requests to poll futures.",null,null],[10,"execute","","Requests that `Run` is executed soon on the given executor.",98,{"inputs":[{"name":"self"},{"name":"run"}],"output":null}],[8,"Notify","","A trait which represents a sink of notifications that a future is ready to make progress.",null,null],[10,"notify","","Indicates that an associated future and/or task are ready to make progress.",99,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"clone_id","","This function is called whenever a new copy of `id` is needed.",99,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"drop_id","","All instances of `Task` store an `id` that they're going to internally notify with, and this function is called when the `Task` is dropped.",99,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[8,"UnsafeNotify","","An unsafe trait for implementing custom forms of memory management behind a `Task`.",null,null],[10,"clone_raw","","Creates a new `NotifyHandle` from this instance of `UnsafeNotify`.",100,{"inputs":[{"name":"self"}],"output":{"name":"notifyhandle"}}],[10,"drop_raw","","Drops this instance of `UnsafeNotify`, deallocating resources associated with it.",100,{"inputs":[{"name":"self"}],"output":null}],[0,"sync","futures","Future-aware synchronization",null,null],[3,"BiLock","futures::sync","A type of futures-powered synchronization primitive which is a mutex between two possible owners.",null,null],[3,"BiLockGuard","","Returned RAII guard from the `poll_lock` method.",null,null],[3,"BiLockAcquire","","Future returned by `BiLock::lock` which will resolve when the lock is acquired.",null,null],[3,"BiLockAcquired","","Resolved value of the `BiLockAcquire<T>` future.",null,null],[0,"oneshot","","A one-shot, futures-aware channel",null,null],[3,"Receiver","futures::sync::oneshot","A future representing the completion of a computation happening elsewhere in memory.",null,null],[3,"Sender","","Represents the completion half of a oneshot through which the result of a computation is signaled.",null,null],[3,"Canceled","","Error returned from a `Receiver<T>` whenever the corresponding `Sender<T>` is dropped.",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Execute` instances below must be able to spawn.",null,null],[5,"channel","","Creates a new futures-aware, one-shot channel.",null,null],[5,"spawn","","Spawns a `future` onto the instance of `Executor` provided, `executor`, returning a handle representing the completion of the future.",null,{"inputs":[{"name":"f"},{"name":"e"}],"output":{"name":"spawnhandle"}}],[5,"spawn_fn","","Spawns a function `f` onto the `Spawn` instance provided `s`.",null,{"inputs":[{"name":"f"},{"name":"e"}],"output":{"name":"spawnhandle"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"send","","Completes this oneshot with a successful result.",102,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"poll_cancel","","Polls this `Sender` half to detect whether the `Receiver` this has paired with has gone away.",102,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding `Receiver` has gone away.",102,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"drop","","",102,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",103,{"inputs":[{"name":"self"}],"output":{"name":"canceled"}}],[11,"eq","","",103,{"inputs":[{"name":"self"},{"name":"canceled"}],"output":{"name":"bool"}}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",103,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"close","","Gracefully close this receiver, preventing sending any future messages.",101,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",101,{"inputs":[{"name":"self"}],"output":{"generics":["canceled"],"name":"poll"}}],[11,"drop","","",101,{"inputs":[{"name":"self"}],"output":null}],[11,"forget","","Drop this future without canceling the underlying future.",104,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",104,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",104,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",104,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",105,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",105,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",105,{"inputs":[{"name":"self"}],"output":null}],[0,"mpsc","futures::sync","A multi-producer, single-consumer, futures-aware, FIFO queue with back pressure.",null,null],[3,"Sender","futures::sync::mpsc","The transmission end of a channel which is used to send values.",null,null],[3,"UnboundedSender","","The transmission end of a channel which is used to send values.",null,null],[3,"Receiver","","The receiving end of a channel which implements the `Stream` trait.",null,null],[3,"UnboundedReceiver","","The receiving end of a channel which implements the `Stream` trait.",null,null],[3,"SendError","","Error type for sending, used when the receiving end of a channel is dropped",null,null],[3,"TrySendError","","Error type returned from `try_send`",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Executor` instances must be able to execute for `spawn`.",null,null],[5,"channel","","Creates an in-memory channel implementation of the `Stream` trait with bounded capacity.",null,null],[5,"unbounded","","Creates an in-memory channel implementation of the `Stream` trait with unbounded capacity.",null,null],[5,"spawn","","Spawns a `stream` onto the instance of `Executor` provided, `executor`, returning a handle representing the remote stream.",null,{"inputs":[{"name":"s"},{"name":"e"},{"name":"usize"}],"output":{"name":"spawnhandle"}}],[5,"spawn_unbounded","","Spawns a `stream` onto the instance of `Executor` provided, `executor`, returning a handle representing the remote stream, with unbounded buffering.",null,{"inputs":[{"name":"s"},{"name":"e"}],"output":{"name":"spawnhandle"}}],[11,"fmt","","",106,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",108,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",109,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",110,{"inputs":[{"name":"self"}],"output":{"name":"senderror"}}],[11,"eq","","",110,{"inputs":[{"name":"self"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"ne","","",110,{"inputs":[{"name":"self"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"clone","","",111,{"inputs":[{"name":"self"}],"output":{"name":"trysenderror"}}],[11,"eq","","",111,{"inputs":[{"name":"self"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"ne","","",111,{"inputs":[{"name":"self"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"fmt","","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",110,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"into_inner","","Returns the message that was attempted to be sent but failed.",110,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"fmt","","",111,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",111,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",111,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"is_full","","Returns true if this error is a result of the channel being full",111,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_disconnected","","Returns true if this error is a result of the receiver being dropped",111,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"into_inner","","Returns the message that was attempted to be sent but failed.",111,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"try_send","","Attempts to send a message on this `Sender<T>` without blocking.",106,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["trysenderror"],"name":"result"}}],[11,"poll_ready","","Polls the channel to determine if there is guaranteed to be capacity to send at least one item without waiting.",106,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"start_send","","",106,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["senderror"],"name":"startsend"}}],[11,"poll_complete","","",106,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"close","","",106,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"unbounded_send","","Sends the provided message along this channel.",107,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["senderror"],"name":"result"}}],[11,"start_send","","",107,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["senderror"],"name":"startsend"}}],[11,"poll_complete","","",107,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"close","","",107,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"clone","","",107,{"inputs":[{"name":"self"}],"output":{"name":"unboundedsender"}}],[11,"clone","","",106,{"inputs":[{"name":"self"}],"output":{"name":"sender"}}],[11,"drop","","",106,{"inputs":[{"name":"self"}],"output":null}],[11,"close","","Closes the receiving half",108,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",108,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"drop","","",108,{"inputs":[{"name":"self"}],"output":null}],[11,"close","","Closes the receiving half",109,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",109,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"poll","","",112,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",113,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","futures::sync","",114,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BiLock` protecting the provided data.",114,null],[11,"poll_lock","","Attempt to acquire this lock, returning `NotReady` if it can't be acquired.",114,{"inputs":[{"name":"self"}],"output":{"generics":["bilockguard"],"name":"async"}}],[11,"lock","","Perform a \"blocking lock\" of this lock, consuming this lock handle and returning a future to the acquired lock.",114,{"inputs":[{"name":"self"}],"output":{"name":"bilockacquire"}}],[11,"reunite","","Attempts to put the two \"halves\" of a `BiLock<T>` back together and recover the original value. Succeeds only if the two `BiLock<T>`s originated from the same call to `BiLock::new`.",114,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"generics":["reuniteerror"],"name":"result"}}],[11,"fmt","","",115,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",115,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",115,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"drop","","",115,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",116,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",116,{"inputs":[{"name":"self"}],"output":{"generics":["bilockacquired"],"name":"poll"}}],[11,"fmt","","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"unlock","","Recovers the original `BiLock<T>`, unlocking this lock.",117,{"inputs":[{"name":"self"}],"output":{"name":"bilock"}}],[11,"deref","","",117,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",117,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"drop","","",117,{"inputs":[{"name":"self"}],"output":null}],[0,"unsync","futures","Future-aware single-threaded synchronization",null,null],[0,"mpsc","futures::unsync","A multi-producer, single-consumer, futures-aware, FIFO queue with back pressure, for use communicating between tasks on the same thread.",null,null],[3,"Sender","futures::unsync::mpsc","The transmission end of a channel.",null,null],[3,"Receiver","","The receiving end of a channel which implements the `Stream` trait.",null,null],[3,"UnboundedSender","","The transmission end of an unbounded channel.",null,null],[3,"UnboundedReceiver","","The receiving end of an unbounded channel.",null,null],[3,"SendError","","Error type for sending, used when the receiving end of a channel is dropped",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Executor` instances must be able to execute for `spawn`.",null,null],[5,"channel","","Creates a bounded in-memory channel with buffered storage.",null,null],[5,"unbounded","","Creates an unbounded in-memory channel with buffered storage.",null,null],[5,"spawn","","Spawns a `stream` onto the instance of `Executor` provided, `executor`, returning a handle representing the remote stream.",null,{"inputs":[{"name":"s"},{"name":"e"},{"name":"usize"}],"output":{"name":"spawnhandle"}}],[5,"spawn_unbounded","","Spawns a `stream` onto the instance of `Executor` provided, `executor`, returning a handle representing the remote stream, with unbounded buffering.",null,{"inputs":[{"name":"s"},{"name":"e"}],"output":{"name":"spawnhandle"}}],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",118,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"start_send","","",118,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["senderror"],"name":"startsend"}}],[11,"poll_complete","","",118,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"close","","",118,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"drop","","",118,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",119,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"close","","Closes the receiving half",119,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",119,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"drop","","",119,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",120,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",120,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"start_send","","",120,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["senderror"],"name":"startsend"}}],[11,"poll_complete","","",120,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"close","","",120,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"unbounded_send","","Sends the provided message along this channel.",120,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["senderror"],"name":"result"}}],[11,"fmt","","",121,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"close","","Closes the receiving half",121,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",121,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",122,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",122,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",122,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"into_inner","","Returns the message that was attempted to be sent but failed.",122,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"poll","","",123,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",123,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",124,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",124,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"oneshot","futures::unsync","A one-shot, futures-aware channel",null,null],[3,"Sender","futures::unsync::oneshot","Represents the completion half of a oneshot through which the result of a computation is signaled.",null,null],[3,"Receiver","","A future representing the completion of a computation happening elsewhere in memory.",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Spawn` instances below must be able to spawn.",null,null],[5,"channel","","Creates a new futures-aware, one-shot channel.",null,null],[5,"spawn","","Spawns a `future` onto the instance of `Executor` provided, `executor`, returning a handle representing the completion of the future.",null,{"inputs":[{"name":"f"},{"name":"e"}],"output":{"name":"spawnhandle"}}],[5,"spawn_fn","","Spawns a function `f` onto the `Spawn` instance provided `s`.",null,{"inputs":[{"name":"f"},{"name":"e"}],"output":{"name":"spawnhandle"}}],[11,"fmt","","",125,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",126,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"send","","Completes this oneshot with a successful result.",125,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"poll_cancel","","Polls this `Sender` half to detect whether the `Receiver` this has paired with has gone away.",125,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding `Receiver` has gone away.",125,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"drop","","",125,{"inputs":[{"name":"self"}],"output":null}],[11,"close","","Gracefully close this receiver, preventing sending any future messages.",126,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",126,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"drop","","",126,{"inputs":[{"name":"self"}],"output":null}],[11,"forget","","Drop this future without canceling the underlying future.",127,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",127,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",127,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",128,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",128,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"prelude","futures","A \"prelude\" for crates using the `futures` crate.",null,null],[6,"Poll","","Return type of the `Future::poll` method, indicates whether a future's value is ready or not.",null,null],[6,"StartSend","","Return type of the `Sink::start_send` method, indicating the outcome of a send attempt. See `AsyncSink` for more details.",null,null],[14,"try_ready","","A macro for extracting the successful type of a `Poll<T, E>`.",null,null],[14,"task_local","","A macro to create a `static` of type `LocalKey`",null,null],[11,"new","futures::task","Create an `AtomicTask` initialized with the given `Task`",129,{"inputs":[],"output":{"name":"atomictask"}}],[11,"register","","Registers the current task to be notified on calls to `notify`.",129,{"inputs":[{"name":"self"}],"output":null}],[11,"notify","","Notifies the task that last called `register`.",129,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",129,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",130,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"with","","Access this task-local key, running the provided closure with a reference to the value.",130,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"r"}}],[11,"poll_future","futures::executor","Polls the internal future, scheduling notifications to be sent to the `unpark` argument.",131,{"inputs":[{"name":"self"},{"generics":["unpark"],"name":"arc"}],"output":{"name":"poll"}}],[11,"wait_future","","Waits for the internal future to complete, blocking this thread's execution until it does.",131,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"execute","","A specialized function to request running a future to completion on the specified executor.",131,{"inputs":[{"name":"self"},{"generics":["executor"],"name":"arc"}],"output":null}],[11,"poll_stream","","Like `poll_future`, except polls the underlying stream.",131,{"inputs":[{"name":"self"},{"generics":["unpark"],"name":"arc"}],"output":{"generics":["option"],"name":"poll"}}],[11,"wait_stream","","Like `wait_future`, except only waits for the next element to arrive on the underlying stream.",131,{"inputs":[{"name":"self"}],"output":{"generics":["result"],"name":"option"}}],[11,"start_send","","Invokes the underlying `start_send` method with this task in place.",131,null],[11,"poll_flush","","Invokes the underlying `poll_complete` method with this task in place.",131,{"inputs":[{"name":"self"},{"name":"arc"}],"output":{"name":"poll"}}],[11,"wait_send","","Blocks the current thread until it's able to send `value` on this sink.",131,null],[11,"wait_flush","","Blocks the current thread until it's able to flush this sink.",131,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"wait_close","","Blocks the current thread until it's able to close this sink.",131,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"run","","Actually run the task (invoking `poll` on its future) on the current thread.",132,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",132,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","futures::task","",133,{"inputs":[{"name":"self"}],"output":{"name":"unparkevent"}}],[11,"new","","Construct an unpark event that will insert `id` into `set` when triggered.",133,{"inputs":[{"generics":["eventset"],"name":"arc"},{"name":"usize"}],"output":{"name":"unparkevent"}}],[11,"fmt","","",133,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","futures::executor","",134,{"inputs":[{"name":"arc"}],"output":{"name":"notifyhandle"}}],[11,"clone_id","","This function is called whenever a new copy of `id` is needed.",99,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"drop_id","","All instances of `Task` store an `id` that they're going to internally notify with, and this function is called when the `Task` is dropped.",99,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"clone","futures::task","",135,{"inputs":[{"name":"self"}],"output":{"name":"task"}}],[11,"notify","","Indicate that the task should attempt to poll its future in a timely fashion.",135,{"inputs":[{"name":"self"}],"output":null}],[11,"is_current","","Returns `true` when called from within the context of the task.",135,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"will_notify_current","","This function is intended as a performance optimization for structures which store a `Task` internally.",135,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",135,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","futures::executor","Get a shared reference to the object the Spawn is wrapping.",131,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Get a mutable reference to the object the Spawn is wrapping.",131,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consume the Spawn, returning its inner object",131,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"poll_future_notify","","Polls the internal future, scheduling notifications to be sent to the `notify` argument.",131,{"inputs":[{"name":"self"},{"name":"n"},{"name":"usize"}],"output":{"name":"poll"}}],[11,"poll_stream_notify","","Like `poll_future_notify`, except polls the underlying stream.",131,{"inputs":[{"name":"self"},{"name":"n"},{"name":"usize"}],"output":{"generics":["option"],"name":"poll"}}],[11,"start_send_notify","","Invokes the underlying `start_send` method with this task in place.",131,null],[11,"poll_flush_notify","","Invokes the underlying `poll_complete` method with this task in place.",131,{"inputs":[{"name":"self"},{"name":"n"},{"name":"usize"}],"output":{"name":"poll"}}],[11,"close_notify","","Invokes the underlying `close` method with this task in place.",131,{"inputs":[{"name":"self"},{"name":"n"},{"name":"usize"}],"output":{"name":"poll"}}],[11,"fmt","","",131,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Constructs a new `NotifyHandle` directly.",134,null],[11,"notify","","Invokes the underlying instance of `Notify` with the provided `id`.",134,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"clone","","",134,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",134,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",134,{"inputs":[{"name":"self"}],"output":null}],[11,"from","","",134,{"inputs":[{"name":"t"}],"output":{"name":"notifyhandle"}}]],"paths":[[4,"Async"],[4,"AsyncSink"],[4,"Loop"],[4,"Either"],[4,"ExecuteErrorKind"],[3,"Empty"],[3,"Lazy"],[3,"PollFn"],[3,"FutureResult"],[3,"LoopFn"],[3,"AndThen"],[3,"Flatten"],[3,"FlattenStream"],[3,"Fuse"],[3,"IntoStream"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"Map"],[3,"MapErr"],[3,"FromErr"],[3,"OrElse"],[3,"Select"],[3,"SelectNext"],[3,"Select2"],[3,"Then"],[3,"Inspect"],[3,"CatchUnwind"],[3,"JoinAll"],[3,"SelectAll"],[3,"SelectOk"],[3,"Shared"],[3,"SharedItem"],[3,"SharedError"],[8,"Future"],[8,"IntoFuture"],[8,"FutureFrom"],[8,"Executor"],[3,"ExecuteError"],[4,"MergedItem"],[3,"Iter"],[3,"IterOk"],[3,"IterResult"],[3,"Repeat"],[3,"AndThen"],[3,"Chain"],[3,"Concat2"],[3,"Concat"],[3,"Empty"],[3,"Filter"],[3,"FilterMap"],[3,"Flatten"],[3,"Fold"],[3,"ForEach"],[3,"FromErr"],[3,"Fuse"],[3,"StreamFuture"],[3,"Inspect"],[3,"Map"],[3,"MapErr"],[3,"Merge"],[3,"Once"],[3,"OrElse"],[3,"Peekable"],[3,"PollFn"],[3,"Select"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"Then"],[3,"Unfold"],[3,"Zip"],[3,"Forward"],[3,"Buffered"],[3,"BufferUnordered"],[3,"CatchUnwind"],[3,"Chunks"],[3,"Collect"],[3,"Wait"],[3,"SplitStream"],[3,"SplitSink"],[3,"FuturesUnordered"],[3,"FuturesOrdered"],[8,"Stream"],[3,"With"],[3,"WithFlatMap"],[3,"Flush"],[3,"SinkFromErr"],[3,"Send"],[3,"SendAll"],[3,"SinkMapErr"],[3,"Buffer"],[3,"Wait"],[8,"Sink"],[8,"EventSet"],[8,"Unpark"],[8,"Executor"],[8,"Notify"],[8,"UnsafeNotify"],[3,"Receiver"],[3,"Sender"],[3,"Canceled"],[3,"SpawnHandle"],[3,"Execute"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"TrySendError"],[3,"SpawnHandle"],[3,"Execute"],[3,"BiLock"],[3,"BiLockGuard"],[3,"BiLockAcquire"],[3,"BiLockAcquired"],[3,"Sender"],[3,"Receiver"],[3,"UnboundedSender"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"SpawnHandle"],[3,"Execute"],[3,"Sender"],[3,"Receiver"],[3,"SpawnHandle"],[3,"Execute"],[3,"AtomicTask"],[3,"LocalKey"],[3,"Spawn"],[3,"Run"],[3,"UnparkEvent"],[3,"NotifyHandle"],[3,"Task"]]};
searchIndex["futures_await"] = {"doc":"Runtime support for the async/await syntax for futures.","items":[[0,"prelude","futures_await","",null,null],[14,"try_ready","","A macro for extracting the successful type of a `Poll<T, E>`.",null,null],[14,"task_local","","A macro to create a `static` of type `LocalKey`",null,null]],"paths":[]};
searchIndex["futures_await_async_macro"] = {"doc":"Procedural macro for the `#[async]` attribute.","items":[[5,"async","futures_await_async_macro","",null,{"inputs":[{"name":"tokenstream"},{"name":"tokenstream"}],"output":{"name":"tokenstream"}}],[5,"async_stream","","",null,{"inputs":[{"name":"tokenstream"},{"name":"tokenstream"}],"output":{"name":"tokenstream"}}],[5,"async_block","","",null,{"inputs":[{"name":"tokenstream"}],"output":{"name":"tokenstream"}}],[5,"async_stream_block","","",null,{"inputs":[{"name":"tokenstream"}],"output":{"name":"tokenstream"}}]],"paths":[]};
searchIndex["futures_await_await_macro"] = {"doc":"","items":[[14,"await","futures_await_await_macro","Ye Olde Await Macro",null,null],[14,"stream_yield","","",null,null]],"paths":[]};
searchIndex["futures_await_quote"] = {"doc":"Quasi-quoting without a Syntex dependency, intended for use with Macros 1.1.","items":[[3,"Tokens","futures_await_quote","Tokens produced by a `quote!(...)` invocation.",null,null],[3,"ByteStr","","Wrap a `&str` so it interpolates as a byte-string: `b\"abc\"`.",null,null],[12,"0","","",0,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"tokens"}}],[11,"new","","Empty tokens.",1,{"inputs":[],"output":{"name":"self"}}],[11,"append","","For use by `ToTokens` implementations.",1,{"inputs":[{"name":"self"},{"name":"u"}],"output":null}],[11,"append_tokens","","Add `tokens` into `self`.",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"append_sym","","Add the symbol specified to this list of tokens.",1,{"inputs":[{"name":"self"},{"name":"str"},{"name":"span"}],"output":null}],[11,"append_delimited","","",1,{"inputs":[{"name":"self"},{"name":"str"},{"name":"span"},{"name":"f"}],"output":{"name":"r"}}],[11,"append_all","","For use by `ToTokens` implementations.",1,{"inputs":[{"name":"self"},{"name":"i"}],"output":null}],[11,"append_separated","","For use by `ToTokens` implementations.",1,{"inputs":[{"name":"self"},{"name":"i"},{"name":"u"}],"output":null}],[11,"append_terminated","","For use by `ToTokens` implementations.",1,{"inputs":[{"name":"self"},{"name":"i"},{"name":"u"}],"output":null}],[11,"default","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"into_tokens","","",1,{"inputs":[{"name":"self"}],"output":{"name":"tokens"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_tokens","","",0,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[0,"__rt","","",null,null],[5,"parse","futures_await_quote::__rt","",null,{"inputs":[{"name":"tokens"},{"name":"str"}],"output":null}],[5,"append_kind","","",null,{"inputs":[{"name":"tokens"},{"name":"tokennode"}],"output":null}],[8,"ToTokens","futures_await_quote","Types that can be interpolated inside a `quote!(...)` invocation.",null,null],[10,"to_tokens","","Write `self` to the given `Tokens`.",2,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"into_tokens","","Convert `self` directly into a `Tokens` object.",2,{"inputs":[{"name":"self"}],"output":{"name":"tokens"}}],[14,"quote","","The whole point.",null,null],[11,"into_tokens","","Convert `self` directly into a `Tokens` object.",2,{"inputs":[{"name":"self"}],"output":{"name":"tokens"}}]],"paths":[[3,"ByteStr"],[3,"Tokens"],[8,"ToTokens"]]};
searchIndex["futures_await_syn"] = {"doc":"","items":[[3,"Span","futures_await_syn","",null,null],[12,"0","","",0,null],[0,"tokens","","Discrete tokens that can be parsed out by synom.",null,null],[3,"Add","futures_await_syn::tokens","",null,null],[12,"0","","",1,null],[3,"AddEq","","",null,null],[12,"0","","",2,null],[3,"And","","",null,null],[12,"0","","",3,null],[3,"AndAnd","","",null,null],[12,"0","","",4,null],[3,"AndEq","","",null,null],[12,"0","","",5,null],[3,"At","","",null,null],[12,"0","","",6,null],[3,"Bang","","",null,null],[12,"0","","",7,null],[3,"Caret","","",null,null],[12,"0","","",8,null],[3,"CaretEq","","",null,null],[12,"0","","",9,null],[3,"Colon","","",null,null],[12,"0","","",10,null],[3,"Colon2","","",null,null],[12,"0","","",11,null],[3,"Comma","","",null,null],[12,"0","","",12,null],[3,"Div","","",null,null],[12,"0","","",13,null],[3,"DivEq","","",null,null],[12,"0","","",14,null],[3,"Dot","","",null,null],[12,"0","","",15,null],[3,"Dot2","","",null,null],[12,"0","","",16,null],[3,"Dot3","","",null,null],[12,"0","","",17,null],[3,"Eq","","",null,null],[12,"0","","",18,null],[3,"EqEq","","",null,null],[12,"0","","",19,null],[3,"Ge","","",null,null],[12,"0","","",20,null],[3,"Gt","","",null,null],[12,"0","","",21,null],[3,"Le","","",null,null],[12,"0","","",22,null],[3,"Lt","","",null,null],[12,"0","","",23,null],[3,"MulEq","","",null,null],[12,"0","","",24,null],[3,"Ne","","",null,null],[12,"0","","",25,null],[3,"Or","","",null,null],[12,"0","","",26,null],[3,"OrEq","","",null,null],[12,"0","","",27,null],[3,"OrOr","","",null,null],[12,"0","","",28,null],[3,"Pound","","",null,null],[12,"0","","",29,null],[3,"Question","","",null,null],[12,"0","","",30,null],[3,"RArrow","","",null,null],[12,"0","","",31,null],[3,"LArrow","","",null,null],[12,"0","","",32,null],[3,"Rem","","",null,null],[12,"0","","",33,null],[3,"RemEq","","",null,null],[12,"0","","",34,null],[3,"Rocket","","",null,null],[12,"0","","",35,null],[3,"Semi","","",null,null],[12,"0","","",36,null],[3,"Shl","","",null,null],[12,"0","","",37,null],[3,"ShlEq","","",null,null],[12,"0","","",38,null],[3,"Shr","","",null,null],[12,"0","","",39,null],[3,"ShrEq","","",null,null],[12,"0","","",40,null],[3,"Star","","",null,null],[12,"0","","",41,null],[3,"Sub","","",null,null],[12,"0","","",42,null],[3,"SubEq","","",null,null],[12,"0","","",43,null],[3,"Underscore","","",null,null],[12,"0","","",44,null],[3,"Brace","","",null,null],[12,"0","","",45,null],[3,"Bracket","","",null,null],[12,"0","","",46,null],[3,"Paren","","",null,null],[12,"0","","",47,null],[3,"Group","","",null,null],[12,"0","","",48,null],[3,"As","","",null,null],[12,"0","","",49,null],[3,"Box_","","",null,null],[12,"0","","",50,null],[3,"Break","","",null,null],[12,"0","","",51,null],[3,"CapSelf","","",null,null],[12,"0","","",52,null],[3,"Catch","","",null,null],[12,"0","","",53,null],[3,"Const","","",null,null],[12,"0","","",54,null],[3,"Continue","","",null,null],[12,"0","","",55,null],[3,"Crate","","",null,null],[12,"0","","",56,null],[3,"Default_","","",null,null],[12,"0","","",57,null],[3,"Do","","",null,null],[12,"0","","",58,null],[3,"Else","","",null,null],[12,"0","","",59,null],[3,"Enum","","",null,null],[12,"0","","",60,null],[3,"Extern","","",null,null],[12,"0","","",61,null],[3,"Fn_","","",null,null],[12,"0","","",62,null],[3,"For","","",null,null],[12,"0","","",63,null],[3,"If","","",null,null],[12,"0","","",64,null],[3,"Impl","","",null,null],[12,"0","","",65,null],[3,"In","","",null,null],[12,"0","","",66,null],[3,"Let","","",null,null],[12,"0","","",67,null],[3,"Loop","","",null,null],[12,"0","","",68,null],[3,"Match","","",null,null],[12,"0","","",69,null],[3,"Mod","","",null,null],[12,"0","","",70,null],[3,"Move","","",null,null],[12,"0","","",71,null],[3,"Mut","","",null,null],[12,"0","","",72,null],[3,"Pub","","",null,null],[12,"0","","",73,null],[3,"Ref","","",null,null],[12,"0","","",74,null],[3,"Return","","",null,null],[12,"0","","",75,null],[3,"Self_","","",null,null],[12,"0","","",76,null],[3,"Static","","",null,null],[12,"0","","",77,null],[3,"Struct","","",null,null],[12,"0","","",78,null],[3,"Super","","",null,null],[12,"0","","",79,null],[3,"Trait","","",null,null],[12,"0","","",80,null],[3,"Type","","",null,null],[12,"0","","",81,null],[3,"Union","","",null,null],[12,"0","","",82,null],[3,"Unsafe","","",null,null],[12,"0","","",83,null],[3,"Use","","",null,null],[12,"0","","",84,null],[3,"Where","","",null,null],[12,"0","","",85,null],[3,"While","","",null,null],[12,"0","","",86,null],[3,"Yield","","",null,null],[12,"0","","",87,null],[0,"delimited","futures_await_syn","",null,null],[3,"Delimited","futures_await_syn::delimited","",null,null],[3,"Iter","","",null,null],[3,"IterMut","","",null,null],[3,"Items","","",null,null],[3,"IntoIter","","",null,null],[4,"Element","","",null,null],[13,"Delimited","","",88,null],[13,"End","","",88,null],[3,"ParseError","futures_await_syn","",null,null],[3,"Attribute","","Doc-comments are promoted to attributes that have `is_sugared_doc` = true",null,null],[12,"style","","",89,null],[12,"pound_token","","",89,null],[12,"bracket_token","","",89,null],[12,"path","","The path of the attribute.",89,null],[12,"tts","","Any tokens after the path.",89,null],[12,"is_sugared_doc","","",89,null],[3,"MetaItemList","","List meta item.",null,null],[12,"ident","","Name of this attribute.",90,null],[12,"paren_token","","",90,null],[12,"nested","","Arguments to this attribute",90,null],[3,"MetaNameValue","","Name-value meta item.",null,null],[12,"ident","","Name of this attribute.",91,null],[12,"eq_token","","",91,null],[12,"lit","","Arguments to this attribute",91,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"ident","","Name of the field, if any.",92,null],[12,"vis","","Visibility of the field.",92,null],[12,"attrs","","Attributes tagged on the field.",92,null],[12,"ty","","Type of the field.",92,null],[12,"colon_token","","",92,null],[3,"Variant","","An enum variant.",null,null],[12,"ident","","Name of the variant.",93,null],[12,"attrs","","Attributes tagged on the variant.",93,null],[12,"data","","Type of variant.",93,null],[12,"discriminant","","Explicit discriminant, e.g. `Foo = 1`",93,null],[12,"eq_token","","",93,null],[3,"VisRestricted","","Restricted, e.g. `pub(self)` or `pub(super)` or `pub(in some::module)`.",null,null],[12,"pub_token","","",94,null],[12,"paren_token","","",94,null],[12,"in_token","","",94,null],[12,"path","","",94,null],[3,"VisCrate","","Crate-visible, i.e. `pub(crate)`.",null,null],[12,"pub_token","","",95,null],[12,"paren_token","","",95,null],[12,"crate_token","","",95,null],[3,"VisPublic","","Public, i.e. `pub`.",null,null],[12,"pub_token","","",96,null],[3,"VisInherited","","Inherited, i.e. private.",null,null],[3,"Expr","","An expression.",null,null],[12,"node","","Type of the expression.",97,null],[12,"attrs","","Attributes tagged on the expression.",97,null],[3,"ExprBox","","A `box x` expression.",null,null],[12,"expr","","",98,null],[12,"box_token","","",98,null],[3,"ExprInPlace","","E.g. 'place <- val' or `in place { val }`.",null,null],[12,"place","","",99,null],[12,"kind","","",99,null],[12,"value","","",99,null],[3,"ExprArray","","An array, e.g. `[a, b, c, d]`.",null,null],[12,"exprs","","",100,null],[12,"bracket_token","","",100,null],[3,"ExprCall","","A function call.",null,null],[12,"func","","",101,null],[12,"args","","",101,null],[12,"paren_token","","",101,null],[3,"ExprMethodCall","","A method call (`x.foo::<Bar, Baz>(a, b, c, d)`)",null,null],[12,"expr","","",102,null],[12,"method","","",102,null],[12,"typarams","","",102,null],[12,"args","","",102,null],[12,"paren_token","","",102,null],[12,"dot_token","","",102,null],[12,"lt_token","","",102,null],[12,"colon2_token","","",102,null],[12,"gt_token","","",102,null],[3,"ExprTup","","A tuple, e.g. `(a, b, c, d)`.",null,null],[12,"args","","",103,null],[12,"paren_token","","",103,null],[12,"lone_comma","","",103,null],[3,"ExprBinary","","A binary operation, e.g. `a + b`, `a * b`.",null,null],[12,"op","","",104,null],[12,"left","","",104,null],[12,"right","","",104,null],[3,"ExprUnary","","A unary operation, e.g. `!x`, `*x`.",null,null],[12,"op","","",105,null],[12,"expr","","",105,null],[3,"ExprCast","","A cast, e.g. `foo as f64`.",null,null],[12,"expr","","",106,null],[12,"as_token","","",106,null],[12,"ty","","",106,null],[3,"ExprType","","A type ascription, e.g. `foo: f64`.",null,null],[12,"expr","","",107,null],[12,"colon_token","","",107,null],[12,"ty","","",107,null],[3,"ExprIf","","An `if` block, with an optional else block",null,null],[12,"cond","","",108,null],[12,"if_true","","",108,null],[12,"if_false","","",108,null],[12,"if_token","","",108,null],[12,"else_token","","",108,null],[3,"ExprIfLet","","An `if let` expression with an optional else block",null,null],[12,"pat","","",109,null],[12,"expr","","",109,null],[12,"if_true","","",109,null],[12,"if_false","","",109,null],[12,"if_token","","",109,null],[12,"let_token","","",109,null],[12,"eq_token","","",109,null],[12,"else_token","","",109,null],[3,"ExprWhile","","A while loop, with an optional label",null,null],[12,"cond","","",110,null],[12,"body","","",110,null],[12,"label","","",110,null],[12,"colon_token","","",110,null],[12,"while_token","","",110,null],[3,"ExprWhileLet","","A while-let loop, with an optional label.",null,null],[12,"pat","","",111,null],[12,"expr","","",111,null],[12,"body","","",111,null],[12,"label","","",111,null],[12,"colon_token","","",111,null],[12,"while_token","","",111,null],[12,"let_token","","",111,null],[12,"eq_token","","",111,null],[3,"ExprForLoop","","A for loop, with an optional label.",null,null],[12,"pat","","",112,null],[12,"expr","","",112,null],[12,"body","","",112,null],[12,"label","","",112,null],[12,"for_token","","",112,null],[12,"colon_token","","",112,null],[12,"in_token","","",112,null],[3,"ExprLoop","","Conditionless loop with an optional label.",null,null],[12,"body","","",113,null],[12,"label","","",113,null],[12,"loop_token","","",113,null],[12,"colon_token","","",113,null],[3,"ExprMatch","","A `match` block.",null,null],[12,"match_token","","",114,null],[12,"brace_token","","",114,null],[12,"expr","","",114,null],[12,"arms","","",114,null],[3,"ExprClosure","","A closure (for example, `move |a, b, c| a + b + c`)",null,null],[12,"capture","","",115,null],[12,"decl","","",115,null],[12,"body","","",115,null],[12,"or1_token","","",115,null],[12,"or2_token","","",115,null],[3,"ExprBlock","","A block (`{ ... }` or `unsafe { ... }`)",null,null],[12,"unsafety","","",116,null],[12,"block","","",116,null],[3,"ExprAssign","","An assignment (`a = foo()`)",null,null],[12,"left","","",117,null],[12,"right","","",117,null],[12,"eq_token","","",117,null],[3,"ExprAssignOp","","An assignment with an operator",null,null],[12,"op","","",118,null],[12,"left","","",118,null],[12,"right","","",118,null],[3,"ExprField","","Access of a named struct field (`obj.foo`)",null,null],[12,"expr","","",119,null],[12,"field","","",119,null],[12,"dot_token","","",119,null],[3,"ExprTupField","","Access of an unnamed field of a struct or tuple-struct",null,null],[12,"expr","","",120,null],[12,"field","","",120,null],[12,"dot_token","","",120,null],[3,"ExprIndex","","An indexing operation (`foo[2]`)",null,null],[12,"expr","","",121,null],[12,"index","","",121,null],[12,"bracket_token","","",121,null],[3,"ExprRange","","A range (`1..2`, `1..`, `..2`, `1...2`, `1...`, `...2`)",null,null],[12,"from","","",122,null],[12,"to","","",122,null],[12,"limits","","",122,null],[3,"ExprPath","","Variable reference, possibly containing `::` and/or type parameters, e.g. foo::bar::.",null,null],[12,"qself","","",123,null],[12,"path","","",123,null],[3,"ExprAddrOf","","A referencing operation (`&a` or `&mut a`)",null,null],[12,"and_token","","",124,null],[12,"mutbl","","",124,null],[12,"expr","","",124,null],[3,"ExprBreak","","A `break`, with an optional label to break, and an optional expression",null,null],[12,"label","","",125,null],[12,"expr","","",125,null],[12,"break_token","","",125,null],[3,"ExprContinue","","A `continue`, with an optional label",null,null],[12,"label","","",126,null],[12,"continue_token","","",126,null],[3,"ExprRet","","A `return`, with an optional value to be returned",null,null],[12,"expr","","",127,null],[12,"return_token","","",127,null],[3,"ExprStruct","","A struct literal expression.",null,null],[12,"path","","",128,null],[12,"fields","","",128,null],[12,"rest","","",128,null],[12,"dot2_token","","",128,null],[12,"brace_token","","",128,null],[3,"ExprRepeat","","An array literal constructed from one repeated element.",null,null],[12,"bracket_token","","",129,null],[12,"semi_token","","",129,null],[12,"expr","","",129,null],[12,"amt","","",129,null],[3,"ExprParen","","No-op: used solely so we can pretty-print faithfully",null,null],[12,"expr","","",130,null],[12,"paren_token","","",130,null],[3,"ExprTry","","`expr?`",null,null],[12,"expr","","",131,null],[12,"question_token","","",131,null],[3,"ExprCatch","","A catch expression.",null,null],[12,"do_token","","",132,null],[12,"catch_token","","",132,null],[12,"block","","",132,null],[3,"ExprGroup","","No-op: used solely so we can pretty-print faithfully",null,null],[12,"expr","","",133,null],[12,"group_token","","",133,null],[3,"ExprYield","","A yield expression.",null,null],[12,"yield_token","","",134,null],[12,"expr","","",134,null],[3,"Arm","","An arm of a 'match'.",null,null],[12,"attrs","","",135,null],[12,"pats","","",135,null],[12,"if_token","","",135,null],[12,"guard","","",135,null],[12,"rocket_token","","",135,null],[12,"body","","",135,null],[12,"comma","","",135,null],[3,"Block","","A Block (`{ .. }`).",null,null],[12,"brace_token","","",136,null],[12,"stmts","","Statements in a block",136,null],[3,"FieldPat","","A single field in a struct pattern",null,null],[12,"ident","","The identifier for the field",137,null],[12,"pat","","The pattern the field is destructured to",137,null],[12,"is_shorthand","","",137,null],[12,"colon_token","","",137,null],[12,"attrs","","",137,null],[3,"FieldValue","","A field-value pair in a struct literal.",null,null],[12,"ident","","Name of the field.",138,null],[12,"expr","","Value of the field.",138,null],[12,"is_shorthand","","Whether this is a shorthand field, e.g. `Struct { x }` instead of `Struct { x: x }`.",138,null],[12,"attrs","","Attributes tagged on the field.",138,null],[12,"colon_token","","",138,null],[3,"Local","","Local represents a `let` statement, e.g., `let <pat>:<ty> = <expr>;`",null,null],[12,"let_token","","",139,null],[12,"colon_token","","",139,null],[12,"eq_token","","",139,null],[12,"semi_token","","",139,null],[12,"pat","","",139,null],[12,"ty","","",139,null],[12,"init","","Initializer expression to set the value, if any",139,null],[12,"attrs","","",139,null],[3,"PatIdent","","A `Pat::Ident` may either be a new bound variable (`ref mut binding @ OPT_SUBPATTERN`), or a unit struct/variant pattern, or a const pattern (in the last two cases the third field must be `None`). Disambiguation cannot be done with parser alone, so it happens during name resolution.",null,null],[12,"mode","","",140,null],[12,"ident","","",140,null],[12,"subpat","","",140,null],[12,"at_token","","",140,null],[3,"PatWild","","Represents a wildcard pattern (`_`)",null,null],[12,"underscore_token","","",141,null],[3,"PatStruct","","A struct or struct variant pattern, e.g. `Variant {x, y, ..}`. The `bool` is `true` in the presence of a `..`.",null,null],[12,"path","","",142,null],[12,"fields","","",142,null],[12,"brace_token","","",142,null],[12,"dot2_token","","",142,null],[3,"PatTuple","","A tuple pattern `(a, b)`. If the `..` pattern fragment is present, then `Option<usize>` denotes its position. 0 <= position <= subpats.len()",null,null],[12,"pats","","",143,null],[12,"dots_pos","","",143,null],[12,"paren_token","","",143,null],[12,"dot2_token","","",143,null],[12,"comma_token","","",143,null],[3,"PatTupleStruct","","A tuple struct/variant pattern `Variant(x, y, .., z)`. If the `..` pattern fragment is present, then `Option<usize>` denotes its position. 0 <= position <= subpats.len()",null,null],[12,"path","","",144,null],[12,"pat","","",144,null],[3,"PatPath","","A possibly qualified path pattern. Unquailfied path patterns `A::B::C` can legally refer to variants, structs, constants or associated constants. Quailfied path patterns `<A>::B::C`/`<A as Trait>::B::C` can only legally refer to associated constants.",null,null],[12,"qself","","",145,null],[12,"path","","",145,null],[3,"PatBox","","A `box` pattern",null,null],[12,"pat","","",146,null],[12,"box_token","","",146,null],[3,"PatRef","","A reference pattern, e.g. `&mut (a, b)`",null,null],[12,"pat","","",147,null],[12,"mutbl","","",147,null],[12,"and_token","","",147,null],[3,"PatLit","","A literal",null,null],[12,"expr","","",148,null],[3,"PatRange","","A range pattern, e.g. `1...2`",null,null],[12,"lo","","",149,null],[12,"hi","","",149,null],[12,"limits","","",149,null],[3,"PatSlice","","`[a, b, i.., y, z]` is represented as:",null,null],[12,"front","","",150,null],[12,"middle","","",150,null],[12,"back","","",150,null],[12,"dot2_token","","",150,null],[12,"comma_token","","",150,null],[12,"bracket_token","","",150,null],[3,"Generics","","Represents lifetimes and type parameters attached to a declaration of a function, enum, trait, etc.",null,null],[12,"lt_token","","",151,null],[12,"gt_token","","",151,null],[12,"lifetimes","","",151,null],[12,"ty_params","","",151,null],[12,"where_clause","","",151,null],[3,"LifetimeDef","","A lifetime definition, e.g. `'a: 'b+'c+'d`",null,null],[12,"attrs","","",152,null],[12,"lifetime","","",152,null],[12,"colon_token","","",152,null],[12,"bounds","","",152,null],[3,"TyParam","","A generic type parameter, e.g. `T: Into<String>`.",null,null],[12,"attrs","","",153,null],[12,"ident","","",153,null],[12,"colon_token","","",153,null],[12,"bounds","","",153,null],[12,"eq_token","","",153,null],[12,"default","","",153,null],[3,"WhereBoundPredicate","","A type binding, e.g. `for<'c> Foo: Send+Clone+'c`",null,null],[12,"bound_lifetimes","","Any lifetimes from a `for` binding",154,null],[12,"bounded_ty","","The type being bounded",154,null],[12,"colon_token","","",154,null],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",154,null],[3,"WhereClause","","A `where` clause in a definition",null,null],[12,"where_token","","",155,null],[12,"predicates","","",155,null],[3,"WhereEqPredicate","","An equality predicate (unsupported)",null,null],[12,"lhs_ty","","",156,null],[12,"eq_token","","",156,null],[12,"rhs_ty","","",156,null],[3,"WhereRegionPredicate","","A lifetime predicate, e.g. `'a: 'b+'c`",null,null],[12,"lifetime","","",157,null],[12,"colon_token","","",157,null],[12,"bounds","","",157,null],[3,"BoundLifetimes","","A set of bound lifetimes, e.g. `for<'a, 'b, 'c>`",null,null],[12,"for_token","","",158,null],[12,"lt_token","","",158,null],[12,"lifetimes","","",158,null],[12,"gt_token","","",158,null],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Turbofish","","Returned by `TyGenerics::as_turbofish`.",null,null],[3,"TyGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Ident","","A word of Rust code, such as a keyword or variable name.",null,null],[12,"sym","","",159,null],[12,"span","","",159,null],[3,"FnDecl","","Header (not the body) of a function declaration.",null,null],[12,"fn_token","","",160,null],[12,"paren_token","","",160,null],[12,"inputs","","",160,null],[12,"output","","",160,null],[12,"generics","","",160,null],[12,"variadic","","",160,null],[12,"dot_tokens","","",160,null],[3,"ForeignItem","","",null,null],[12,"ident","","",161,null],[12,"attrs","","",161,null],[12,"node","","",161,null],[12,"vis","","",161,null],[12,"semi_token","","",161,null],[3,"ItemForeignMod","","An external module (`extern` or `pub extern`).",null,null],[12,"abi","","",162,null],[12,"brace_token","","",162,null],[12,"items","","",162,null],[3,"ImplItem","","",null,null],[12,"attrs","","",163,null],[12,"node","","",163,null],[3,"Item","","Things that can appear directly inside of a module.",null,null],[12,"attrs","","",164,null],[12,"node","","",164,null],[3,"MethodSig","","Represents a method's signature in a trait declaration, or in an implementation.",null,null],[12,"constness","","",165,null],[12,"unsafety","","",165,null],[12,"abi","","",165,null],[12,"ident","","",165,null],[12,"decl","","",165,null],[3,"PathListItem","","",null,null],[12,"name","","",166,null],[12,"rename","","renamed in list, e.g. `use foo::{bar as baz};`",166,null],[12,"as_token","","",166,null],[3,"TraitItem","","Represents an item declaration within a trait declaration, possibly including a default implementation. A trait item is either required (meaning it doesn't have an implementation, just a signature) or provided (meaning it has a default implementation).",null,null],[12,"attrs","","",167,null],[12,"node","","",167,null],[3,"ItemExternCrate","","An `extern crate` item, with optional original crate name.",null,null],[12,"vis","","",168,null],[12,"extern_token","","",168,null],[12,"crate_token","","",168,null],[12,"ident","","",168,null],[12,"rename","","",168,null],[12,"semi_token","","",168,null],[3,"ItemUse","","A use declaration (`use` or `pub use`) item.",null,null],[12,"vis","","",169,null],[12,"use_token","","",169,null],[12,"path","","",169,null],[12,"semi_token","","",169,null],[3,"ItemStatic","","A static item (`static` or `pub static`).",null,null],[12,"vis","","",170,null],[12,"static_token","","",170,null],[12,"mutbl","","",170,null],[12,"ident","","",170,null],[12,"colon_token","","",170,null],[12,"ty","","",170,null],[12,"eq_token","","",170,null],[12,"expr","","",170,null],[12,"semi_token","","",170,null],[3,"ItemConst","","A constant item (`const` or `pub const`).",null,null],[12,"vis","","",171,null],[12,"const_token","","",171,null],[12,"ident","","",171,null],[12,"colon_token","","",171,null],[12,"ty","","",171,null],[12,"eq_token","","",171,null],[12,"expr","","",171,null],[12,"semi_token","","",171,null],[3,"ItemFn","","A function declaration (`fn` or `pub fn`).",null,null],[12,"vis","","",172,null],[12,"constness","","",172,null],[12,"unsafety","","",172,null],[12,"abi","","",172,null],[12,"decl","","",172,null],[12,"ident","","",172,null],[12,"block","","",172,null],[3,"ItemMod","","A module declaration (`mod` or `pub mod`).",null,null],[12,"vis","","",173,null],[12,"mod_token","","",173,null],[12,"ident","","",173,null],[12,"content","","",173,null],[12,"semi","","",173,null],[3,"ItemTy","","A type alias (`type` or `pub type`).",null,null],[12,"vis","","",174,null],[12,"type_token","","",174,null],[12,"ident","","",174,null],[12,"generics","","",174,null],[12,"eq_token","","",174,null],[12,"ty","","",174,null],[12,"semi_token","","",174,null],[3,"ItemEnum","","An enum definition (`enum` or `pub enum`).",null,null],[12,"vis","","",175,null],[12,"enum_token","","",175,null],[12,"ident","","",175,null],[12,"generics","","",175,null],[12,"brace_token","","",175,null],[12,"variants","","",175,null],[3,"ItemStruct","","A struct definition (`struct` or `pub struct`).",null,null],[12,"vis","","",176,null],[12,"struct_token","","",176,null],[12,"ident","","",176,null],[12,"generics","","",176,null],[12,"data","","",176,null],[12,"semi_token","","",176,null],[3,"ItemUnion","","A union definition (`union` or `pub union`).",null,null],[12,"vis","","",177,null],[12,"union_token","","",177,null],[12,"ident","","",177,null],[12,"generics","","",177,null],[12,"data","","",177,null],[3,"ItemTrait","","A Trait declaration (`trait` or `pub trait`).",null,null],[12,"vis","","",178,null],[12,"unsafety","","",178,null],[12,"trait_token","","",178,null],[12,"ident","","",178,null],[12,"generics","","",178,null],[12,"colon_token","","",178,null],[12,"supertraits","","",178,null],[12,"brace_token","","",178,null],[12,"items","","",178,null],[3,"ItemDefaultImpl","","Default trait implementation.",null,null],[12,"unsafety","","",179,null],[12,"impl_token","","",179,null],[12,"path","","",179,null],[12,"for_token","","",179,null],[12,"dot2_token","","",179,null],[12,"brace_token","","",179,null],[3,"ItemImpl","","An implementation.",null,null],[12,"defaultness","","",180,null],[12,"unsafety","","",180,null],[12,"impl_token","","",180,null],[12,"generics","","",180,null],[12,"trait_","","Trait this impl implements.",180,null],[12,"self_ty","","The Self type of the impl.",180,null],[12,"brace_token","","",180,null],[12,"items","","",180,null],[3,"PathSimple","","`foo::bar::baz as quux`",null,null],[12,"path","","",181,null],[12,"as_token","","",181,null],[12,"rename","","",181,null],[3,"PathGlob","","`foo::bar::*`",null,null],[12,"path","","",182,null],[12,"colon2_token","","",182,null],[12,"star_token","","",182,null],[3,"PathList","","`foo::bar::{a, b, c}`",null,null],[12,"path","","",183,null],[12,"colon2_token","","",183,null],[12,"brace_token","","",183,null],[12,"items","","",183,null],[3,"ForeignItemFn","","A foreign function",null,null],[12,"decl","","",184,null],[3,"ForeignItemStatic","","A foreign static item (`static ext: u8`)",null,null],[12,"static_token","","",185,null],[12,"ty","","",185,null],[12,"colon_token","","",185,null],[12,"mutbl","","",185,null],[3,"TraitItemConst","","",null,null],[12,"const_token","","",186,null],[12,"ident","","",186,null],[12,"colon_token","","",186,null],[12,"ty","","",186,null],[12,"default","","",186,null],[12,"semi_token","","",186,null],[3,"TraitItemMethod","","",null,null],[12,"sig","","",187,null],[12,"default","","",187,null],[12,"semi_token","","",187,null],[3,"TraitItemType","","",null,null],[12,"type_token","","",188,null],[12,"ident","","",188,null],[12,"colon_token","","",188,null],[12,"bounds","","",188,null],[12,"default","","",188,null],[12,"semi_token","","",188,null],[3,"ImplItemConst","","",null,null],[12,"vis","","",189,null],[12,"defaultness","","",189,null],[12,"const_token","","",189,null],[12,"ident","","",189,null],[12,"colon_token","","",189,null],[12,"ty","","",189,null],[12,"eq_token","","",189,null],[12,"expr","","",189,null],[12,"semi_token","","",189,null],[3,"ImplItemMethod","","",null,null],[12,"vis","","",190,null],[12,"defaultness","","",190,null],[12,"sig","","",190,null],[12,"block","","",190,null],[3,"ImplItemType","","",null,null],[12,"vis","","",191,null],[12,"defaultness","","",191,null],[12,"type_token","","",191,null],[12,"ident","","",191,null],[12,"eq_token","","",191,null],[12,"ty","","",191,null],[12,"semi_token","","",191,null],[3,"ArgSelfRef","","",null,null],[12,"and_token","","",192,null],[12,"self_token","","",192,null],[12,"lifetime","","",192,null],[12,"mutbl","","",192,null],[3,"ArgSelf","","",null,null],[12,"mutbl","","",193,null],[12,"self_token","","",193,null],[3,"ArgCaptured","","",null,null],[12,"pat","","",194,null],[12,"colon_token","","",194,null],[12,"ty","","",194,null],[3,"File","","",null,null],[12,"shebang","","",195,null],[12,"attrs","","",195,null],[12,"items","","",195,null],[3,"Lifetime","","",null,null],[12,"sym","","",196,null],[12,"span","","",196,null],[3,"Lit","","",null,null],[12,"value","","",197,null],[12,"span","","",197,null],[3,"Mac","","Represents a macro invocation. The Path indicates which macro is being invoked, and the vector of token-trees contains the source of the macro invocation.",null,null],[12,"path","","",198,null],[12,"bang_token","","",198,null],[12,"ident","","The `example` in `macro_rules! example { ... }`.",198,null],[12,"tokens","","",198,null],[3,"TokenTree","","",null,null],[12,"0","","",199,null],[3,"DeriveInput","","Struct or enum sent to a `proc_macro_derive` macro.",null,null],[12,"ident","","Name of the struct or enum.",200,null],[12,"vis","","Visibility of the struct or enum.",200,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",200,null],[12,"generics","","Generics required to complete the definition.",200,null],[12,"body","","Data within the struct or enum.",200,null],[3,"BodyEnum","","It's an enum.",null,null],[12,"enum_token","","",201,null],[12,"brace_token","","",201,null],[12,"variants","","",201,null],[3,"BodyStruct","","It's a struct.",null,null],[12,"data","","",202,null],[12,"struct_token","","",202,null],[12,"semi_token","","",202,null],[3,"Abi","","",null,null],[12,"extern_token","","",203,null],[12,"kind","","",203,null],[3,"AngleBracketedParameterData","","A path like `Foo<'a, T>`",null,null],[12,"turbofish","","",204,null],[12,"lt_token","","",204,null],[12,"lifetimes","","The lifetime parameters for this path segment.",204,null],[12,"types","","The type parameters for this path segment, if present.",204,null],[12,"bindings","","Bindings (equality constraints) on associated types, if present.",204,null],[12,"gt_token","","",204,null],[3,"BareFnArg","","An argument in a function type.",null,null],[12,"name","","",205,null],[12,"ty","","",205,null],[3,"BareFnTy","","",null,null],[12,"lifetimes","","",206,null],[12,"unsafety","","",206,null],[12,"abi","","",206,null],[12,"fn_token","","",206,null],[12,"paren_token","","",206,null],[12,"inputs","","",206,null],[12,"variadic","","",206,null],[12,"output","","",206,null],[3,"MutTy","","",null,null],[12,"ty","","",207,null],[12,"mutability","","",207,null],[3,"ParenthesizedParameterData","","A path like `Foo(A,B) -> C`",null,null],[12,"paren_token","","",208,null],[12,"inputs","","`(A, B)`",208,null],[12,"output","","`C`",208,null],[3,"Path","","A \"Path\" is essentially Rust's notion of a name.",null,null],[12,"leading_colon","","A `::foo` path, is relative to the crate root rather than current module (like paths in an import).",209,null],[12,"segments","","The segments in the path: the things separated by `::`.",209,null],[3,"PathSegment","","A segment of a path: an identifier, an optional lifetime, and a set of types.",null,null],[12,"ident","","The identifier portion of this path segment.",210,null],[12,"parameters","","Type/lifetime parameters attached to this path. They come in two flavors: `Path<A,B,C>` and `Path(A,B) -> C`. Note that this is more than just simple syntactic sugar; the use of parens affects the region binding rules, so we preserve the distinction.",210,null],[3,"PolyTraitRef","","",null,null],[12,"bound_lifetimes","","The `for<'a>` in `for<'a> Foo<&'a T>`",211,null],[12,"trait_ref","","The `Foo<&'a T>` in `<'a> Foo<&'a T>`",211,null],[3,"QSelf","","The explicit Self type in a \"qualified path\". The actual path, including the trait and the associated item, is stored separately. `position` represents the index of the associated item qualified with this Self type.",null,null],[12,"lt_token","","",212,null],[12,"ty","","",212,null],[12,"position","","",212,null],[12,"as_token","","",212,null],[12,"gt_token","","",212,null],[3,"TypeBinding","","Bind a type to an associated type: `A=Foo`.",null,null],[12,"ident","","",213,null],[12,"eq_token","","",213,null],[12,"ty","","",213,null],[3,"TySlice","","A variable-length array (`[T]`)",null,null],[12,"ty","","",214,null],[12,"bracket_token","","",214,null],[3,"TyArray","","A fixed length array (`[T; n]`)",null,null],[12,"bracket_token","","",215,null],[12,"ty","","",215,null],[12,"semi_token","","",215,null],[12,"amt","","",215,null],[3,"TyPtr","","A raw pointer (`*const T` or `*mut T`)",null,null],[12,"star_token","","",216,null],[12,"const_token","","",216,null],[12,"ty","","",216,null],[3,"TyRptr","","A reference (`&'a T` or `&'a mut T`)",null,null],[12,"and_token","","",217,null],[12,"lifetime","","",217,null],[12,"ty","","",217,null],[3,"TyBareFn","","A bare function (e.g. `fn(usize) -> bool`)",null,null],[12,"ty","","",218,null],[3,"TyNever","","The never type (`!`)",null,null],[12,"bang_token","","",219,null],[3,"TyTup","","A tuple (`(A, B, C, D, ...)`)",null,null],[12,"paren_token","","",220,null],[12,"tys","","",220,null],[12,"lone_comma","","",220,null],[3,"TyPath","","A path (`module::module::...::Type`), optionally \"qualified\", e.g. `<Vec<T> as SomeTrait>::SomeType`.",null,null],[12,"qself","","",221,null],[12,"path","","",221,null],[3,"TyTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a trait or a lifetime.",null,null],[12,"bounds","","",222,null],[3,"TyImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or a lifetime.",null,null],[12,"impl_token","","",223,null],[12,"bounds","","",223,null],[3,"TyParen","","No-op; kept solely so that we can pretty-print faithfully",null,null],[12,"paren_token","","",224,null],[12,"ty","","",224,null],[3,"TyInfer","","TyKind::Infer means the type should be inferred instead of it having been specified. This can appear anywhere in a type.",null,null],[12,"underscore_token","","",225,null],[3,"TyGroup","","No-op: kept solely so that we can pretty-print faithfully",null,null],[12,"group_token","","",226,null],[12,"ty","","",226,null],[3,"PathTokens","","",null,null],[12,"0","","",227,null],[12,"1","","",227,null],[4,"AttrStyle","","Distinguishes between Attributes that decorate items and Attributes that are contained as statements within items. These two cases need to be distinguished for pretty-printing.",null,null],[13,"Outer","","Attribute of the form `#[...]`.",228,null],[13,"Inner","","Attribute of the form `#![...]`.",228,null],[4,"MetaItem","","A compile-time attribute item.",null,null],[13,"Term","","Term meta item.",229,null],[13,"List","","List meta item.",229,null],[13,"NameValue","","Name-value meta item.",229,null],[4,"NestedMetaItem","","Possible values inside of compile-time attribute lists.",null,null],[13,"MetaItem","","A full `MetaItem`.",230,null],[13,"Literal","","A Rust literal.",230,null],[4,"VariantData","","Data stored within an enum variant or struct.",null,null],[13,"Struct","","Struct variant, e.g. `Point { x: f64, y: f64 }`.",231,null],[13,"Tuple","","Tuple variant, e.g. `Some(T)`.",231,null],[13,"Unit","","Unit variant, e.g. `None`.",231,null],[4,"Visibility","","Visibility level of an item.",null,null],[13,"Public","","Public, i.e. `pub`.",232,null],[13,"Crate","","Crate-visible, i.e. `pub(crate)`.",232,null],[13,"Restricted","","Restricted, e.g. `pub(self)` or `pub(super)` or `pub(in some::module)`.",232,null],[13,"Inherited","","Inherited, i.e. private.",232,null],[4,"ExprKind","","",null,null],[13,"Box","","A `box x` expression.",233,null],[13,"InPlace","","E.g. 'place <- val' or `in place { val }`.",233,null],[13,"Array","","An array, e.g. `[a, b, c, d]`.",233,null],[13,"Call","","A function call.",233,null],[13,"MethodCall","","A method call (`x.foo::<Bar, Baz>(a, b, c, d)`)",233,null],[13,"Tup","","A tuple, e.g. `(a, b, c, d)`.",233,null],[13,"Binary","","A binary operation, e.g. `a + b`, `a * b`.",233,null],[13,"Unary","","A unary operation, e.g. `!x`, `*x`.",233,null],[13,"Lit","","A literal, e.g. `1`, `\"foo\"`.",233,null],[13,"Cast","","A cast, e.g. `foo as f64`.",233,null],[13,"Type","","A type ascription, e.g. `foo: f64`.",233,null],[13,"If","","An `if` block, with an optional else block",233,null],[13,"IfLet","","An `if let` expression with an optional else block",233,null],[13,"While","","A while loop, with an optional label",233,null],[13,"WhileLet","","A while-let loop, with an optional label.",233,null],[13,"ForLoop","","A for loop, with an optional label.",233,null],[13,"Loop","","Conditionless loop with an optional label.",233,null],[13,"Match","","A `match` block.",233,null],[13,"Closure","","A closure (for example, `move |a, b, c| a + b + c`)",233,null],[13,"Block","","A block (`{ ... }` or `unsafe { ... }`)",233,null],[13,"Assign","","An assignment (`a = foo()`)",233,null],[13,"AssignOp","","An assignment with an operator",233,null],[13,"Field","","Access of a named struct field (`obj.foo`)",233,null],[13,"TupField","","Access of an unnamed field of a struct or tuple-struct",233,null],[13,"Index","","An indexing operation (`foo[2]`)",233,null],[13,"Range","","A range (`1..2`, `1..`, `..2`, `1...2`, `1...`, `...2`)",233,null],[13,"Path","","Variable reference, possibly containing `::` and/or type parameters, e.g. foo::bar::.",233,null],[13,"AddrOf","","A referencing operation (`&a` or `&mut a`)",233,null],[13,"Break","","A `break`, with an optional label to break, and an optional expression",233,null],[13,"Continue","","A `continue`, with an optional label",233,null],[13,"Ret","","A `return`, with an optional value to be returned",233,null],[13,"Mac","","A macro invocation; pre-expansion",233,null],[13,"Struct","","A struct literal expression.",233,null],[13,"Repeat","","An array literal constructed from one repeated element.",233,null],[13,"Paren","","No-op: used solely so we can pretty-print faithfully",233,null],[13,"Group","","No-op: used solely so we can pretty-print faithfully",233,null],[13,"Try","","`expr?`",233,null],[13,"Catch","","A catch expression.",233,null],[13,"Yield","","A yield expression.",233,null],[4,"BindingMode","","",null,null],[13,"ByRef","","",234,null],[13,"ByValue","","",234,null],[4,"CaptureBy","","A capture clause",null,null],[13,"Value","","",235,null],[13,"Ref","","",235,null],[4,"MacStmtStyle","","How a macro was invoked.",null,null],[13,"Semicolon","","The macro statement had a trailing semicolon, e.g. `foo! { ... };` `foo!(...);`, `foo![...];`",236,null],[13,"Braces","","The macro statement had braces; e.g. foo! { ... }",236,null],[13,"NoBraces","","The macro statement had parentheses or brackets and no semicolon; e.g. `foo!(...)`. All of these will end up being converted into macro expressions.",236,null],[4,"Pat","","",null,null],[13,"Wild","","Represents a wildcard pattern (`_`)",237,null],[13,"Ident","","A `Pat::Ident` may either be a new bound variable (`ref mut binding @ OPT_SUBPATTERN`), or a unit struct/variant pattern, or a const pattern (in the last two cases the third field must be `None`). Disambiguation cannot be done with parser alone, so it happens during name resolution.",237,null],[13,"Struct","","A struct or struct variant pattern, e.g. `Variant {x, y, ..}`. The `bool` is `true` in the presence of a `..`.",237,null],[13,"TupleStruct","","A tuple struct/variant pattern `Variant(x, y, .., z)`. If the `..` pattern fragment is present, then `Option<usize>` denotes its position. 0 <= position <= subpats.len()",237,null],[13,"Path","","A possibly qualified path pattern. Unquailfied path patterns `A::B::C` can legally refer to variants, structs, constants or associated constants. Quailfied path patterns `<A>::B::C`/`<A as Trait>::B::C` can only legally refer to associated constants.",237,null],[13,"Tuple","","A tuple pattern `(a, b)`. If the `..` pattern fragment is present, then `Option<usize>` denotes its position. 0 <= position <= subpats.len()",237,null],[13,"Box","","A `box` pattern",237,null],[13,"Ref","","A reference pattern, e.g. `&mut (a, b)`",237,null],[13,"Lit","","A literal",237,null],[13,"Range","","A range pattern, e.g. `1...2`",237,null],[13,"Slice","","`[a, b, i.., y, z]` is represented as:",237,null],[13,"Mac","","A macro pattern; pre-expansion",237,null],[4,"RangeLimits","","Limit types of a range (inclusive or exclusive)",null,null],[13,"HalfOpen","","Inclusive at the beginning, exclusive at the end",238,null],[13,"Closed","","Inclusive at the beginning and end",238,null],[4,"Stmt","","A statement, usually ending in a semicolon.",null,null],[13,"Local","","A local (let) binding.",239,null],[13,"Item","","An item definition.",239,null],[13,"Expr","","Expr without trailing semicolon.",239,null],[13,"Semi","","Expression with trailing semicolon;",239,null],[13,"Mac","","Macro invocation.",239,null],[4,"InPlaceKind","","",null,null],[13,"Arrow","","",240,null],[13,"In","","",240,null],[4,"TraitBoundModifier","","A modifier on a bound, currently this is only used for `?Sized`, where the modifier is `Maybe`. Negative bounds should also be handled here.",null,null],[13,"None","","",241,null],[13,"Maybe","","",241,null],[4,"TyParamBound","","The AST represents all type param bounds as types. `typeck::collect::compute_bounds` matches these against the \"special\" built-in traits (see `middle::lang_items`) and detects Copy, Send and Sync.",null,null],[13,"Trait","","",242,null],[13,"Region","","",242,null],[4,"WherePredicate","","A single predicate in a `where` clause",null,null],[13,"BoundPredicate","","A type binding, e.g. `for<'c> Foo: Send+Clone+'c`",243,null],[13,"RegionPredicate","","A lifetime predicate, e.g. `'a: 'b+'c`",243,null],[13,"EqPredicate","","An equality predicate (unsupported)",243,null],[4,"Constness","","",null,null],[13,"Const","","",244,null],[13,"NotConst","","",244,null],[4,"Defaultness","","",null,null],[13,"Default","","",245,null],[13,"Final","","",245,null],[4,"FnArg","","An argument in a function header.",null,null],[13,"SelfRef","","",246,null],[13,"SelfValue","","",246,null],[13,"Captured","","",246,null],[13,"Ignored","","",246,null],[4,"ForeignItemKind","","An item within an `extern` block",null,null],[13,"Fn","","A foreign function",247,null],[13,"Static","","A foreign static item (`static ext: u8`)",247,null],[4,"ImplItemKind","","",null,null],[13,"Const","","",248,null],[13,"Method","","",248,null],[13,"Type","","",248,null],[13,"Macro","","",248,null],[4,"ImplPolarity","","",null,null],[13,"Positive","","`impl Trait for Type`",249,null],[13,"Negative","","`impl !Trait for Type`",249,null],[4,"ItemKind","","",null,null],[13,"ExternCrate","","An `extern crate` item, with optional original crate name.",250,null],[13,"Use","","A use declaration (`use` or `pub use`) item.",250,null],[13,"Static","","A static item (`static` or `pub static`).",250,null],[13,"Const","","A constant item (`const` or `pub const`).",250,null],[13,"Fn","","A function declaration (`fn` or `pub fn`).",250,null],[13,"Mod","","A module declaration (`mod` or `pub mod`).",250,null],[13,"ForeignMod","","An external module (`extern` or `pub extern`).",250,null],[13,"Ty","","A type alias (`type` or `pub type`).",250,null],[13,"Enum","","An enum definition (`enum` or `pub enum`).",250,null],[13,"Struct","","A struct definition (`struct` or `pub struct`).",250,null],[13,"Union","","A union definition (`union` or `pub union`).",250,null],[13,"Trait","","A Trait declaration (`trait` or `pub trait`).",250,null],[13,"DefaultImpl","","Default trait implementation.",250,null],[13,"Impl","","An implementation.",250,null],[13,"Mac","","A macro invocation (which includes macro definition).",250,null],[4,"TraitItemKind","","",null,null],[13,"Const","","",251,null],[13,"Method","","",251,null],[13,"Type","","",251,null],[13,"Macro","","",251,null],[4,"ViewPath","","",null,null],[13,"Simple","","`foo::bar::baz as quux`",252,null],[13,"Glob","","`foo::bar::*`",252,null],[13,"List","","`foo::bar::{a, b, c}`",252,null],[4,"LitKind","","",null,null],[13,"Bool","","",253,null],[13,"Other","","",253,null],[4,"Body","","Body of a derived struct or enum.",null,null],[13,"Enum","","It's an enum.",254,null],[13,"Struct","","It's a struct.",254,null],[4,"BinOp","","",null,null],[13,"Add","","The `+` operator (addition)",255,null],[13,"Sub","","The `-` operator (subtraction)",255,null],[13,"Mul","","The `*` operator (multiplication)",255,null],[13,"Div","","The `/` operator (division)",255,null],[13,"Rem","","The `%` operator (modulus)",255,null],[13,"And","","The `&&` operator (logical and)",255,null],[13,"Or","","The `||` operator (logical or)",255,null],[13,"BitXor","","The `^` operator (bitwise xor)",255,null],[13,"BitAnd","","The `&` operator (bitwise and)",255,null],[13,"BitOr","","The `|` operator (bitwise or)",255,null],[13,"Shl","","The `<<` operator (shift left)",255,null],[13,"Shr","","The `>>` operator (shift right)",255,null],[13,"Eq","","The `==` operator (equality)",255,null],[13,"Lt","","The `<` operator (less than)",255,null],[13,"Le","","The `<=` operator (less than or equal to)",255,null],[13,"Ne","","The `!=` operator (not equal to)",255,null],[13,"Ge","","The `>=` operator (greater than or equal to)",255,null],[13,"Gt","","The `>` operator (greater than)",255,null],[13,"AddEq","","The `+=` operator",255,null],[13,"SubEq","","The `-=` operator",255,null],[13,"MulEq","","The `*=` operator",255,null],[13,"DivEq","","The `/=` operator",255,null],[13,"RemEq","","The `%=` operator",255,null],[13,"BitXorEq","","The `^=` operator",255,null],[13,"BitAndEq","","The `&=` operator",255,null],[13,"BitOrEq","","The `|=` operator",255,null],[13,"ShlEq","","The `<<=` operator",255,null],[13,"ShrEq","","The `>>=` operator",255,null],[4,"UnOp","","",null,null],[13,"Deref","","The `*` operator for dereferencing",256,null],[13,"Not","","The `!` operator for logical inversion",256,null],[13,"Neg","","The `-` operator for negation",256,null],[4,"AbiKind","","",null,null],[13,"Named","","",257,null],[13,"Default","","",257,null],[4,"BareFnArgName","","Names of arguments in the `BareFnArg` structure",null,null],[13,"Named","","Argument with the provided name",258,null],[13,"Wild","","Argument matched with `_`",258,null],[4,"FunctionRetTy","","",null,null],[13,"Default","","Return type is not specified.",259,null],[13,"Ty","","Everything else",259,null],[4,"Mutability","","",null,null],[13,"Mutable","","",260,null],[13,"Immutable","","",260,null],[4,"PathParameters","","Parameters of a path segment.",null,null],[13,"None","","",261,null],[13,"AngleBracketed","","The `<'a, A, B, C>` in `foo::bar::baz::<'a, A, B, C>`",261,null],[13,"Parenthesized","","The `(A, B)` and `C` in `Foo(A, B) -> C`",261,null],[4,"Ty","","The different kinds of types recognized by the compiler",null,null],[13,"Slice","","A variable-length array (`[T]`)",262,null],[13,"Array","","A fixed length array (`[T; n]`)",262,null],[13,"Ptr","","A raw pointer (`*const T` or `*mut T`)",262,null],[13,"Rptr","","A reference (`&'a T` or `&'a mut T`)",262,null],[13,"BareFn","","A bare function (e.g. `fn(usize) -> bool`)",262,null],[13,"Never","","The never type (`!`)",262,null],[13,"Tup","","A tuple (`(A, B, C, D, ...)`)",262,null],[13,"Path","","A path (`module::module::...::Type`), optionally \"qualified\", e.g. `<Vec<T> as SomeTrait>::SomeType`.",262,null],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a trait or a lifetime.",262,null],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or a lifetime.",262,null],[13,"Paren","","No-op; kept solely so that we can pretty-print faithfully",262,null],[13,"Group","","No-op: kept solely so that we can pretty-print faithfully",262,null],[13,"Infer","","TyKind::Infer means the type should be inferred instead of it having been specified. This can appear anywhere in a type.",262,null],[13,"Mac","","A macro in the type position.",262,null],[4,"Unsafety","","",null,null],[13,"Unsafe","","",263,null],[13,"Normal","","",263,null],[5,"parse","","Parse tokens of source code into the chosen syn data type.",null,{"inputs":[{"name":"tokenstream"}],"output":{"generics":["parseerror"],"name":"result"}}],[5,"parse_tokens","","Parse a `quote::Tokens` of Rust code into the chosen syn data type.",null,{"inputs":[{"name":"tokens"}],"output":{"generics":["parseerror"],"name":"result"}}],[5,"parse_str","","Parse a string of Rust code into the chosen syn data type.",null,{"inputs":[{"name":"str"}],"output":{"generics":["parseerror"],"name":"result"}}],[5,"parse_file","","Parse the content of a file of Rust code.",null,{"inputs":[{"name":"str"}],"output":{"generics":["file","parseerror"],"name":"result"}}],[11,"parse_inner","","",89,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse_outer","","",89,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"to_tokens","","",89,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",90,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",91,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"meta_item","","Parses the tokens after the path as a `MetaItem` if possible.",89,{"inputs":[{"name":"self"}],"output":{"generics":["metaitem"],"name":"option"}}],[11,"from","","",229,{"inputs":[{"name":"ident"}],"output":{"name":"metaitem"}}],[11,"from","","",229,{"inputs":[{"name":"metaitemlist"}],"output":{"name":"metaitem"}}],[11,"from","","",229,{"inputs":[{"name":"metanamevalue"}],"output":{"name":"metaitem"}}],[11,"to_tokens","","",229,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"name","","Name of the item.",229,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",230,{"inputs":[{"name":"metaitem"}],"output":{"name":"nestedmetaitem"}}],[11,"from","","",230,{"inputs":[{"name":"lit"}],"output":{"name":"nestedmetaitem"}}],[11,"to_tokens","","",230,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse_struct","","",92,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse_tuple","","",92,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",232,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"to_tokens","","",93,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",231,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",92,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",96,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",95,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",94,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",264,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"from","","",232,{"inputs":[{"name":"vispublic"}],"output":{"name":"visibility"}}],[11,"from","","",232,{"inputs":[{"name":"viscrate"}],"output":{"name":"visibility"}}],[11,"from","","",232,{"inputs":[{"name":"visrestricted"}],"output":{"name":"visibility"}}],[11,"from","","",232,{"inputs":[{"name":"visinherited"}],"output":{"name":"visibility"}}],[11,"to_tokens","","",232,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",97,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",97,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",133,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",130,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",99,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",100,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",103,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",109,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",108,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",112,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",113,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",114,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",132,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",134,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",135,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",110,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",111,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",126,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",128,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",138,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",129,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",116,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",238,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",123,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",136,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse_within","","",136,{"inputs":[{"name":"cursor"}],"output":{"generics":["vec"],"name":"presult"}}],[11,"parse","","",239,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",237,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",141,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",146,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",140,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",144,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",142,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",137,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",145,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",143,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",147,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",148,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",149,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",150,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",235,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"to_tokens","","",97,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",98,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",99,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",100,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",101,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",102,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",103,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",104,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",105,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",106,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",107,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",108,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",109,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",110,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",111,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",112,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",113,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",114,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",132,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",134,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",115,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",116,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",117,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",118,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",119,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",120,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",121,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",122,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",123,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",124,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",125,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",126,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",127,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",128,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",129,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",133,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",130,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",131,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",138,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",135,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",141,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",140,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",142,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",144,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",145,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",143,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",146,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",147,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",148,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",149,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",150,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",238,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",137,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",234,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",235,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",136,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",239,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",139,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"from","","",97,{"inputs":[{"name":"exprkind"}],"output":{"name":"expr"}}],[11,"from","","",233,{"inputs":[{"name":"exprbox"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprinplace"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprarray"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprcall"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprmethodcall"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprtup"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprbinary"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprunary"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"lit"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprcast"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprtype"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprif"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"expriflet"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprwhile"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprwhilelet"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprforloop"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprloop"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprmatch"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprclosure"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprblock"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprassign"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprassignop"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprfield"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprtupfield"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprindex"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprrange"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprpath"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"expraddrof"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprbreak"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprcontinue"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprret"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"mac"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprstruct"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprrepeat"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprparen"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprgroup"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprtry"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"exprcatch"}],"output":{"name":"exprkind"}}],[11,"from","","",233,{"inputs":[{"name":"expryield"}],"output":{"name":"exprkind"}}],[11,"to_tokens","","",233,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"from","","",237,{"inputs":[{"name":"patwild"}],"output":{"name":"pat"}}],[11,"from","","",237,{"inputs":[{"name":"patident"}],"output":{"name":"pat"}}],[11,"from","","",237,{"inputs":[{"name":"patstruct"}],"output":{"name":"pat"}}],[11,"from","","",237,{"inputs":[{"name":"pattuplestruct"}],"output":{"name":"pat"}}],[11,"from","","",237,{"inputs":[{"name":"patpath"}],"output":{"name":"pat"}}],[11,"from","","",237,{"inputs":[{"name":"pattuple"}],"output":{"name":"pat"}}],[11,"from","","",237,{"inputs":[{"name":"patbox"}],"output":{"name":"pat"}}],[11,"from","","",237,{"inputs":[{"name":"patref"}],"output":{"name":"pat"}}],[11,"from","","",237,{"inputs":[{"name":"patlit"}],"output":{"name":"pat"}}],[11,"from","","",237,{"inputs":[{"name":"patrange"}],"output":{"name":"pat"}}],[11,"from","","",237,{"inputs":[{"name":"patslice"}],"output":{"name":"pat"}}],[11,"from","","",237,{"inputs":[{"name":"mac"}],"output":{"name":"pat"}}],[11,"to_tokens","","",237,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",151,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",152,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",158,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",153,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",242,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",242,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",155,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",155,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",243,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"to_tokens","","",151,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",265,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",266,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",267,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",158,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",152,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",153,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",242,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",241,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",155,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",154,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",157,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",156,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"default","","",151,{"inputs":[],"output":{"name":"generics"}}],[11,"split_for_impl","","Split a type's generics into the pieces required for impl'ing a trait for that type.",151,null],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like `::<X, Y>`.",266,{"inputs":[{"name":"self"}],"output":{"name":"turbofish"}}],[11,"default","","",158,{"inputs":[],"output":{"name":"boundlifetimes"}}],[11,"new","","",152,{"inputs":[{"name":"lifetime"}],"output":{"name":"self"}}],[11,"from","","",153,{"inputs":[{"name":"ident"}],"output":{"name":"self"}}],[11,"default","","",155,{"inputs":[],"output":{"name":"whereclause"}}],[11,"none","","",155,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",243,{"inputs":[{"name":"whereboundpredicate"}],"output":{"name":"wherepredicate"}}],[11,"from","","",243,{"inputs":[{"name":"whereregionpredicate"}],"output":{"name":"wherepredicate"}}],[11,"from","","",243,{"inputs":[{"name":"whereeqpredicate"}],"output":{"name":"wherepredicate"}}],[11,"to_tokens","","",243,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",159,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",159,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"to_tokens","","",159,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"clone","","",159,{"inputs":[{"name":"self"}],"output":{"name":"ident"}}],[11,"fmt","","",159,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",159,{"inputs":[{"name":"term"},{"name":"span"}],"output":{"name":"self"}}],[11,"from","","",159,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",159,{"inputs":[{"name":"self_"}],"output":{"name":"self"}}],[11,"from","","",159,{"inputs":[{"name":"capself"}],"output":{"name":"self"}}],[11,"from","","",159,{"inputs":[{"name":"super"}],"output":{"name":"self"}}],[11,"from","","",159,{"inputs":[{"generics":["str"],"name":"cow"}],"output":{"name":"self"}}],[11,"from","","",159,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"as_ref","","",159,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",159,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",159,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",159,{"inputs":[{"name":"self"},{"name":"ident"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",159,{"inputs":[{"name":"self"},{"name":"ident"}],"output":{"name":"ordering"}}],[11,"hash","","",159,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"parse","","",164,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",164,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",252,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",181,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",182,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",183,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",166,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",246,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",161,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",167,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",163,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",249,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",244,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",245,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"to_tokens","","",164,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",181,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",182,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",183,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",166,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",167,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",163,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",161,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",165,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",192,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",193,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",194,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",244,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",245,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",249,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"from","","",250,{"inputs":[{"name":"itemexterncrate"}],"output":{"name":"itemkind"}}],[11,"from","","",250,{"inputs":[{"name":"itemuse"}],"output":{"name":"itemkind"}}],[11,"from","","",250,{"inputs":[{"name":"itemstatic"}],"output":{"name":"itemkind"}}],[11,"from","","",250,{"inputs":[{"name":"itemconst"}],"output":{"name":"itemkind"}}],[11,"from","","",250,{"inputs":[{"name":"itemfn"}],"output":{"name":"itemkind"}}],[11,"from","","",250,{"inputs":[{"name":"itemmod"}],"output":{"name":"itemkind"}}],[11,"from","","",250,{"inputs":[{"name":"itemforeignmod"}],"output":{"name":"itemkind"}}],[11,"from","","",250,{"inputs":[{"name":"itemty"}],"output":{"name":"itemkind"}}],[11,"from","","",250,{"inputs":[{"name":"itemenum"}],"output":{"name":"itemkind"}}],[11,"from","","",250,{"inputs":[{"name":"itemstruct"}],"output":{"name":"itemkind"}}],[11,"from","","",250,{"inputs":[{"name":"itemunion"}],"output":{"name":"itemkind"}}],[11,"from","","",250,{"inputs":[{"name":"itemtrait"}],"output":{"name":"itemkind"}}],[11,"from","","",250,{"inputs":[{"name":"itemdefaultimpl"}],"output":{"name":"itemkind"}}],[11,"from","","",250,{"inputs":[{"name":"itemimpl"}],"output":{"name":"itemkind"}}],[11,"from","","",250,{"inputs":[{"name":"mac"}],"output":{"name":"itemkind"}}],[11,"from","","",164,{"inputs":[{"name":"deriveinput"}],"output":{"name":"item"}}],[11,"from","","",252,{"inputs":[{"name":"pathsimple"}],"output":{"name":"viewpath"}}],[11,"from","","",252,{"inputs":[{"name":"pathglob"}],"output":{"name":"viewpath"}}],[11,"from","","",252,{"inputs":[{"name":"pathlist"}],"output":{"name":"viewpath"}}],[11,"to_tokens","","",252,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"from","","",247,{"inputs":[{"name":"foreignitemfn"}],"output":{"name":"foreignitemkind"}}],[11,"from","","",247,{"inputs":[{"name":"foreignitemstatic"}],"output":{"name":"foreignitemkind"}}],[11,"from","","",251,{"inputs":[{"name":"traititemconst"}],"output":{"name":"traititemkind"}}],[11,"from","","",251,{"inputs":[{"name":"traititemmethod"}],"output":{"name":"traititemkind"}}],[11,"from","","",251,{"inputs":[{"name":"traititemtype"}],"output":{"name":"traititemkind"}}],[11,"from","","",251,{"inputs":[{"name":"mac"}],"output":{"name":"traititemkind"}}],[11,"from","","",248,{"inputs":[{"name":"implitemconst"}],"output":{"name":"implitemkind"}}],[11,"from","","",248,{"inputs":[{"name":"implitemmethod"}],"output":{"name":"implitemkind"}}],[11,"from","","",248,{"inputs":[{"name":"implitemtype"}],"output":{"name":"implitemkind"}}],[11,"from","","",248,{"inputs":[{"name":"mac"}],"output":{"name":"implitemkind"}}],[11,"from","","",246,{"inputs":[{"name":"argselfref"}],"output":{"name":"fnarg"}}],[11,"from","","",246,{"inputs":[{"name":"argself"}],"output":{"name":"fnarg"}}],[11,"from","","",246,{"inputs":[{"name":"argcaptured"}],"output":{"name":"fnarg"}}],[11,"from","","",246,{"inputs":[{"name":"ty"}],"output":{"name":"fnarg"}}],[11,"to_tokens","","",246,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",195,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",195,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"to_tokens","","",195,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",196,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"to_tokens","","",196,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"new","","",196,{"inputs":[{"name":"term"},{"name":"span"}],"output":{"name":"self"}}],[11,"fmt","","",196,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",196,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",196,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",196,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"ordering"}}],[11,"hash","","",196,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"parse","","",197,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"to_tokens","","",197,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"clone","","",197,{"inputs":[{"name":"self"}],"output":{"name":"lit"}}],[11,"clone","","",253,{"inputs":[{"name":"self"}],"output":{"name":"litkind"}}],[11,"into_token_tree","","",197,{"inputs":[{"name":"self"}],"output":{"name":"tokentree"}}],[11,"fmt","","",197,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",197,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",197,{"inputs":[{"name":"self"},{"name":"lit"}],"output":{"name":"bool"}}],[11,"hash","","",197,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"fmt","","",253,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",253,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",253,{"inputs":[{"name":"self"},{"name":"litkind"}],"output":{"name":"bool"}}],[11,"hash","","",253,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"parse","","",198,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse_list","","",199,{"inputs":[{"name":"cursor"}],"output":{"generics":["vec"],"name":"presult"}}],[11,"parse_delimited","","",199,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"to_tokens","","",198,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",199,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"is_braced","","",198,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_braced","","",199,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"parse","","",200,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",200,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",93,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"to_tokens","","",200,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"from","","",254,{"inputs":[{"name":"bodyenum"}],"output":{"name":"body"}}],[11,"from","","",254,{"inputs":[{"name":"bodystruct"}],"output":{"name":"body"}}],[11,"parse_binop","","",255,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse_assign_op","","",255,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",256,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"to_tokens","","",255,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",256,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",262,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",262,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"without_plus","","",262,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",214,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",215,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",216,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",217,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",218,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",219,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",225,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",220,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",208,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",259,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",223,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",226,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",224,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",260,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",209,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",209,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",210,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse_mod_style","","",209,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",213,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",211,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",205,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",258,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",263,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",203,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"to_tokens","","",214,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",215,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",216,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",217,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",218,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",219,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",220,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",221,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",227,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",222,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",223,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",226,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",224,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",225,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",260,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",209,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",210,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",261,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",204,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",213,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",208,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",259,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",211,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",206,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",205,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",258,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",263,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",203,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"from","","",262,{"inputs":[{"name":"tyslice"}],"output":{"name":"ty"}}],[11,"from","","",262,{"inputs":[{"name":"tyarray"}],"output":{"name":"ty"}}],[11,"from","","",262,{"inputs":[{"name":"typtr"}],"output":{"name":"ty"}}],[11,"from","","",262,{"inputs":[{"name":"tyrptr"}],"output":{"name":"ty"}}],[11,"from","","",262,{"inputs":[{"name":"tybarefn"}],"output":{"name":"ty"}}],[11,"from","","",262,{"inputs":[{"name":"tynever"}],"output":{"name":"ty"}}],[11,"from","","",262,{"inputs":[{"name":"tytup"}],"output":{"name":"ty"}}],[11,"from","","",262,{"inputs":[{"name":"typath"}],"output":{"name":"ty"}}],[11,"from","","",262,{"inputs":[{"name":"tytraitobject"}],"output":{"name":"ty"}}],[11,"from","","",262,{"inputs":[{"name":"tyimpltrait"}],"output":{"name":"ty"}}],[11,"from","","",262,{"inputs":[{"name":"typaren"}],"output":{"name":"ty"}}],[11,"from","","",262,{"inputs":[{"name":"tygroup"}],"output":{"name":"ty"}}],[11,"from","","",262,{"inputs":[{"name":"tyinfer"}],"output":{"name":"ty"}}],[11,"from","","",262,{"inputs":[{"name":"mac"}],"output":{"name":"ty"}}],[11,"to_tokens","","",262,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"global","","",209,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"from","","",209,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from","","",210,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"default","","",261,{"inputs":[],"output":{"name":"self"}}],[11,"is_empty","","",261,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[0,"fold","","A Folder represents an AST->AST fold; it accepts an AST piece, and returns a piece of the same type.",null,null],[5,"fold_abi","futures_await_syn::fold","",null,{"inputs":[{"name":"v"},{"name":"abi"}],"output":{"name":"abi"}}],[5,"fold_abi_kind","","",null,{"inputs":[{"name":"v"},{"name":"abikind"}],"output":{"name":"abikind"}}],[5,"fold_angle_bracketed_parameter_data","","",null,{"inputs":[{"name":"v"},{"name":"anglebracketedparameterdata"}],"output":{"name":"anglebracketedparameterdata"}}],[5,"fold_arg_captured","","",null,{"inputs":[{"name":"v"},{"name":"argcaptured"}],"output":{"name":"argcaptured"}}],[5,"fold_arg_self","","",null,{"inputs":[{"name":"v"},{"name":"argself"}],"output":{"name":"argself"}}],[5,"fold_arg_self_ref","","",null,{"inputs":[{"name":"v"},{"name":"argselfref"}],"output":{"name":"argselfref"}}],[5,"fold_arm","","",null,{"inputs":[{"name":"v"},{"name":"arm"}],"output":{"name":"arm"}}],[5,"fold_attr_style","","",null,{"inputs":[{"name":"v"},{"name":"attrstyle"}],"output":{"name":"attrstyle"}}],[5,"fold_attribute","","",null,{"inputs":[{"name":"v"},{"name":"attribute"}],"output":{"name":"attribute"}}],[5,"fold_bare_fn_arg","","",null,{"inputs":[{"name":"v"},{"name":"barefnarg"}],"output":{"name":"barefnarg"}}],[5,"fold_bare_fn_arg_name","","",null,{"inputs":[{"name":"v"},{"name":"barefnargname"}],"output":{"name":"barefnargname"}}],[5,"fold_bare_fn_ty","","",null,{"inputs":[{"name":"v"},{"name":"barefnty"}],"output":{"name":"barefnty"}}],[5,"fold_bin_op","","",null,{"inputs":[{"name":"v"},{"name":"binop"}],"output":{"name":"binop"}}],[5,"fold_binding_mode","","",null,{"inputs":[{"name":"v"},{"name":"bindingmode"}],"output":{"name":"bindingmode"}}],[5,"fold_block","","",null,{"inputs":[{"name":"v"},{"name":"block"}],"output":{"name":"block"}}],[5,"fold_body","","",null,{"inputs":[{"name":"v"},{"name":"body"}],"output":{"name":"body"}}],[5,"fold_body_enum","","",null,{"inputs":[{"name":"v"},{"name":"bodyenum"}],"output":{"name":"bodyenum"}}],[5,"fold_body_struct","","",null,{"inputs":[{"name":"v"},{"name":"bodystruct"}],"output":{"name":"bodystruct"}}],[5,"fold_bound_lifetimes","","",null,{"inputs":[{"name":"v"},{"name":"boundlifetimes"}],"output":{"name":"boundlifetimes"}}],[5,"fold_capture_by","","",null,{"inputs":[{"name":"v"},{"name":"captureby"}],"output":{"name":"captureby"}}],[5,"fold_constness","","",null,{"inputs":[{"name":"v"},{"name":"constness"}],"output":{"name":"constness"}}],[5,"fold_defaultness","","",null,{"inputs":[{"name":"v"},{"name":"defaultness"}],"output":{"name":"defaultness"}}],[5,"fold_derive_input","","",null,{"inputs":[{"name":"v"},{"name":"deriveinput"}],"output":{"name":"deriveinput"}}],[5,"fold_expr","","",null,{"inputs":[{"name":"v"},{"name":"expr"}],"output":{"name":"expr"}}],[5,"fold_expr_addr_of","","",null,{"inputs":[{"name":"v"},{"name":"expraddrof"}],"output":{"name":"expraddrof"}}],[5,"fold_expr_array","","",null,{"inputs":[{"name":"v"},{"name":"exprarray"}],"output":{"name":"exprarray"}}],[5,"fold_expr_assign","","",null,{"inputs":[{"name":"v"},{"name":"exprassign"}],"output":{"name":"exprassign"}}],[5,"fold_expr_assign_op","","",null,{"inputs":[{"name":"v"},{"name":"exprassignop"}],"output":{"name":"exprassignop"}}],[5,"fold_expr_binary","","",null,{"inputs":[{"name":"v"},{"name":"exprbinary"}],"output":{"name":"exprbinary"}}],[5,"fold_expr_block","","",null,{"inputs":[{"name":"v"},{"name":"exprblock"}],"output":{"name":"exprblock"}}],[5,"fold_expr_box","","",null,{"inputs":[{"name":"v"},{"name":"exprbox"}],"output":{"name":"exprbox"}}],[5,"fold_expr_break","","",null,{"inputs":[{"name":"v"},{"name":"exprbreak"}],"output":{"name":"exprbreak"}}],[5,"fold_expr_call","","",null,{"inputs":[{"name":"v"},{"name":"exprcall"}],"output":{"name":"exprcall"}}],[5,"fold_expr_cast","","",null,{"inputs":[{"name":"v"},{"name":"exprcast"}],"output":{"name":"exprcast"}}],[5,"fold_expr_catch","","",null,{"inputs":[{"name":"v"},{"name":"exprcatch"}],"output":{"name":"exprcatch"}}],[5,"fold_expr_closure","","",null,{"inputs":[{"name":"v"},{"name":"exprclosure"}],"output":{"name":"exprclosure"}}],[5,"fold_expr_continue","","",null,{"inputs":[{"name":"v"},{"name":"exprcontinue"}],"output":{"name":"exprcontinue"}}],[5,"fold_expr_field","","",null,{"inputs":[{"name":"v"},{"name":"exprfield"}],"output":{"name":"exprfield"}}],[5,"fold_expr_for_loop","","",null,{"inputs":[{"name":"v"},{"name":"exprforloop"}],"output":{"name":"exprforloop"}}],[5,"fold_expr_group","","",null,{"inputs":[{"name":"v"},{"name":"exprgroup"}],"output":{"name":"exprgroup"}}],[5,"fold_expr_if","","",null,{"inputs":[{"name":"v"},{"name":"exprif"}],"output":{"name":"exprif"}}],[5,"fold_expr_if_let","","",null,{"inputs":[{"name":"v"},{"name":"expriflet"}],"output":{"name":"expriflet"}}],[5,"fold_expr_in_place","","",null,{"inputs":[{"name":"v"},{"name":"exprinplace"}],"output":{"name":"exprinplace"}}],[5,"fold_expr_index","","",null,{"inputs":[{"name":"v"},{"name":"exprindex"}],"output":{"name":"exprindex"}}],[5,"fold_expr_kind","","",null,{"inputs":[{"name":"v"},{"name":"exprkind"}],"output":{"name":"exprkind"}}],[5,"fold_expr_loop","","",null,{"inputs":[{"name":"v"},{"name":"exprloop"}],"output":{"name":"exprloop"}}],[5,"fold_expr_match","","",null,{"inputs":[{"name":"v"},{"name":"exprmatch"}],"output":{"name":"exprmatch"}}],[5,"fold_expr_method_call","","",null,{"inputs":[{"name":"v"},{"name":"exprmethodcall"}],"output":{"name":"exprmethodcall"}}],[5,"fold_expr_paren","","",null,{"inputs":[{"name":"v"},{"name":"exprparen"}],"output":{"name":"exprparen"}}],[5,"fold_expr_path","","",null,{"inputs":[{"name":"v"},{"name":"exprpath"}],"output":{"name":"exprpath"}}],[5,"fold_expr_range","","",null,{"inputs":[{"name":"v"},{"name":"exprrange"}],"output":{"name":"exprrange"}}],[5,"fold_expr_repeat","","",null,{"inputs":[{"name":"v"},{"name":"exprrepeat"}],"output":{"name":"exprrepeat"}}],[5,"fold_expr_ret","","",null,{"inputs":[{"name":"v"},{"name":"exprret"}],"output":{"name":"exprret"}}],[5,"fold_expr_struct","","",null,{"inputs":[{"name":"v"},{"name":"exprstruct"}],"output":{"name":"exprstruct"}}],[5,"fold_expr_try","","",null,{"inputs":[{"name":"v"},{"name":"exprtry"}],"output":{"name":"exprtry"}}],[5,"fold_expr_tup","","",null,{"inputs":[{"name":"v"},{"name":"exprtup"}],"output":{"name":"exprtup"}}],[5,"fold_expr_tup_field","","",null,{"inputs":[{"name":"v"},{"name":"exprtupfield"}],"output":{"name":"exprtupfield"}}],[5,"fold_expr_type","","",null,{"inputs":[{"name":"v"},{"name":"exprtype"}],"output":{"name":"exprtype"}}],[5,"fold_expr_unary","","",null,{"inputs":[{"name":"v"},{"name":"exprunary"}],"output":{"name":"exprunary"}}],[5,"fold_expr_while","","",null,{"inputs":[{"name":"v"},{"name":"exprwhile"}],"output":{"name":"exprwhile"}}],[5,"fold_expr_while_let","","",null,{"inputs":[{"name":"v"},{"name":"exprwhilelet"}],"output":{"name":"exprwhilelet"}}],[5,"fold_expr_yield","","",null,{"inputs":[{"name":"v"},{"name":"expryield"}],"output":{"name":"expryield"}}],[5,"fold_field","","",null,{"inputs":[{"name":"v"},{"name":"field"}],"output":{"name":"field"}}],[5,"fold_field_pat","","",null,{"inputs":[{"name":"v"},{"name":"fieldpat"}],"output":{"name":"fieldpat"}}],[5,"fold_field_value","","",null,{"inputs":[{"name":"v"},{"name":"fieldvalue"}],"output":{"name":"fieldvalue"}}],[5,"fold_file","","",null,{"inputs":[{"name":"v"},{"name":"file"}],"output":{"name":"file"}}],[5,"fold_fn_arg","","",null,{"inputs":[{"name":"v"},{"name":"fnarg"}],"output":{"name":"fnarg"}}],[5,"fold_fn_decl","","",null,{"inputs":[{"name":"v"},{"name":"fndecl"}],"output":{"name":"fndecl"}}],[5,"fold_foreign_item","","",null,{"inputs":[{"name":"v"},{"name":"foreignitem"}],"output":{"name":"foreignitem"}}],[5,"fold_foreign_item_fn","","",null,{"inputs":[{"name":"v"},{"name":"foreignitemfn"}],"output":{"name":"foreignitemfn"}}],[5,"fold_foreign_item_kind","","",null,{"inputs":[{"name":"v"},{"name":"foreignitemkind"}],"output":{"name":"foreignitemkind"}}],[5,"fold_foreign_item_static","","",null,{"inputs":[{"name":"v"},{"name":"foreignitemstatic"}],"output":{"name":"foreignitemstatic"}}],[5,"fold_function_ret_ty","","",null,{"inputs":[{"name":"v"},{"name":"functionretty"}],"output":{"name":"functionretty"}}],[5,"fold_generics","","",null,{"inputs":[{"name":"v"},{"name":"generics"}],"output":{"name":"generics"}}],[5,"fold_impl_item","","",null,{"inputs":[{"name":"v"},{"name":"implitem"}],"output":{"name":"implitem"}}],[5,"fold_impl_item_const","","",null,{"inputs":[{"name":"v"},{"name":"implitemconst"}],"output":{"name":"implitemconst"}}],[5,"fold_impl_item_kind","","",null,{"inputs":[{"name":"v"},{"name":"implitemkind"}],"output":{"name":"implitemkind"}}],[5,"fold_impl_item_method","","",null,{"inputs":[{"name":"v"},{"name":"implitemmethod"}],"output":{"name":"implitemmethod"}}],[5,"fold_impl_item_type","","",null,{"inputs":[{"name":"v"},{"name":"implitemtype"}],"output":{"name":"implitemtype"}}],[5,"fold_impl_polarity","","",null,{"inputs":[{"name":"v"},{"name":"implpolarity"}],"output":{"name":"implpolarity"}}],[5,"fold_in_place_kind","","",null,{"inputs":[{"name":"v"},{"name":"inplacekind"}],"output":{"name":"inplacekind"}}],[5,"fold_item","","",null,{"inputs":[{"name":"v"},{"name":"item"}],"output":{"name":"item"}}],[5,"fold_item_const","","",null,{"inputs":[{"name":"v"},{"name":"itemconst"}],"output":{"name":"itemconst"}}],[5,"fold_item_default_impl","","",null,{"inputs":[{"name":"v"},{"name":"itemdefaultimpl"}],"output":{"name":"itemdefaultimpl"}}],[5,"fold_item_enum","","",null,{"inputs":[{"name":"v"},{"name":"itemenum"}],"output":{"name":"itemenum"}}],[5,"fold_item_extern_crate","","",null,{"inputs":[{"name":"v"},{"name":"itemexterncrate"}],"output":{"name":"itemexterncrate"}}],[5,"fold_item_fn","","",null,{"inputs":[{"name":"v"},{"name":"itemfn"}],"output":{"name":"itemfn"}}],[5,"fold_item_foreign_mod","","",null,{"inputs":[{"name":"v"},{"name":"itemforeignmod"}],"output":{"name":"itemforeignmod"}}],[5,"fold_item_impl","","",null,{"inputs":[{"name":"v"},{"name":"itemimpl"}],"output":{"name":"itemimpl"}}],[5,"fold_item_kind","","",null,{"inputs":[{"name":"v"},{"name":"itemkind"}],"output":{"name":"itemkind"}}],[5,"fold_item_mod","","",null,{"inputs":[{"name":"v"},{"name":"itemmod"}],"output":{"name":"itemmod"}}],[5,"fold_item_static","","",null,{"inputs":[{"name":"v"},{"name":"itemstatic"}],"output":{"name":"itemstatic"}}],[5,"fold_item_struct","","",null,{"inputs":[{"name":"v"},{"name":"itemstruct"}],"output":{"name":"itemstruct"}}],[5,"fold_item_trait","","",null,{"inputs":[{"name":"v"},{"name":"itemtrait"}],"output":{"name":"itemtrait"}}],[5,"fold_item_ty","","",null,{"inputs":[{"name":"v"},{"name":"itemty"}],"output":{"name":"itemty"}}],[5,"fold_item_union","","",null,{"inputs":[{"name":"v"},{"name":"itemunion"}],"output":{"name":"itemunion"}}],[5,"fold_item_use","","",null,{"inputs":[{"name":"v"},{"name":"itemuse"}],"output":{"name":"itemuse"}}],[5,"fold_lifetime_def","","",null,{"inputs":[{"name":"v"},{"name":"lifetimedef"}],"output":{"name":"lifetimedef"}}],[5,"fold_local","","",null,{"inputs":[{"name":"v"},{"name":"local"}],"output":{"name":"local"}}],[5,"fold_mac","","",null,{"inputs":[{"name":"v"},{"name":"mac"}],"output":{"name":"mac"}}],[5,"fold_mac_stmt_style","","",null,{"inputs":[{"name":"v"},{"name":"macstmtstyle"}],"output":{"name":"macstmtstyle"}}],[5,"fold_meta_item","","",null,{"inputs":[{"name":"v"},{"name":"metaitem"}],"output":{"name":"metaitem"}}],[5,"fold_meta_item_list","","",null,{"inputs":[{"name":"v"},{"name":"metaitemlist"}],"output":{"name":"metaitemlist"}}],[5,"fold_meta_name_value","","",null,{"inputs":[{"name":"v"},{"name":"metanamevalue"}],"output":{"name":"metanamevalue"}}],[5,"fold_method_sig","","",null,{"inputs":[{"name":"v"},{"name":"methodsig"}],"output":{"name":"methodsig"}}],[5,"fold_mut_ty","","",null,{"inputs":[{"name":"v"},{"name":"mutty"}],"output":{"name":"mutty"}}],[5,"fold_mutability","","",null,{"inputs":[{"name":"v"},{"name":"mutability"}],"output":{"name":"mutability"}}],[5,"fold_nested_meta_item","","",null,{"inputs":[{"name":"v"},{"name":"nestedmetaitem"}],"output":{"name":"nestedmetaitem"}}],[5,"fold_parenthesized_parameter_data","","",null,{"inputs":[{"name":"v"},{"name":"parenthesizedparameterdata"}],"output":{"name":"parenthesizedparameterdata"}}],[5,"fold_pat","","",null,{"inputs":[{"name":"v"},{"name":"pat"}],"output":{"name":"pat"}}],[5,"fold_pat_box","","",null,{"inputs":[{"name":"v"},{"name":"patbox"}],"output":{"name":"patbox"}}],[5,"fold_pat_ident","","",null,{"inputs":[{"name":"v"},{"name":"patident"}],"output":{"name":"patident"}}],[5,"fold_pat_lit","","",null,{"inputs":[{"name":"v"},{"name":"patlit"}],"output":{"name":"patlit"}}],[5,"fold_pat_path","","",null,{"inputs":[{"name":"v"},{"name":"patpath"}],"output":{"name":"patpath"}}],[5,"fold_pat_range","","",null,{"inputs":[{"name":"v"},{"name":"patrange"}],"output":{"name":"patrange"}}],[5,"fold_pat_ref","","",null,{"inputs":[{"name":"v"},{"name":"patref"}],"output":{"name":"patref"}}],[5,"fold_pat_slice","","",null,{"inputs":[{"name":"v"},{"name":"patslice"}],"output":{"name":"patslice"}}],[5,"fold_pat_struct","","",null,{"inputs":[{"name":"v"},{"name":"patstruct"}],"output":{"name":"patstruct"}}],[5,"fold_pat_tuple","","",null,{"inputs":[{"name":"v"},{"name":"pattuple"}],"output":{"name":"pattuple"}}],[5,"fold_pat_tuple_struct","","",null,{"inputs":[{"name":"v"},{"name":"pattuplestruct"}],"output":{"name":"pattuplestruct"}}],[5,"fold_pat_wild","","",null,{"inputs":[{"name":"v"},{"name":"patwild"}],"output":{"name":"patwild"}}],[5,"fold_path","","",null,{"inputs":[{"name":"v"},{"name":"path"}],"output":{"name":"path"}}],[5,"fold_path_glob","","",null,{"inputs":[{"name":"v"},{"name":"pathglob"}],"output":{"name":"pathglob"}}],[5,"fold_path_list","","",null,{"inputs":[{"name":"v"},{"name":"pathlist"}],"output":{"name":"pathlist"}}],[5,"fold_path_list_item","","",null,{"inputs":[{"name":"v"},{"name":"pathlistitem"}],"output":{"name":"pathlistitem"}}],[5,"fold_path_parameters","","",null,{"inputs":[{"name":"v"},{"name":"pathparameters"}],"output":{"name":"pathparameters"}}],[5,"fold_path_segment","","",null,{"inputs":[{"name":"v"},{"name":"pathsegment"}],"output":{"name":"pathsegment"}}],[5,"fold_path_simple","","",null,{"inputs":[{"name":"v"},{"name":"pathsimple"}],"output":{"name":"pathsimple"}}],[5,"fold_poly_trait_ref","","",null,{"inputs":[{"name":"v"},{"name":"polytraitref"}],"output":{"name":"polytraitref"}}],[5,"fold_qself","","",null,{"inputs":[{"name":"v"},{"name":"qself"}],"output":{"name":"qself"}}],[5,"fold_range_limits","","",null,{"inputs":[{"name":"v"},{"name":"rangelimits"}],"output":{"name":"rangelimits"}}],[5,"fold_stmt","","",null,{"inputs":[{"name":"v"},{"name":"stmt"}],"output":{"name":"stmt"}}],[5,"fold_trait_bound_modifier","","",null,{"inputs":[{"name":"v"},{"name":"traitboundmodifier"}],"output":{"name":"traitboundmodifier"}}],[5,"fold_trait_item","","",null,{"inputs":[{"name":"v"},{"name":"traititem"}],"output":{"name":"traititem"}}],[5,"fold_trait_item_const","","",null,{"inputs":[{"name":"v"},{"name":"traititemconst"}],"output":{"name":"traititemconst"}}],[5,"fold_trait_item_kind","","",null,{"inputs":[{"name":"v"},{"name":"traititemkind"}],"output":{"name":"traititemkind"}}],[5,"fold_trait_item_method","","",null,{"inputs":[{"name":"v"},{"name":"traititemmethod"}],"output":{"name":"traititemmethod"}}],[5,"fold_trait_item_type","","",null,{"inputs":[{"name":"v"},{"name":"traititemtype"}],"output":{"name":"traititemtype"}}],[5,"fold_ty","","",null,{"inputs":[{"name":"v"},{"name":"ty"}],"output":{"name":"ty"}}],[5,"fold_ty_array","","",null,{"inputs":[{"name":"v"},{"name":"tyarray"}],"output":{"name":"tyarray"}}],[5,"fold_ty_bare_fn","","",null,{"inputs":[{"name":"v"},{"name":"tybarefn"}],"output":{"name":"tybarefn"}}],[5,"fold_ty_group","","",null,{"inputs":[{"name":"v"},{"name":"tygroup"}],"output":{"name":"tygroup"}}],[5,"fold_ty_impl_trait","","",null,{"inputs":[{"name":"v"},{"name":"tyimpltrait"}],"output":{"name":"tyimpltrait"}}],[5,"fold_ty_infer","","",null,{"inputs":[{"name":"v"},{"name":"tyinfer"}],"output":{"name":"tyinfer"}}],[5,"fold_ty_never","","",null,{"inputs":[{"name":"v"},{"name":"tynever"}],"output":{"name":"tynever"}}],[5,"fold_ty_param","","",null,{"inputs":[{"name":"v"},{"name":"typaram"}],"output":{"name":"typaram"}}],[5,"fold_ty_param_bound","","",null,{"inputs":[{"name":"v"},{"name":"typarambound"}],"output":{"name":"typarambound"}}],[5,"fold_ty_paren","","",null,{"inputs":[{"name":"v"},{"name":"typaren"}],"output":{"name":"typaren"}}],[5,"fold_ty_path","","",null,{"inputs":[{"name":"v"},{"name":"typath"}],"output":{"name":"typath"}}],[5,"fold_ty_ptr","","",null,{"inputs":[{"name":"v"},{"name":"typtr"}],"output":{"name":"typtr"}}],[5,"fold_ty_rptr","","",null,{"inputs":[{"name":"v"},{"name":"tyrptr"}],"output":{"name":"tyrptr"}}],[5,"fold_ty_slice","","",null,{"inputs":[{"name":"v"},{"name":"tyslice"}],"output":{"name":"tyslice"}}],[5,"fold_ty_trait_object","","",null,{"inputs":[{"name":"v"},{"name":"tytraitobject"}],"output":{"name":"tytraitobject"}}],[5,"fold_ty_tup","","",null,{"inputs":[{"name":"v"},{"name":"tytup"}],"output":{"name":"tytup"}}],[5,"fold_type_binding","","",null,{"inputs":[{"name":"v"},{"name":"typebinding"}],"output":{"name":"typebinding"}}],[5,"fold_un_op","","",null,{"inputs":[{"name":"v"},{"name":"unop"}],"output":{"name":"unop"}}],[5,"fold_unsafety","","",null,{"inputs":[{"name":"v"},{"name":"unsafety"}],"output":{"name":"unsafety"}}],[5,"fold_variant","","",null,{"inputs":[{"name":"v"},{"name":"variant"}],"output":{"name":"variant"}}],[5,"fold_variant_data","","",null,{"inputs":[{"name":"v"},{"name":"variantdata"}],"output":{"name":"variantdata"}}],[5,"fold_view_path","","",null,{"inputs":[{"name":"v"},{"name":"viewpath"}],"output":{"name":"viewpath"}}],[5,"fold_vis_crate","","",null,{"inputs":[{"name":"v"},{"name":"viscrate"}],"output":{"name":"viscrate"}}],[5,"fold_vis_inherited","","",null,{"inputs":[{"name":"v"},{"name":"visinherited"}],"output":{"name":"visinherited"}}],[5,"fold_vis_public","","",null,{"inputs":[{"name":"v"},{"name":"vispublic"}],"output":{"name":"vispublic"}}],[5,"fold_vis_restricted","","",null,{"inputs":[{"name":"v"},{"name":"visrestricted"}],"output":{"name":"visrestricted"}}],[5,"fold_visibility","","",null,{"inputs":[{"name":"v"},{"name":"visibility"}],"output":{"name":"visibility"}}],[5,"fold_where_bound_predicate","","",null,{"inputs":[{"name":"v"},{"name":"whereboundpredicate"}],"output":{"name":"whereboundpredicate"}}],[5,"fold_where_clause","","",null,{"inputs":[{"name":"v"},{"name":"whereclause"}],"output":{"name":"whereclause"}}],[5,"fold_where_eq_predicate","","",null,{"inputs":[{"name":"v"},{"name":"whereeqpredicate"}],"output":{"name":"whereeqpredicate"}}],[5,"fold_where_predicate","","",null,{"inputs":[{"name":"v"},{"name":"wherepredicate"}],"output":{"name":"wherepredicate"}}],[5,"fold_where_region_predicate","","",null,{"inputs":[{"name":"v"},{"name":"whereregionpredicate"}],"output":{"name":"whereregionpredicate"}}],[8,"Folder","","AST->AST fold.",null,null],[11,"fold_abi","","",268,{"inputs":[{"name":"self"},{"name":"abi"}],"output":{"name":"abi"}}],[11,"fold_abi_kind","","",268,{"inputs":[{"name":"self"},{"name":"abikind"}],"output":{"name":"abikind"}}],[11,"fold_angle_bracketed_parameter_data","","",268,{"inputs":[{"name":"self"},{"name":"anglebracketedparameterdata"}],"output":{"name":"anglebracketedparameterdata"}}],[11,"fold_arg_captured","","",268,{"inputs":[{"name":"self"},{"name":"argcaptured"}],"output":{"name":"argcaptured"}}],[11,"fold_arg_self","","",268,{"inputs":[{"name":"self"},{"name":"argself"}],"output":{"name":"argself"}}],[11,"fold_arg_self_ref","","",268,{"inputs":[{"name":"self"},{"name":"argselfref"}],"output":{"name":"argselfref"}}],[11,"fold_arm","","",268,{"inputs":[{"name":"self"},{"name":"arm"}],"output":{"name":"arm"}}],[11,"fold_attr_style","","",268,{"inputs":[{"name":"self"},{"name":"attrstyle"}],"output":{"name":"attrstyle"}}],[11,"fold_attribute","","",268,{"inputs":[{"name":"self"},{"name":"attribute"}],"output":{"name":"attribute"}}],[11,"fold_bare_fn_arg","","",268,{"inputs":[{"name":"self"},{"name":"barefnarg"}],"output":{"name":"barefnarg"}}],[11,"fold_bare_fn_arg_name","","",268,{"inputs":[{"name":"self"},{"name":"barefnargname"}],"output":{"name":"barefnargname"}}],[11,"fold_bare_fn_ty","","",268,{"inputs":[{"name":"self"},{"name":"barefnty"}],"output":{"name":"barefnty"}}],[11,"fold_bin_op","","",268,{"inputs":[{"name":"self"},{"name":"binop"}],"output":{"name":"binop"}}],[11,"fold_binding_mode","","",268,{"inputs":[{"name":"self"},{"name":"bindingmode"}],"output":{"name":"bindingmode"}}],[11,"fold_block","","",268,{"inputs":[{"name":"self"},{"name":"block"}],"output":{"name":"block"}}],[11,"fold_body","","",268,{"inputs":[{"name":"self"},{"name":"body"}],"output":{"name":"body"}}],[11,"fold_body_enum","","",268,{"inputs":[{"name":"self"},{"name":"bodyenum"}],"output":{"name":"bodyenum"}}],[11,"fold_body_struct","","",268,{"inputs":[{"name":"self"},{"name":"bodystruct"}],"output":{"name":"bodystruct"}}],[11,"fold_bound_lifetimes","","",268,{"inputs":[{"name":"self"},{"name":"boundlifetimes"}],"output":{"name":"boundlifetimes"}}],[11,"fold_capture_by","","",268,{"inputs":[{"name":"self"},{"name":"captureby"}],"output":{"name":"captureby"}}],[11,"fold_constness","","",268,{"inputs":[{"name":"self"},{"name":"constness"}],"output":{"name":"constness"}}],[11,"fold_defaultness","","",268,{"inputs":[{"name":"self"},{"name":"defaultness"}],"output":{"name":"defaultness"}}],[11,"fold_derive_input","","",268,{"inputs":[{"name":"self"},{"name":"deriveinput"}],"output":{"name":"deriveinput"}}],[11,"fold_expr","","",268,{"inputs":[{"name":"self"},{"name":"expr"}],"output":{"name":"expr"}}],[11,"fold_expr_addr_of","","",268,{"inputs":[{"name":"self"},{"name":"expraddrof"}],"output":{"name":"expraddrof"}}],[11,"fold_expr_array","","",268,{"inputs":[{"name":"self"},{"name":"exprarray"}],"output":{"name":"exprarray"}}],[11,"fold_expr_assign","","",268,{"inputs":[{"name":"self"},{"name":"exprassign"}],"output":{"name":"exprassign"}}],[11,"fold_expr_assign_op","","",268,{"inputs":[{"name":"self"},{"name":"exprassignop"}],"output":{"name":"exprassignop"}}],[11,"fold_expr_binary","","",268,{"inputs":[{"name":"self"},{"name":"exprbinary"}],"output":{"name":"exprbinary"}}],[11,"fold_expr_block","","",268,{"inputs":[{"name":"self"},{"name":"exprblock"}],"output":{"name":"exprblock"}}],[11,"fold_expr_box","","",268,{"inputs":[{"name":"self"},{"name":"exprbox"}],"output":{"name":"exprbox"}}],[11,"fold_expr_break","","",268,{"inputs":[{"name":"self"},{"name":"exprbreak"}],"output":{"name":"exprbreak"}}],[11,"fold_expr_call","","",268,{"inputs":[{"name":"self"},{"name":"exprcall"}],"output":{"name":"exprcall"}}],[11,"fold_expr_cast","","",268,{"inputs":[{"name":"self"},{"name":"exprcast"}],"output":{"name":"exprcast"}}],[11,"fold_expr_catch","","",268,{"inputs":[{"name":"self"},{"name":"exprcatch"}],"output":{"name":"exprcatch"}}],[11,"fold_expr_closure","","",268,{"inputs":[{"name":"self"},{"name":"exprclosure"}],"output":{"name":"exprclosure"}}],[11,"fold_expr_continue","","",268,{"inputs":[{"name":"self"},{"name":"exprcontinue"}],"output":{"name":"exprcontinue"}}],[11,"fold_expr_field","","",268,{"inputs":[{"name":"self"},{"name":"exprfield"}],"output":{"name":"exprfield"}}],[11,"fold_expr_for_loop","","",268,{"inputs":[{"name":"self"},{"name":"exprforloop"}],"output":{"name":"exprforloop"}}],[11,"fold_expr_group","","",268,{"inputs":[{"name":"self"},{"name":"exprgroup"}],"output":{"name":"exprgroup"}}],[11,"fold_expr_if","","",268,{"inputs":[{"name":"self"},{"name":"exprif"}],"output":{"name":"exprif"}}],[11,"fold_expr_if_let","","",268,{"inputs":[{"name":"self"},{"name":"expriflet"}],"output":{"name":"expriflet"}}],[11,"fold_expr_in_place","","",268,{"inputs":[{"name":"self"},{"name":"exprinplace"}],"output":{"name":"exprinplace"}}],[11,"fold_expr_index","","",268,{"inputs":[{"name":"self"},{"name":"exprindex"}],"output":{"name":"exprindex"}}],[11,"fold_expr_kind","","",268,{"inputs":[{"name":"self"},{"name":"exprkind"}],"output":{"name":"exprkind"}}],[11,"fold_expr_loop","","",268,{"inputs":[{"name":"self"},{"name":"exprloop"}],"output":{"name":"exprloop"}}],[11,"fold_expr_match","","",268,{"inputs":[{"name":"self"},{"name":"exprmatch"}],"output":{"name":"exprmatch"}}],[11,"fold_expr_method_call","","",268,{"inputs":[{"name":"self"},{"name":"exprmethodcall"}],"output":{"name":"exprmethodcall"}}],[11,"fold_expr_paren","","",268,{"inputs":[{"name":"self"},{"name":"exprparen"}],"output":{"name":"exprparen"}}],[11,"fold_expr_path","","",268,{"inputs":[{"name":"self"},{"name":"exprpath"}],"output":{"name":"exprpath"}}],[11,"fold_expr_range","","",268,{"inputs":[{"name":"self"},{"name":"exprrange"}],"output":{"name":"exprrange"}}],[11,"fold_expr_repeat","","",268,{"inputs":[{"name":"self"},{"name":"exprrepeat"}],"output":{"name":"exprrepeat"}}],[11,"fold_expr_ret","","",268,{"inputs":[{"name":"self"},{"name":"exprret"}],"output":{"name":"exprret"}}],[11,"fold_expr_struct","","",268,{"inputs":[{"name":"self"},{"name":"exprstruct"}],"output":{"name":"exprstruct"}}],[11,"fold_expr_try","","",268,{"inputs":[{"name":"self"},{"name":"exprtry"}],"output":{"name":"exprtry"}}],[11,"fold_expr_tup","","",268,{"inputs":[{"name":"self"},{"name":"exprtup"}],"output":{"name":"exprtup"}}],[11,"fold_expr_tup_field","","",268,{"inputs":[{"name":"self"},{"name":"exprtupfield"}],"output":{"name":"exprtupfield"}}],[11,"fold_expr_type","","",268,{"inputs":[{"name":"self"},{"name":"exprtype"}],"output":{"name":"exprtype"}}],[11,"fold_expr_unary","","",268,{"inputs":[{"name":"self"},{"name":"exprunary"}],"output":{"name":"exprunary"}}],[11,"fold_expr_while","","",268,{"inputs":[{"name":"self"},{"name":"exprwhile"}],"output":{"name":"exprwhile"}}],[11,"fold_expr_while_let","","",268,{"inputs":[{"name":"self"},{"name":"exprwhilelet"}],"output":{"name":"exprwhilelet"}}],[11,"fold_expr_yield","","",268,{"inputs":[{"name":"self"},{"name":"expryield"}],"output":{"name":"expryield"}}],[11,"fold_field","","",268,{"inputs":[{"name":"self"},{"name":"field"}],"output":{"name":"field"}}],[11,"fold_field_pat","","",268,{"inputs":[{"name":"self"},{"name":"fieldpat"}],"output":{"name":"fieldpat"}}],[11,"fold_field_value","","",268,{"inputs":[{"name":"self"},{"name":"fieldvalue"}],"output":{"name":"fieldvalue"}}],[11,"fold_file","","",268,{"inputs":[{"name":"self"},{"name":"file"}],"output":{"name":"file"}}],[11,"fold_fn_arg","","",268,{"inputs":[{"name":"self"},{"name":"fnarg"}],"output":{"name":"fnarg"}}],[11,"fold_fn_decl","","",268,{"inputs":[{"name":"self"},{"name":"fndecl"}],"output":{"name":"fndecl"}}],[11,"fold_foreign_item","","",268,{"inputs":[{"name":"self"},{"name":"foreignitem"}],"output":{"name":"foreignitem"}}],[11,"fold_foreign_item_fn","","",268,{"inputs":[{"name":"self"},{"name":"foreignitemfn"}],"output":{"name":"foreignitemfn"}}],[11,"fold_foreign_item_kind","","",268,{"inputs":[{"name":"self"},{"name":"foreignitemkind"}],"output":{"name":"foreignitemkind"}}],[11,"fold_foreign_item_static","","",268,{"inputs":[{"name":"self"},{"name":"foreignitemstatic"}],"output":{"name":"foreignitemstatic"}}],[11,"fold_function_ret_ty","","",268,{"inputs":[{"name":"self"},{"name":"functionretty"}],"output":{"name":"functionretty"}}],[11,"fold_generics","","",268,{"inputs":[{"name":"self"},{"name":"generics"}],"output":{"name":"generics"}}],[11,"fold_impl_item","","",268,{"inputs":[{"name":"self"},{"name":"implitem"}],"output":{"name":"implitem"}}],[11,"fold_impl_item_const","","",268,{"inputs":[{"name":"self"},{"name":"implitemconst"}],"output":{"name":"implitemconst"}}],[11,"fold_impl_item_kind","","",268,{"inputs":[{"name":"self"},{"name":"implitemkind"}],"output":{"name":"implitemkind"}}],[11,"fold_impl_item_method","","",268,{"inputs":[{"name":"self"},{"name":"implitemmethod"}],"output":{"name":"implitemmethod"}}],[11,"fold_impl_item_type","","",268,{"inputs":[{"name":"self"},{"name":"implitemtype"}],"output":{"name":"implitemtype"}}],[11,"fold_impl_polarity","","",268,{"inputs":[{"name":"self"},{"name":"implpolarity"}],"output":{"name":"implpolarity"}}],[11,"fold_in_place_kind","","",268,{"inputs":[{"name":"self"},{"name":"inplacekind"}],"output":{"name":"inplacekind"}}],[11,"fold_item","","",268,{"inputs":[{"name":"self"},{"name":"item"}],"output":{"name":"item"}}],[11,"fold_item_const","","",268,{"inputs":[{"name":"self"},{"name":"itemconst"}],"output":{"name":"itemconst"}}],[11,"fold_item_default_impl","","",268,{"inputs":[{"name":"self"},{"name":"itemdefaultimpl"}],"output":{"name":"itemdefaultimpl"}}],[11,"fold_item_enum","","",268,{"inputs":[{"name":"self"},{"name":"itemenum"}],"output":{"name":"itemenum"}}],[11,"fold_item_extern_crate","","",268,{"inputs":[{"name":"self"},{"name":"itemexterncrate"}],"output":{"name":"itemexterncrate"}}],[11,"fold_item_fn","","",268,{"inputs":[{"name":"self"},{"name":"itemfn"}],"output":{"name":"itemfn"}}],[11,"fold_item_foreign_mod","","",268,{"inputs":[{"name":"self"},{"name":"itemforeignmod"}],"output":{"name":"itemforeignmod"}}],[11,"fold_item_impl","","",268,{"inputs":[{"name":"self"},{"name":"itemimpl"}],"output":{"name":"itemimpl"}}],[11,"fold_item_kind","","",268,{"inputs":[{"name":"self"},{"name":"itemkind"}],"output":{"name":"itemkind"}}],[11,"fold_item_mod","","",268,{"inputs":[{"name":"self"},{"name":"itemmod"}],"output":{"name":"itemmod"}}],[11,"fold_item_static","","",268,{"inputs":[{"name":"self"},{"name":"itemstatic"}],"output":{"name":"itemstatic"}}],[11,"fold_item_struct","","",268,{"inputs":[{"name":"self"},{"name":"itemstruct"}],"output":{"name":"itemstruct"}}],[11,"fold_item_trait","","",268,{"inputs":[{"name":"self"},{"name":"itemtrait"}],"output":{"name":"itemtrait"}}],[11,"fold_item_ty","","",268,{"inputs":[{"name":"self"},{"name":"itemty"}],"output":{"name":"itemty"}}],[11,"fold_item_union","","",268,{"inputs":[{"name":"self"},{"name":"itemunion"}],"output":{"name":"itemunion"}}],[11,"fold_item_use","","",268,{"inputs":[{"name":"self"},{"name":"itemuse"}],"output":{"name":"itemuse"}}],[11,"fold_lifetime_def","","",268,{"inputs":[{"name":"self"},{"name":"lifetimedef"}],"output":{"name":"lifetimedef"}}],[11,"fold_local","","",268,{"inputs":[{"name":"self"},{"name":"local"}],"output":{"name":"local"}}],[11,"fold_mac","","",268,{"inputs":[{"name":"self"},{"name":"mac"}],"output":{"name":"mac"}}],[11,"fold_mac_stmt_style","","",268,{"inputs":[{"name":"self"},{"name":"macstmtstyle"}],"output":{"name":"macstmtstyle"}}],[11,"fold_meta_item","","",268,{"inputs":[{"name":"self"},{"name":"metaitem"}],"output":{"name":"metaitem"}}],[11,"fold_meta_item_list","","",268,{"inputs":[{"name":"self"},{"name":"metaitemlist"}],"output":{"name":"metaitemlist"}}],[11,"fold_meta_name_value","","",268,{"inputs":[{"name":"self"},{"name":"metanamevalue"}],"output":{"name":"metanamevalue"}}],[11,"fold_method_sig","","",268,{"inputs":[{"name":"self"},{"name":"methodsig"}],"output":{"name":"methodsig"}}],[11,"fold_mut_ty","","",268,{"inputs":[{"name":"self"},{"name":"mutty"}],"output":{"name":"mutty"}}],[11,"fold_mutability","","",268,{"inputs":[{"name":"self"},{"name":"mutability"}],"output":{"name":"mutability"}}],[11,"fold_nested_meta_item","","",268,{"inputs":[{"name":"self"},{"name":"nestedmetaitem"}],"output":{"name":"nestedmetaitem"}}],[11,"fold_parenthesized_parameter_data","","",268,{"inputs":[{"name":"self"},{"name":"parenthesizedparameterdata"}],"output":{"name":"parenthesizedparameterdata"}}],[11,"fold_pat","","",268,{"inputs":[{"name":"self"},{"name":"pat"}],"output":{"name":"pat"}}],[11,"fold_pat_box","","",268,{"inputs":[{"name":"self"},{"name":"patbox"}],"output":{"name":"patbox"}}],[11,"fold_pat_ident","","",268,{"inputs":[{"name":"self"},{"name":"patident"}],"output":{"name":"patident"}}],[11,"fold_pat_lit","","",268,{"inputs":[{"name":"self"},{"name":"patlit"}],"output":{"name":"patlit"}}],[11,"fold_pat_path","","",268,{"inputs":[{"name":"self"},{"name":"patpath"}],"output":{"name":"patpath"}}],[11,"fold_pat_range","","",268,{"inputs":[{"name":"self"},{"name":"patrange"}],"output":{"name":"patrange"}}],[11,"fold_pat_ref","","",268,{"inputs":[{"name":"self"},{"name":"patref"}],"output":{"name":"patref"}}],[11,"fold_pat_slice","","",268,{"inputs":[{"name":"self"},{"name":"patslice"}],"output":{"name":"patslice"}}],[11,"fold_pat_struct","","",268,{"inputs":[{"name":"self"},{"name":"patstruct"}],"output":{"name":"patstruct"}}],[11,"fold_pat_tuple","","",268,{"inputs":[{"name":"self"},{"name":"pattuple"}],"output":{"name":"pattuple"}}],[11,"fold_pat_tuple_struct","","",268,{"inputs":[{"name":"self"},{"name":"pattuplestruct"}],"output":{"name":"pattuplestruct"}}],[11,"fold_pat_wild","","",268,{"inputs":[{"name":"self"},{"name":"patwild"}],"output":{"name":"patwild"}}],[11,"fold_path","","",268,{"inputs":[{"name":"self"},{"name":"path"}],"output":{"name":"path"}}],[11,"fold_path_glob","","",268,{"inputs":[{"name":"self"},{"name":"pathglob"}],"output":{"name":"pathglob"}}],[11,"fold_path_list","","",268,{"inputs":[{"name":"self"},{"name":"pathlist"}],"output":{"name":"pathlist"}}],[11,"fold_path_list_item","","",268,{"inputs":[{"name":"self"},{"name":"pathlistitem"}],"output":{"name":"pathlistitem"}}],[11,"fold_path_parameters","","",268,{"inputs":[{"name":"self"},{"name":"pathparameters"}],"output":{"name":"pathparameters"}}],[11,"fold_path_segment","","",268,{"inputs":[{"name":"self"},{"name":"pathsegment"}],"output":{"name":"pathsegment"}}],[11,"fold_path_simple","","",268,{"inputs":[{"name":"self"},{"name":"pathsimple"}],"output":{"name":"pathsimple"}}],[11,"fold_poly_trait_ref","","",268,{"inputs":[{"name":"self"},{"name":"polytraitref"}],"output":{"name":"polytraitref"}}],[11,"fold_qself","","",268,{"inputs":[{"name":"self"},{"name":"qself"}],"output":{"name":"qself"}}],[11,"fold_range_limits","","",268,{"inputs":[{"name":"self"},{"name":"rangelimits"}],"output":{"name":"rangelimits"}}],[11,"fold_stmt","","",268,{"inputs":[{"name":"self"},{"name":"stmt"}],"output":{"name":"stmt"}}],[11,"fold_trait_bound_modifier","","",268,{"inputs":[{"name":"self"},{"name":"traitboundmodifier"}],"output":{"name":"traitboundmodifier"}}],[11,"fold_trait_item","","",268,{"inputs":[{"name":"self"},{"name":"traititem"}],"output":{"name":"traititem"}}],[11,"fold_trait_item_const","","",268,{"inputs":[{"name":"self"},{"name":"traititemconst"}],"output":{"name":"traititemconst"}}],[11,"fold_trait_item_kind","","",268,{"inputs":[{"name":"self"},{"name":"traititemkind"}],"output":{"name":"traititemkind"}}],[11,"fold_trait_item_method","","",268,{"inputs":[{"name":"self"},{"name":"traititemmethod"}],"output":{"name":"traititemmethod"}}],[11,"fold_trait_item_type","","",268,{"inputs":[{"name":"self"},{"name":"traititemtype"}],"output":{"name":"traititemtype"}}],[11,"fold_ty","","",268,{"inputs":[{"name":"self"},{"name":"ty"}],"output":{"name":"ty"}}],[11,"fold_ty_array","","",268,{"inputs":[{"name":"self"},{"name":"tyarray"}],"output":{"name":"tyarray"}}],[11,"fold_ty_bare_fn","","",268,{"inputs":[{"name":"self"},{"name":"tybarefn"}],"output":{"name":"tybarefn"}}],[11,"fold_ty_group","","",268,{"inputs":[{"name":"self"},{"name":"tygroup"}],"output":{"name":"tygroup"}}],[11,"fold_ty_impl_trait","","",268,{"inputs":[{"name":"self"},{"name":"tyimpltrait"}],"output":{"name":"tyimpltrait"}}],[11,"fold_ty_infer","","",268,{"inputs":[{"name":"self"},{"name":"tyinfer"}],"output":{"name":"tyinfer"}}],[11,"fold_ty_never","","",268,{"inputs":[{"name":"self"},{"name":"tynever"}],"output":{"name":"tynever"}}],[11,"fold_ty_param","","",268,{"inputs":[{"name":"self"},{"name":"typaram"}],"output":{"name":"typaram"}}],[11,"fold_ty_param_bound","","",268,{"inputs":[{"name":"self"},{"name":"typarambound"}],"output":{"name":"typarambound"}}],[11,"fold_ty_paren","","",268,{"inputs":[{"name":"self"},{"name":"typaren"}],"output":{"name":"typaren"}}],[11,"fold_ty_path","","",268,{"inputs":[{"name":"self"},{"name":"typath"}],"output":{"name":"typath"}}],[11,"fold_ty_ptr","","",268,{"inputs":[{"name":"self"},{"name":"typtr"}],"output":{"name":"typtr"}}],[11,"fold_ty_rptr","","",268,{"inputs":[{"name":"self"},{"name":"tyrptr"}],"output":{"name":"tyrptr"}}],[11,"fold_ty_slice","","",268,{"inputs":[{"name":"self"},{"name":"tyslice"}],"output":{"name":"tyslice"}}],[11,"fold_ty_trait_object","","",268,{"inputs":[{"name":"self"},{"name":"tytraitobject"}],"output":{"name":"tytraitobject"}}],[11,"fold_ty_tup","","",268,{"inputs":[{"name":"self"},{"name":"tytup"}],"output":{"name":"tytup"}}],[11,"fold_type_binding","","",268,{"inputs":[{"name":"self"},{"name":"typebinding"}],"output":{"name":"typebinding"}}],[11,"fold_un_op","","",268,{"inputs":[{"name":"self"},{"name":"unop"}],"output":{"name":"unop"}}],[11,"fold_unsafety","","",268,{"inputs":[{"name":"self"},{"name":"unsafety"}],"output":{"name":"unsafety"}}],[11,"fold_variant","","",268,{"inputs":[{"name":"self"},{"name":"variant"}],"output":{"name":"variant"}}],[11,"fold_variant_data","","",268,{"inputs":[{"name":"self"},{"name":"variantdata"}],"output":{"name":"variantdata"}}],[11,"fold_view_path","","",268,{"inputs":[{"name":"self"},{"name":"viewpath"}],"output":{"name":"viewpath"}}],[11,"fold_vis_crate","","",268,{"inputs":[{"name":"self"},{"name":"viscrate"}],"output":{"name":"viscrate"}}],[11,"fold_vis_inherited","","",268,{"inputs":[{"name":"self"},{"name":"visinherited"}],"output":{"name":"visinherited"}}],[11,"fold_vis_public","","",268,{"inputs":[{"name":"self"},{"name":"vispublic"}],"output":{"name":"vispublic"}}],[11,"fold_vis_restricted","","",268,{"inputs":[{"name":"self"},{"name":"visrestricted"}],"output":{"name":"visrestricted"}}],[11,"fold_visibility","","",268,{"inputs":[{"name":"self"},{"name":"visibility"}],"output":{"name":"visibility"}}],[11,"fold_where_bound_predicate","","",268,{"inputs":[{"name":"self"},{"name":"whereboundpredicate"}],"output":{"name":"whereboundpredicate"}}],[11,"fold_where_clause","","",268,{"inputs":[{"name":"self"},{"name":"whereclause"}],"output":{"name":"whereclause"}}],[11,"fold_where_eq_predicate","","",268,{"inputs":[{"name":"self"},{"name":"whereeqpredicate"}],"output":{"name":"whereeqpredicate"}}],[11,"fold_where_predicate","","",268,{"inputs":[{"name":"self"},{"name":"wherepredicate"}],"output":{"name":"wherepredicate"}}],[11,"fold_where_region_predicate","","",268,{"inputs":[{"name":"self"},{"name":"whereregionpredicate"}],"output":{"name":"whereregionpredicate"}}],[11,"to_tokens","futures_await_syn::tokens","",58,null],[11,"to_tokens","","",35,null],[11,"to_tokens","","",13,null],[11,"to_tokens","","",54,null],[11,"to_tokens","","",76,null],[11,"to_tokens","","",26,null],[11,"to_tokens","futures_await_syn::delimited","",88,null],[11,"to_tokens","futures_await_syn::tokens","",39,null],[11,"to_tokens","","",25,null],[11,"to_tokens","","",5,null],[11,"to_tokens","","",18,null],[11,"to_tokens","","",11,null],[11,"to_tokens","","",63,null],[11,"to_tokens","","",75,null],[11,"to_tokens","futures_await_syn::delimited","",269,null],[11,"to_tokens","futures_await_syn::tokens","",24,null],[11,"to_tokens","","",7,null],[11,"to_tokens","","",34,null],[11,"to_tokens","","",2,null],[11,"to_tokens","","",64,null],[11,"to_tokens","","",82,null],[11,"to_tokens","","",31,null],[11,"to_tokens","","",27,null],[11,"to_tokens","","",52,null],[11,"to_tokens","","",15,null],[11,"to_tokens","","",87,null],[11,"to_tokens","","",71,null],[11,"to_tokens","","",74,null],[11,"to_tokens","","",4,null],[11,"to_tokens","","",86,null],[11,"to_tokens","","",55,null],[11,"to_tokens","","",78,null],[11,"to_tokens","","",66,null],[11,"to_tokens","","",38,null],[11,"to_tokens","","",77,null],[11,"to_tokens","","",73,null],[11,"to_tokens","","",9,null],[11,"to_tokens","","",80,null],[11,"to_tokens","","",81,null],[11,"to_tokens","","",84,null],[11,"to_tokens","","",44,null],[11,"to_tokens","","",14,null],[11,"to_tokens","","",70,null],[11,"to_tokens","","",17,null],[11,"to_tokens","","",20,null],[11,"to_tokens","","",32,null],[11,"to_tokens","","",19,null],[11,"to_tokens","","",62,null],[11,"to_tokens","","",69,null],[11,"to_tokens","","",21,null],[11,"to_tokens","","",67,null],[11,"to_tokens","","",1,null],[11,"to_tokens","","",6,null],[11,"to_tokens","","",53,null],[11,"to_tokens","","",10,null],[11,"to_tokens","","",56,null],[11,"to_tokens","","",65,null],[11,"to_tokens","","",16,null],[11,"to_tokens","","",29,null],[11,"to_tokens","","",42,null],[11,"to_tokens","","",37,null],[11,"to_tokens","","",72,null],[11,"to_tokens","","",60,null],[11,"to_tokens","","",57,null],[11,"to_tokens","","",36,null],[11,"to_tokens","","",8,null],[11,"to_tokens","","",79,null],[11,"to_tokens","","",61,null],[11,"to_tokens","","",23,null],[11,"to_tokens","","",51,null],[11,"to_tokens","","",30,null],[11,"to_tokens","","",85,null],[11,"to_tokens","","",40,null],[11,"to_tokens","","",50,null],[11,"to_tokens","","",28,null],[11,"to_tokens","","",43,null],[11,"to_tokens","","",59,null],[11,"to_tokens","","",22,null],[11,"to_tokens","","",12,null],[11,"to_tokens","","",49,null],[11,"to_tokens","","",41,null],[11,"to_tokens","","",33,null],[11,"to_tokens","","",3,null],[11,"to_tokens","","",83,null],[11,"to_tokens","","",68,null],[11,"extend","futures_await_syn::delimited","",269,null],[11,"extend","","",269,null],[11,"default","futures_await_syn::tokens","",40,{"inputs":[],"output":{"name":"shreq"}}],[11,"default","","",81,{"inputs":[],"output":{"name":"type"}}],[11,"default","","",14,{"inputs":[],"output":{"name":"diveq"}}],[11,"default","","",46,{"inputs":[],"output":{"name":"bracket"}}],[11,"default","","",65,{"inputs":[],"output":{"name":"impl"}}],[11,"default","","",5,{"inputs":[],"output":{"name":"andeq"}}],[11,"default","","",75,{"inputs":[],"output":{"name":"return"}}],[11,"default","","",87,{"inputs":[],"output":{"name":"yield"}}],[11,"default","","",25,{"inputs":[],"output":{"name":"ne"}}],[11,"default","","",80,{"inputs":[],"output":{"name":"trait"}}],[11,"default","","",9,{"inputs":[],"output":{"name":"careteq"}}],[11,"default","","",7,{"inputs":[],"output":{"name":"bang"}}],[11,"default","","",60,{"inputs":[],"output":{"name":"enum"}}],[11,"default","","",49,{"inputs":[],"output":{"name":"as"}}],[11,"default","","",51,{"inputs":[],"output":{"name":"break"}}],[11,"default","","",47,{"inputs":[],"output":{"name":"paren"}}],[11,"default","","",73,{"inputs":[],"output":{"name":"pub"}}],[11,"default","","",61,{"inputs":[],"output":{"name":"extern"}}],[11,"default","futures_await_syn::delimited","",269,{"inputs":[],"output":{"name":"delimited"}}],[11,"default","futures_await_syn::tokens","",27,{"inputs":[],"output":{"name":"oreq"}}],[11,"default","","",43,{"inputs":[],"output":{"name":"subeq"}}],[11,"default","","",70,{"inputs":[],"output":{"name":"mod"}}],[11,"default","","",76,{"inputs":[],"output":{"name":"self_"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"and"}}],[11,"default","","",36,{"inputs":[],"output":{"name":"semi"}}],[11,"default","","",66,{"inputs":[],"output":{"name":"in"}}],[11,"default","","",64,{"inputs":[],"output":{"name":"if"}}],[11,"default","","",21,{"inputs":[],"output":{"name":"gt"}}],[11,"default","","",18,{"inputs":[],"output":{"name":"eq"}}],[11,"default","","",78,{"inputs":[],"output":{"name":"struct"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"addeq"}}],[11,"default","","",32,{"inputs":[],"output":{"name":"larrow"}}],[11,"default","","",24,{"inputs":[],"output":{"name":"muleq"}}],[11,"default","","",55,{"inputs":[],"output":{"name":"continue"}}],[11,"default","","",31,{"inputs":[],"output":{"name":"rarrow"}}],[11,"default","","",77,{"inputs":[],"output":{"name":"static"}}],[11,"default","","",26,{"inputs":[],"output":{"name":"or"}}],[11,"default","","",38,{"inputs":[],"output":{"name":"shleq"}}],[11,"default","","",33,{"inputs":[],"output":{"name":"rem"}}],[11,"default","","",68,{"inputs":[],"output":{"name":"loop"}}],[11,"default","","",74,{"inputs":[],"output":{"name":"ref"}}],[11,"default","","",35,{"inputs":[],"output":{"name":"rocket"}}],[11,"default","","",4,{"inputs":[],"output":{"name":"andand"}}],[11,"default","","",72,{"inputs":[],"output":{"name":"mut"}}],[11,"default","","",63,{"inputs":[],"output":{"name":"for"}}],[11,"default","","",39,{"inputs":[],"output":{"name":"shr"}}],[11,"default","","",53,{"inputs":[],"output":{"name":"catch"}}],[11,"default","","",58,{"inputs":[],"output":{"name":"do"}}],[11,"default","","",34,{"inputs":[],"output":{"name":"remeq"}}],[11,"default","futures_await_syn","",0,{"inputs":[],"output":{"name":"span"}}],[11,"default","futures_await_syn::tokens","",52,{"inputs":[],"output":{"name":"capself"}}],[11,"default","","",23,{"inputs":[],"output":{"name":"lt"}}],[11,"default","","",6,{"inputs":[],"output":{"name":"at"}}],[11,"default","","",86,{"inputs":[],"output":{"name":"while"}}],[11,"default","","",29,{"inputs":[],"output":{"name":"pound"}}],[11,"default","","",62,{"inputs":[],"output":{"name":"fn_"}}],[11,"default","","",59,{"inputs":[],"output":{"name":"else"}}],[11,"default","","",57,{"inputs":[],"output":{"name":"default_"}}],[11,"default","","",20,{"inputs":[],"output":{"name":"ge"}}],[11,"default","","",37,{"inputs":[],"output":{"name":"shl"}}],[11,"default","","",15,{"inputs":[],"output":{"name":"dot"}}],[11,"default","","",82,{"inputs":[],"output":{"name":"union"}}],[11,"default","","",13,{"inputs":[],"output":{"name":"div"}}],[11,"default","","",10,{"inputs":[],"output":{"name":"colon"}}],[11,"default","","",44,{"inputs":[],"output":{"name":"underscore"}}],[11,"default","","",16,{"inputs":[],"output":{"name":"dot2"}}],[11,"default","","",85,{"inputs":[],"output":{"name":"where"}}],[11,"default","","",19,{"inputs":[],"output":{"name":"eqeq"}}],[11,"default","","",54,{"inputs":[],"output":{"name":"const"}}],[11,"default","","",69,{"inputs":[],"output":{"name":"match"}}],[11,"default","","",84,{"inputs":[],"output":{"name":"use"}}],[11,"default","","",79,{"inputs":[],"output":{"name":"super"}}],[11,"default","","",30,{"inputs":[],"output":{"name":"question"}}],[11,"default","","",50,{"inputs":[],"output":{"name":"box_"}}],[11,"default","","",83,{"inputs":[],"output":{"name":"unsafe"}}],[11,"default","","",28,{"inputs":[],"output":{"name":"oror"}}],[11,"default","","",71,{"inputs":[],"output":{"name":"move"}}],[11,"default","","",8,{"inputs":[],"output":{"name":"caret"}}],[11,"default","","",11,{"inputs":[],"output":{"name":"colon2"}}],[11,"default","","",48,{"inputs":[],"output":{"name":"group"}}],[11,"default","","",12,{"inputs":[],"output":{"name":"comma"}}],[11,"default","","",67,{"inputs":[],"output":{"name":"let"}}],[11,"default","","",17,{"inputs":[],"output":{"name":"dot3"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"add"}}],[11,"default","","",22,{"inputs":[],"output":{"name":"le"}}],[11,"default","","",41,{"inputs":[],"output":{"name":"star"}}],[11,"default","","",45,{"inputs":[],"output":{"name":"brace"}}],[11,"default","","",42,{"inputs":[],"output":{"name":"sub"}}],[11,"default","","",56,{"inputs":[],"output":{"name":"crate"}}],[11,"next","futures_await_syn::delimited","",270,{"inputs":[{"name":"self"}],"output":{"generics":["element"],"name":"option"}}],[11,"next","","",271,{"inputs":[{"name":"self"}],"output":{"generics":["element"],"name":"option"}}],[11,"next","","",272,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",273,{"inputs":[{"name":"self"}],"output":{"generics":["element"],"name":"option"}}],[11,"eq","futures_await_syn","",0,{"inputs":[{"name":"self"},{"name":"span"}],"output":{"name":"bool"}}],[11,"parse","futures_await_syn::tokens","",15,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",87,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",29,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",51,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",63,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",24,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",73,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",81,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",52,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",62,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",53,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",41,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",2,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",19,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",27,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",35,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",1,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",6,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",18,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",8,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",83,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",22,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",71,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",5,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",50,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",25,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",49,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",70,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",16,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",68,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",17,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",12,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",31,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",11,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",43,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",20,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",56,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",44,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",10,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",39,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",84,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",37,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",21,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",65,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",82,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",26,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",69,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",80,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",64,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",59,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",58,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",60,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",13,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",75,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",57,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",74,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",4,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",9,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",54,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",14,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",36,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",55,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",38,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",34,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",30,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",61,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",23,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",32,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",7,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",40,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",79,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",67,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",85,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",66,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",72,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",78,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",76,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",86,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",77,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",28,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",33,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",3,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","",42,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"fmt","futures_await_syn","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",274,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"from_iter","futures_await_syn::delimited","",269,{"inputs":[{"name":"i"}],"output":{"name":"delimited"}}],[11,"from_iter","","",269,{"inputs":[{"name":"i"}],"output":{"name":"delimited"}}],[11,"hash","futures_await_syn","",0,null],[11,"from","","",274,{"inputs":[{"name":"lexerror"}],"output":{"name":"parseerror"}}],[11,"from","futures_await_syn::delimited","",269,{"inputs":[{"name":"vec"}],"output":{"name":"delimited"}}],[11,"from","","",269,{"inputs":[{"name":"vec"}],"output":{"name":"delimited"}}],[11,"from","futures_await_syn","",274,{"inputs":[{"name":"lexerror"}],"output":{"name":"parseerror"}}],[11,"fmt","","",274,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"into_iter","futures_await_syn::delimited","",269,{"inputs":[{"name":"self"}],"output":{"name":"intoiter"}}],[11,"clone","futures_await_syn","",0,{"inputs":[{"name":"self"}],"output":{"name":"span"}}],[11,"description","","",274,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"surround","futures_await_syn::tokens","",45,null],[11,"parse","","",45,{"inputs":[{"name":"cursor"},{"name":"f"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"surround","","",46,null],[11,"parse","","",46,{"inputs":[{"name":"cursor"},{"name":"f"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"surround","","",47,null],[11,"parse","","",47,{"inputs":[{"name":"cursor"},{"name":"f"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"surround","","",48,null],[11,"parse","","",48,{"inputs":[{"name":"cursor"},{"name":"f"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"new","futures_await_syn::delimited","",269,{"inputs":[],"output":{"name":"delimited"}}],[11,"is_empty","","",269,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"len","","",269,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"get","","",269,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"element"}}],[11,"get_mut","","",269,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"element"}}],[11,"first","","",269,{"inputs":[{"name":"self"}],"output":{"generics":["element"],"name":"option"}}],[11,"first_mut","","",269,{"inputs":[{"name":"self"}],"output":{"generics":["element"],"name":"option"}}],[11,"last","","",269,{"inputs":[{"name":"self"}],"output":{"generics":["element"],"name":"option"}}],[11,"last_mut","","",269,{"inputs":[{"name":"self"}],"output":{"generics":["element"],"name":"option"}}],[11,"iter","","",269,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"iter_mut","","",269,{"inputs":[{"name":"self"}],"output":{"name":"itermut"}}],[11,"items","","",269,{"inputs":[{"name":"self"}],"output":{"name":"items"}}],[11,"push","","",269,null],[11,"push_first","","",269,null],[11,"push_next","","",269,null],[11,"push_trailing","","",269,null],[11,"push_default","","",269,null],[11,"pop","","",269,{"inputs":[{"name":"self"}],"output":{"generics":["element"],"name":"option"}}],[11,"into_vec","","",269,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"trailing_delim","","",269,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"parse_separated","","",269,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse_separated_nonempty","","",269,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse_terminated","","",269,{"inputs":[{"name":"cursor"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse_separated_nonempty_with","","",269,null],[11,"parse_terminated_with","","",269,null],[11,"into_item","","",88,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"item","","",88,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"item_mut","","",88,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"delimiter","","",88,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"into_tuple","","",88,null],[11,"fold_abi","futures_await_syn::fold","",268,{"inputs":[{"name":"self"},{"name":"abi"}],"output":{"name":"abi"}}],[11,"fold_abi_kind","","",268,{"inputs":[{"name":"self"},{"name":"abikind"}],"output":{"name":"abikind"}}],[11,"fold_angle_bracketed_parameter_data","","",268,{"inputs":[{"name":"self"},{"name":"anglebracketedparameterdata"}],"output":{"name":"anglebracketedparameterdata"}}],[11,"fold_arg_captured","","",268,{"inputs":[{"name":"self"},{"name":"argcaptured"}],"output":{"name":"argcaptured"}}],[11,"fold_arg_self","","",268,{"inputs":[{"name":"self"},{"name":"argself"}],"output":{"name":"argself"}}],[11,"fold_arg_self_ref","","",268,{"inputs":[{"name":"self"},{"name":"argselfref"}],"output":{"name":"argselfref"}}],[11,"fold_arm","","",268,{"inputs":[{"name":"self"},{"name":"arm"}],"output":{"name":"arm"}}],[11,"fold_attr_style","","",268,{"inputs":[{"name":"self"},{"name":"attrstyle"}],"output":{"name":"attrstyle"}}],[11,"fold_attribute","","",268,{"inputs":[{"name":"self"},{"name":"attribute"}],"output":{"name":"attribute"}}],[11,"fold_bare_fn_arg","","",268,{"inputs":[{"name":"self"},{"name":"barefnarg"}],"output":{"name":"barefnarg"}}],[11,"fold_bare_fn_arg_name","","",268,{"inputs":[{"name":"self"},{"name":"barefnargname"}],"output":{"name":"barefnargname"}}],[11,"fold_bare_fn_ty","","",268,{"inputs":[{"name":"self"},{"name":"barefnty"}],"output":{"name":"barefnty"}}],[11,"fold_bin_op","","",268,{"inputs":[{"name":"self"},{"name":"binop"}],"output":{"name":"binop"}}],[11,"fold_binding_mode","","",268,{"inputs":[{"name":"self"},{"name":"bindingmode"}],"output":{"name":"bindingmode"}}],[11,"fold_block","","",268,{"inputs":[{"name":"self"},{"name":"block"}],"output":{"name":"block"}}],[11,"fold_body","","",268,{"inputs":[{"name":"self"},{"name":"body"}],"output":{"name":"body"}}],[11,"fold_body_enum","","",268,{"inputs":[{"name":"self"},{"name":"bodyenum"}],"output":{"name":"bodyenum"}}],[11,"fold_body_struct","","",268,{"inputs":[{"name":"self"},{"name":"bodystruct"}],"output":{"name":"bodystruct"}}],[11,"fold_bound_lifetimes","","",268,{"inputs":[{"name":"self"},{"name":"boundlifetimes"}],"output":{"name":"boundlifetimes"}}],[11,"fold_capture_by","","",268,{"inputs":[{"name":"self"},{"name":"captureby"}],"output":{"name":"captureby"}}],[11,"fold_constness","","",268,{"inputs":[{"name":"self"},{"name":"constness"}],"output":{"name":"constness"}}],[11,"fold_defaultness","","",268,{"inputs":[{"name":"self"},{"name":"defaultness"}],"output":{"name":"defaultness"}}],[11,"fold_derive_input","","",268,{"inputs":[{"name":"self"},{"name":"deriveinput"}],"output":{"name":"deriveinput"}}],[11,"fold_expr","","",268,{"inputs":[{"name":"self"},{"name":"expr"}],"output":{"name":"expr"}}],[11,"fold_expr_addr_of","","",268,{"inputs":[{"name":"self"},{"name":"expraddrof"}],"output":{"name":"expraddrof"}}],[11,"fold_expr_array","","",268,{"inputs":[{"name":"self"},{"name":"exprarray"}],"output":{"name":"exprarray"}}],[11,"fold_expr_assign","","",268,{"inputs":[{"name":"self"},{"name":"exprassign"}],"output":{"name":"exprassign"}}],[11,"fold_expr_assign_op","","",268,{"inputs":[{"name":"self"},{"name":"exprassignop"}],"output":{"name":"exprassignop"}}],[11,"fold_expr_binary","","",268,{"inputs":[{"name":"self"},{"name":"exprbinary"}],"output":{"name":"exprbinary"}}],[11,"fold_expr_block","","",268,{"inputs":[{"name":"self"},{"name":"exprblock"}],"output":{"name":"exprblock"}}],[11,"fold_expr_box","","",268,{"inputs":[{"name":"self"},{"name":"exprbox"}],"output":{"name":"exprbox"}}],[11,"fold_expr_break","","",268,{"inputs":[{"name":"self"},{"name":"exprbreak"}],"output":{"name":"exprbreak"}}],[11,"fold_expr_call","","",268,{"inputs":[{"name":"self"},{"name":"exprcall"}],"output":{"name":"exprcall"}}],[11,"fold_expr_cast","","",268,{"inputs":[{"name":"self"},{"name":"exprcast"}],"output":{"name":"exprcast"}}],[11,"fold_expr_catch","","",268,{"inputs":[{"name":"self"},{"name":"exprcatch"}],"output":{"name":"exprcatch"}}],[11,"fold_expr_closure","","",268,{"inputs":[{"name":"self"},{"name":"exprclosure"}],"output":{"name":"exprclosure"}}],[11,"fold_expr_continue","","",268,{"inputs":[{"name":"self"},{"name":"exprcontinue"}],"output":{"name":"exprcontinue"}}],[11,"fold_expr_field","","",268,{"inputs":[{"name":"self"},{"name":"exprfield"}],"output":{"name":"exprfield"}}],[11,"fold_expr_for_loop","","",268,{"inputs":[{"name":"self"},{"name":"exprforloop"}],"output":{"name":"exprforloop"}}],[11,"fold_expr_group","","",268,{"inputs":[{"name":"self"},{"name":"exprgroup"}],"output":{"name":"exprgroup"}}],[11,"fold_expr_if","","",268,{"inputs":[{"name":"self"},{"name":"exprif"}],"output":{"name":"exprif"}}],[11,"fold_expr_if_let","","",268,{"inputs":[{"name":"self"},{"name":"expriflet"}],"output":{"name":"expriflet"}}],[11,"fold_expr_in_place","","",268,{"inputs":[{"name":"self"},{"name":"exprinplace"}],"output":{"name":"exprinplace"}}],[11,"fold_expr_index","","",268,{"inputs":[{"name":"self"},{"name":"exprindex"}],"output":{"name":"exprindex"}}],[11,"fold_expr_kind","","",268,{"inputs":[{"name":"self"},{"name":"exprkind"}],"output":{"name":"exprkind"}}],[11,"fold_expr_loop","","",268,{"inputs":[{"name":"self"},{"name":"exprloop"}],"output":{"name":"exprloop"}}],[11,"fold_expr_match","","",268,{"inputs":[{"name":"self"},{"name":"exprmatch"}],"output":{"name":"exprmatch"}}],[11,"fold_expr_method_call","","",268,{"inputs":[{"name":"self"},{"name":"exprmethodcall"}],"output":{"name":"exprmethodcall"}}],[11,"fold_expr_paren","","",268,{"inputs":[{"name":"self"},{"name":"exprparen"}],"output":{"name":"exprparen"}}],[11,"fold_expr_path","","",268,{"inputs":[{"name":"self"},{"name":"exprpath"}],"output":{"name":"exprpath"}}],[11,"fold_expr_range","","",268,{"inputs":[{"name":"self"},{"name":"exprrange"}],"output":{"name":"exprrange"}}],[11,"fold_expr_repeat","","",268,{"inputs":[{"name":"self"},{"name":"exprrepeat"}],"output":{"name":"exprrepeat"}}],[11,"fold_expr_ret","","",268,{"inputs":[{"name":"self"},{"name":"exprret"}],"output":{"name":"exprret"}}],[11,"fold_expr_struct","","",268,{"inputs":[{"name":"self"},{"name":"exprstruct"}],"output":{"name":"exprstruct"}}],[11,"fold_expr_try","","",268,{"inputs":[{"name":"self"},{"name":"exprtry"}],"output":{"name":"exprtry"}}],[11,"fold_expr_tup","","",268,{"inputs":[{"name":"self"},{"name":"exprtup"}],"output":{"name":"exprtup"}}],[11,"fold_expr_tup_field","","",268,{"inputs":[{"name":"self"},{"name":"exprtupfield"}],"output":{"name":"exprtupfield"}}],[11,"fold_expr_type","","",268,{"inputs":[{"name":"self"},{"name":"exprtype"}],"output":{"name":"exprtype"}}],[11,"fold_expr_unary","","",268,{"inputs":[{"name":"self"},{"name":"exprunary"}],"output":{"name":"exprunary"}}],[11,"fold_expr_while","","",268,{"inputs":[{"name":"self"},{"name":"exprwhile"}],"output":{"name":"exprwhile"}}],[11,"fold_expr_while_let","","",268,{"inputs":[{"name":"self"},{"name":"exprwhilelet"}],"output":{"name":"exprwhilelet"}}],[11,"fold_expr_yield","","",268,{"inputs":[{"name":"self"},{"name":"expryield"}],"output":{"name":"expryield"}}],[11,"fold_field","","",268,{"inputs":[{"name":"self"},{"name":"field"}],"output":{"name":"field"}}],[11,"fold_field_pat","","",268,{"inputs":[{"name":"self"},{"name":"fieldpat"}],"output":{"name":"fieldpat"}}],[11,"fold_field_value","","",268,{"inputs":[{"name":"self"},{"name":"fieldvalue"}],"output":{"name":"fieldvalue"}}],[11,"fold_file","","",268,{"inputs":[{"name":"self"},{"name":"file"}],"output":{"name":"file"}}],[11,"fold_fn_arg","","",268,{"inputs":[{"name":"self"},{"name":"fnarg"}],"output":{"name":"fnarg"}}],[11,"fold_fn_decl","","",268,{"inputs":[{"name":"self"},{"name":"fndecl"}],"output":{"name":"fndecl"}}],[11,"fold_foreign_item","","",268,{"inputs":[{"name":"self"},{"name":"foreignitem"}],"output":{"name":"foreignitem"}}],[11,"fold_foreign_item_fn","","",268,{"inputs":[{"name":"self"},{"name":"foreignitemfn"}],"output":{"name":"foreignitemfn"}}],[11,"fold_foreign_item_kind","","",268,{"inputs":[{"name":"self"},{"name":"foreignitemkind"}],"output":{"name":"foreignitemkind"}}],[11,"fold_foreign_item_static","","",268,{"inputs":[{"name":"self"},{"name":"foreignitemstatic"}],"output":{"name":"foreignitemstatic"}}],[11,"fold_function_ret_ty","","",268,{"inputs":[{"name":"self"},{"name":"functionretty"}],"output":{"name":"functionretty"}}],[11,"fold_generics","","",268,{"inputs":[{"name":"self"},{"name":"generics"}],"output":{"name":"generics"}}],[11,"fold_impl_item","","",268,{"inputs":[{"name":"self"},{"name":"implitem"}],"output":{"name":"implitem"}}],[11,"fold_impl_item_const","","",268,{"inputs":[{"name":"self"},{"name":"implitemconst"}],"output":{"name":"implitemconst"}}],[11,"fold_impl_item_kind","","",268,{"inputs":[{"name":"self"},{"name":"implitemkind"}],"output":{"name":"implitemkind"}}],[11,"fold_impl_item_method","","",268,{"inputs":[{"name":"self"},{"name":"implitemmethod"}],"output":{"name":"implitemmethod"}}],[11,"fold_impl_item_type","","",268,{"inputs":[{"name":"self"},{"name":"implitemtype"}],"output":{"name":"implitemtype"}}],[11,"fold_impl_polarity","","",268,{"inputs":[{"name":"self"},{"name":"implpolarity"}],"output":{"name":"implpolarity"}}],[11,"fold_in_place_kind","","",268,{"inputs":[{"name":"self"},{"name":"inplacekind"}],"output":{"name":"inplacekind"}}],[11,"fold_item","","",268,{"inputs":[{"name":"self"},{"name":"item"}],"output":{"name":"item"}}],[11,"fold_item_const","","",268,{"inputs":[{"name":"self"},{"name":"itemconst"}],"output":{"name":"itemconst"}}],[11,"fold_item_default_impl","","",268,{"inputs":[{"name":"self"},{"name":"itemdefaultimpl"}],"output":{"name":"itemdefaultimpl"}}],[11,"fold_item_enum","","",268,{"inputs":[{"name":"self"},{"name":"itemenum"}],"output":{"name":"itemenum"}}],[11,"fold_item_extern_crate","","",268,{"inputs":[{"name":"self"},{"name":"itemexterncrate"}],"output":{"name":"itemexterncrate"}}],[11,"fold_item_fn","","",268,{"inputs":[{"name":"self"},{"name":"itemfn"}],"output":{"name":"itemfn"}}],[11,"fold_item_foreign_mod","","",268,{"inputs":[{"name":"self"},{"name":"itemforeignmod"}],"output":{"name":"itemforeignmod"}}],[11,"fold_item_impl","","",268,{"inputs":[{"name":"self"},{"name":"itemimpl"}],"output":{"name":"itemimpl"}}],[11,"fold_item_kind","","",268,{"inputs":[{"name":"self"},{"name":"itemkind"}],"output":{"name":"itemkind"}}],[11,"fold_item_mod","","",268,{"inputs":[{"name":"self"},{"name":"itemmod"}],"output":{"name":"itemmod"}}],[11,"fold_item_static","","",268,{"inputs":[{"name":"self"},{"name":"itemstatic"}],"output":{"name":"itemstatic"}}],[11,"fold_item_struct","","",268,{"inputs":[{"name":"self"},{"name":"itemstruct"}],"output":{"name":"itemstruct"}}],[11,"fold_item_trait","","",268,{"inputs":[{"name":"self"},{"name":"itemtrait"}],"output":{"name":"itemtrait"}}],[11,"fold_item_ty","","",268,{"inputs":[{"name":"self"},{"name":"itemty"}],"output":{"name":"itemty"}}],[11,"fold_item_union","","",268,{"inputs":[{"name":"self"},{"name":"itemunion"}],"output":{"name":"itemunion"}}],[11,"fold_item_use","","",268,{"inputs":[{"name":"self"},{"name":"itemuse"}],"output":{"name":"itemuse"}}],[11,"fold_lifetime_def","","",268,{"inputs":[{"name":"self"},{"name":"lifetimedef"}],"output":{"name":"lifetimedef"}}],[11,"fold_local","","",268,{"inputs":[{"name":"self"},{"name":"local"}],"output":{"name":"local"}}],[11,"fold_mac","","",268,{"inputs":[{"name":"self"},{"name":"mac"}],"output":{"name":"mac"}}],[11,"fold_mac_stmt_style","","",268,{"inputs":[{"name":"self"},{"name":"macstmtstyle"}],"output":{"name":"macstmtstyle"}}],[11,"fold_meta_item","","",268,{"inputs":[{"name":"self"},{"name":"metaitem"}],"output":{"name":"metaitem"}}],[11,"fold_meta_item_list","","",268,{"inputs":[{"name":"self"},{"name":"metaitemlist"}],"output":{"name":"metaitemlist"}}],[11,"fold_meta_name_value","","",268,{"inputs":[{"name":"self"},{"name":"metanamevalue"}],"output":{"name":"metanamevalue"}}],[11,"fold_method_sig","","",268,{"inputs":[{"name":"self"},{"name":"methodsig"}],"output":{"name":"methodsig"}}],[11,"fold_mut_ty","","",268,{"inputs":[{"name":"self"},{"name":"mutty"}],"output":{"name":"mutty"}}],[11,"fold_mutability","","",268,{"inputs":[{"name":"self"},{"name":"mutability"}],"output":{"name":"mutability"}}],[11,"fold_nested_meta_item","","",268,{"inputs":[{"name":"self"},{"name":"nestedmetaitem"}],"output":{"name":"nestedmetaitem"}}],[11,"fold_parenthesized_parameter_data","","",268,{"inputs":[{"name":"self"},{"name":"parenthesizedparameterdata"}],"output":{"name":"parenthesizedparameterdata"}}],[11,"fold_pat","","",268,{"inputs":[{"name":"self"},{"name":"pat"}],"output":{"name":"pat"}}],[11,"fold_pat_box","","",268,{"inputs":[{"name":"self"},{"name":"patbox"}],"output":{"name":"patbox"}}],[11,"fold_pat_ident","","",268,{"inputs":[{"name":"self"},{"name":"patident"}],"output":{"name":"patident"}}],[11,"fold_pat_lit","","",268,{"inputs":[{"name":"self"},{"name":"patlit"}],"output":{"name":"patlit"}}],[11,"fold_pat_path","","",268,{"inputs":[{"name":"self"},{"name":"patpath"}],"output":{"name":"patpath"}}],[11,"fold_pat_range","","",268,{"inputs":[{"name":"self"},{"name":"patrange"}],"output":{"name":"patrange"}}],[11,"fold_pat_ref","","",268,{"inputs":[{"name":"self"},{"name":"patref"}],"output":{"name":"patref"}}],[11,"fold_pat_slice","","",268,{"inputs":[{"name":"self"},{"name":"patslice"}],"output":{"name":"patslice"}}],[11,"fold_pat_struct","","",268,{"inputs":[{"name":"self"},{"name":"patstruct"}],"output":{"name":"patstruct"}}],[11,"fold_pat_tuple","","",268,{"inputs":[{"name":"self"},{"name":"pattuple"}],"output":{"name":"pattuple"}}],[11,"fold_pat_tuple_struct","","",268,{"inputs":[{"name":"self"},{"name":"pattuplestruct"}],"output":{"name":"pattuplestruct"}}],[11,"fold_pat_wild","","",268,{"inputs":[{"name":"self"},{"name":"patwild"}],"output":{"name":"patwild"}}],[11,"fold_path","","",268,{"inputs":[{"name":"self"},{"name":"path"}],"output":{"name":"path"}}],[11,"fold_path_glob","","",268,{"inputs":[{"name":"self"},{"name":"pathglob"}],"output":{"name":"pathglob"}}],[11,"fold_path_list","","",268,{"inputs":[{"name":"self"},{"name":"pathlist"}],"output":{"name":"pathlist"}}],[11,"fold_path_list_item","","",268,{"inputs":[{"name":"self"},{"name":"pathlistitem"}],"output":{"name":"pathlistitem"}}],[11,"fold_path_parameters","","",268,{"inputs":[{"name":"self"},{"name":"pathparameters"}],"output":{"name":"pathparameters"}}],[11,"fold_path_segment","","",268,{"inputs":[{"name":"self"},{"name":"pathsegment"}],"output":{"name":"pathsegment"}}],[11,"fold_path_simple","","",268,{"inputs":[{"name":"self"},{"name":"pathsimple"}],"output":{"name":"pathsimple"}}],[11,"fold_poly_trait_ref","","",268,{"inputs":[{"name":"self"},{"name":"polytraitref"}],"output":{"name":"polytraitref"}}],[11,"fold_qself","","",268,{"inputs":[{"name":"self"},{"name":"qself"}],"output":{"name":"qself"}}],[11,"fold_range_limits","","",268,{"inputs":[{"name":"self"},{"name":"rangelimits"}],"output":{"name":"rangelimits"}}],[11,"fold_stmt","","",268,{"inputs":[{"name":"self"},{"name":"stmt"}],"output":{"name":"stmt"}}],[11,"fold_trait_bound_modifier","","",268,{"inputs":[{"name":"self"},{"name":"traitboundmodifier"}],"output":{"name":"traitboundmodifier"}}],[11,"fold_trait_item","","",268,{"inputs":[{"name":"self"},{"name":"traititem"}],"output":{"name":"traititem"}}],[11,"fold_trait_item_const","","",268,{"inputs":[{"name":"self"},{"name":"traititemconst"}],"output":{"name":"traititemconst"}}],[11,"fold_trait_item_kind","","",268,{"inputs":[{"name":"self"},{"name":"traititemkind"}],"output":{"name":"traititemkind"}}],[11,"fold_trait_item_method","","",268,{"inputs":[{"name":"self"},{"name":"traititemmethod"}],"output":{"name":"traititemmethod"}}],[11,"fold_trait_item_type","","",268,{"inputs":[{"name":"self"},{"name":"traititemtype"}],"output":{"name":"traititemtype"}}],[11,"fold_ty","","",268,{"inputs":[{"name":"self"},{"name":"ty"}],"output":{"name":"ty"}}],[11,"fold_ty_array","","",268,{"inputs":[{"name":"self"},{"name":"tyarray"}],"output":{"name":"tyarray"}}],[11,"fold_ty_bare_fn","","",268,{"inputs":[{"name":"self"},{"name":"tybarefn"}],"output":{"name":"tybarefn"}}],[11,"fold_ty_group","","",268,{"inputs":[{"name":"self"},{"name":"tygroup"}],"output":{"name":"tygroup"}}],[11,"fold_ty_impl_trait","","",268,{"inputs":[{"name":"self"},{"name":"tyimpltrait"}],"output":{"name":"tyimpltrait"}}],[11,"fold_ty_infer","","",268,{"inputs":[{"name":"self"},{"name":"tyinfer"}],"output":{"name":"tyinfer"}}],[11,"fold_ty_never","","",268,{"inputs":[{"name":"self"},{"name":"tynever"}],"output":{"name":"tynever"}}],[11,"fold_ty_param","","",268,{"inputs":[{"name":"self"},{"name":"typaram"}],"output":{"name":"typaram"}}],[11,"fold_ty_param_bound","","",268,{"inputs":[{"name":"self"},{"name":"typarambound"}],"output":{"name":"typarambound"}}],[11,"fold_ty_paren","","",268,{"inputs":[{"name":"self"},{"name":"typaren"}],"output":{"name":"typaren"}}],[11,"fold_ty_path","","",268,{"inputs":[{"name":"self"},{"name":"typath"}],"output":{"name":"typath"}}],[11,"fold_ty_ptr","","",268,{"inputs":[{"name":"self"},{"name":"typtr"}],"output":{"name":"typtr"}}],[11,"fold_ty_rptr","","",268,{"inputs":[{"name":"self"},{"name":"tyrptr"}],"output":{"name":"tyrptr"}}],[11,"fold_ty_slice","","",268,{"inputs":[{"name":"self"},{"name":"tyslice"}],"output":{"name":"tyslice"}}],[11,"fold_ty_trait_object","","",268,{"inputs":[{"name":"self"},{"name":"tytraitobject"}],"output":{"name":"tytraitobject"}}],[11,"fold_ty_tup","","",268,{"inputs":[{"name":"self"},{"name":"tytup"}],"output":{"name":"tytup"}}],[11,"fold_type_binding","","",268,{"inputs":[{"name":"self"},{"name":"typebinding"}],"output":{"name":"typebinding"}}],[11,"fold_un_op","","",268,{"inputs":[{"name":"self"},{"name":"unop"}],"output":{"name":"unop"}}],[11,"fold_unsafety","","",268,{"inputs":[{"name":"self"},{"name":"unsafety"}],"output":{"name":"unsafety"}}],[11,"fold_variant","","",268,{"inputs":[{"name":"self"},{"name":"variant"}],"output":{"name":"variant"}}],[11,"fold_variant_data","","",268,{"inputs":[{"name":"self"},{"name":"variantdata"}],"output":{"name":"variantdata"}}],[11,"fold_view_path","","",268,{"inputs":[{"name":"self"},{"name":"viewpath"}],"output":{"name":"viewpath"}}],[11,"fold_vis_crate","","",268,{"inputs":[{"name":"self"},{"name":"viscrate"}],"output":{"name":"viscrate"}}],[11,"fold_vis_inherited","","",268,{"inputs":[{"name":"self"},{"name":"visinherited"}],"output":{"name":"visinherited"}}],[11,"fold_vis_public","","",268,{"inputs":[{"name":"self"},{"name":"vispublic"}],"output":{"name":"vispublic"}}],[11,"fold_vis_restricted","","",268,{"inputs":[{"name":"self"},{"name":"visrestricted"}],"output":{"name":"visrestricted"}}],[11,"fold_visibility","","",268,{"inputs":[{"name":"self"},{"name":"visibility"}],"output":{"name":"visibility"}}],[11,"fold_where_bound_predicate","","",268,{"inputs":[{"name":"self"},{"name":"whereboundpredicate"}],"output":{"name":"whereboundpredicate"}}],[11,"fold_where_clause","","",268,{"inputs":[{"name":"self"},{"name":"whereclause"}],"output":{"name":"whereclause"}}],[11,"fold_where_eq_predicate","","",268,{"inputs":[{"name":"self"},{"name":"whereeqpredicate"}],"output":{"name":"whereeqpredicate"}}],[11,"fold_where_predicate","","",268,{"inputs":[{"name":"self"},{"name":"wherepredicate"}],"output":{"name":"wherepredicate"}}],[11,"fold_where_region_predicate","","",268,{"inputs":[{"name":"self"},{"name":"whereregionpredicate"}],"output":{"name":"whereregionpredicate"}}]],"paths":[[3,"Span"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"Rocket"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Underscore"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"As"],[3,"Box_"],[3,"Break"],[3,"CapSelf"],[3,"Catch"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default_"],[3,"Do"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Fn_"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"Self_"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Type"],[3,"Union"],[3,"Unsafe"],[3,"Use"],[3,"Where"],[3,"While"],[3,"Yield"],[4,"Element"],[3,"Attribute"],[3,"MetaItemList"],[3,"MetaNameValue"],[3,"Field"],[3,"Variant"],[3,"VisRestricted"],[3,"VisCrate"],[3,"VisPublic"],[3,"Expr"],[3,"ExprBox"],[3,"ExprInPlace"],[3,"ExprArray"],[3,"ExprCall"],[3,"ExprMethodCall"],[3,"ExprTup"],[3,"ExprBinary"],[3,"ExprUnary"],[3,"ExprCast"],[3,"ExprType"],[3,"ExprIf"],[3,"ExprIfLet"],[3,"ExprWhile"],[3,"ExprWhileLet"],[3,"ExprForLoop"],[3,"ExprLoop"],[3,"ExprMatch"],[3,"ExprClosure"],[3,"ExprBlock"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprField"],[3,"ExprTupField"],[3,"ExprIndex"],[3,"ExprRange"],[3,"ExprPath"],[3,"ExprAddrOf"],[3,"ExprBreak"],[3,"ExprContinue"],[3,"ExprRet"],[3,"ExprStruct"],[3,"ExprRepeat"],[3,"ExprParen"],[3,"ExprTry"],[3,"ExprCatch"],[3,"ExprGroup"],[3,"ExprYield"],[3,"Arm"],[3,"Block"],[3,"FieldPat"],[3,"FieldValue"],[3,"Local"],[3,"PatIdent"],[3,"PatWild"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatPath"],[3,"PatBox"],[3,"PatRef"],[3,"PatLit"],[3,"PatRange"],[3,"PatSlice"],[3,"Generics"],[3,"LifetimeDef"],[3,"TyParam"],[3,"WhereBoundPredicate"],[3,"WhereClause"],[3,"WhereEqPredicate"],[3,"WhereRegionPredicate"],[3,"BoundLifetimes"],[3,"Ident"],[3,"FnDecl"],[3,"ForeignItem"],[3,"ItemForeignMod"],[3,"ImplItem"],[3,"Item"],[3,"MethodSig"],[3,"PathListItem"],[3,"TraitItem"],[3,"ItemExternCrate"],[3,"ItemUse"],[3,"ItemStatic"],[3,"ItemConst"],[3,"ItemFn"],[3,"ItemMod"],[3,"ItemTy"],[3,"ItemEnum"],[3,"ItemStruct"],[3,"ItemUnion"],[3,"ItemTrait"],[3,"ItemDefaultImpl"],[3,"ItemImpl"],[3,"PathSimple"],[3,"PathGlob"],[3,"PathList"],[3,"ForeignItemFn"],[3,"ForeignItemStatic"],[3,"TraitItemConst"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"ImplItemConst"],[3,"ImplItemMethod"],[3,"ImplItemType"],[3,"ArgSelfRef"],[3,"ArgSelf"],[3,"ArgCaptured"],[3,"File"],[3,"Lifetime"],[3,"Lit"],[3,"Mac"],[3,"TokenTree"],[3,"DeriveInput"],[3,"BodyEnum"],[3,"BodyStruct"],[3,"Abi"],[3,"AngleBracketedParameterData"],[3,"BareFnArg"],[3,"BareFnTy"],[3,"MutTy"],[3,"ParenthesizedParameterData"],[3,"Path"],[3,"PathSegment"],[3,"PolyTraitRef"],[3,"QSelf"],[3,"TypeBinding"],[3,"TySlice"],[3,"TyArray"],[3,"TyPtr"],[3,"TyRptr"],[3,"TyBareFn"],[3,"TyNever"],[3,"TyTup"],[3,"TyPath"],[3,"TyTraitObject"],[3,"TyImplTrait"],[3,"TyParen"],[3,"TyInfer"],[3,"TyGroup"],[3,"PathTokens"],[4,"AttrStyle"],[4,"MetaItem"],[4,"NestedMetaItem"],[4,"VariantData"],[4,"Visibility"],[4,"ExprKind"],[4,"BindingMode"],[4,"CaptureBy"],[4,"MacStmtStyle"],[4,"Pat"],[4,"RangeLimits"],[4,"Stmt"],[4,"InPlaceKind"],[4,"TraitBoundModifier"],[4,"TyParamBound"],[4,"WherePredicate"],[4,"Constness"],[4,"Defaultness"],[4,"FnArg"],[4,"ForeignItemKind"],[4,"ImplItemKind"],[4,"ImplPolarity"],[4,"ItemKind"],[4,"TraitItemKind"],[4,"ViewPath"],[4,"LitKind"],[4,"Body"],[4,"BinOp"],[4,"UnOp"],[4,"AbiKind"],[4,"BareFnArgName"],[4,"FunctionRetTy"],[4,"Mutability"],[4,"PathParameters"],[4,"Ty"],[4,"Unsafety"],[3,"VisInherited"],[3,"ImplGenerics"],[3,"TyGenerics"],[3,"Turbofish"],[8,"Folder"],[3,"Delimited"],[3,"IterMut"],[3,"Iter"],[3,"Items"],[3,"IntoIter"],[3,"ParseError"]]};
searchIndex["futures_await_synom"] = {"doc":"Adapted from `nom` by removing the `IPResult::Incomplete` variant which:","items":[[3,"ParseError","futures_await_synom","",null,null],[5,"parse_error","","An error with a default error message.",null,{"inputs":[],"output":{"name":"presult"}}],[0,"delimited","","",null,null],[3,"Delimited","futures_await_synom::delimited","",null,null],[3,"Iter","","",null,null],[3,"IterMut","","",null,null],[3,"Items","","",null,null],[3,"IntoIter","","",null,null],[4,"Element","","",null,null],[13,"Delimited","","",0,null],[13,"End","","",0,null],[11,"parse_separated","","",1,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse_separated_nonempty","","",1,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse_terminated","","",1,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse_separated_nonempty_with","","",1,null],[11,"parse_terminated_with","","",1,null],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",0,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"new","","",1,{"inputs":[],"output":{"name":"delimited"}}],[11,"is_empty","","",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"len","","",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"get","","",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"element"}}],[11,"get_mut","","",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"element"}}],[11,"first","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["element"],"name":"option"}}],[11,"first_mut","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["element"],"name":"option"}}],[11,"last","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["element"],"name":"option"}}],[11,"last_mut","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["element"],"name":"option"}}],[11,"iter","","",1,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"iter_mut","","",1,{"inputs":[{"name":"self"}],"output":{"name":"itermut"}}],[11,"items","","",1,{"inputs":[{"name":"self"}],"output":{"name":"items"}}],[11,"push","","",1,{"inputs":[{"name":"self"},{"name":"element"}],"output":null}],[11,"push_first","","",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"push_next","","",1,{"inputs":[{"name":"self"},{"name":"t"},{"name":"d"}],"output":null}],[11,"push_trailing","","",1,{"inputs":[{"name":"self"},{"name":"d"}],"output":null}],[11,"push_default","","",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"pop","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["element"],"name":"option"}}],[11,"into_vec","","",1,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"trailing_delim","","",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"from_iter","","",1,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"from_iter","","",1,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"extend","","",1,{"inputs":[{"name":"self"},{"name":"i"}],"output":null}],[11,"extend","","",1,{"inputs":[{"name":"self"},{"name":"i"}],"output":null}],[11,"into_iter","","",1,{"inputs":[{"name":"self"}],"output":{"name":"intoiter"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"next","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["element"],"name":"option"}}],[11,"next","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["element"],"name":"option"}}],[11,"next","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",5,{"inputs":[{"name":"self"}],"output":{"generics":["element"],"name":"option"}}],[11,"into_item","","",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"item","","",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"item_mut","","",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"delimiter","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"into_tuple","","",0,null],[0,"tokens","futures_await_synom","Discrete tokens that can be parsed out by synom.",null,null],[3,"Add","futures_await_synom::tokens","",null,null],[12,"0","","",6,null],[3,"AddEq","","",null,null],[12,"0","","",7,null],[3,"And","","",null,null],[12,"0","","",8,null],[3,"AndAnd","","",null,null],[12,"0","","",9,null],[3,"AndEq","","",null,null],[12,"0","","",10,null],[3,"At","","",null,null],[12,"0","","",11,null],[3,"Bang","","",null,null],[12,"0","","",12,null],[3,"Caret","","",null,null],[12,"0","","",13,null],[3,"CaretEq","","",null,null],[12,"0","","",14,null],[3,"Colon","","",null,null],[12,"0","","",15,null],[3,"Colon2","","",null,null],[12,"0","","",16,null],[3,"Comma","","",null,null],[12,"0","","",17,null],[3,"Div","","",null,null],[12,"0","","",18,null],[3,"DivEq","","",null,null],[12,"0","","",19,null],[3,"Dot","","",null,null],[12,"0","","",20,null],[3,"Dot2","","",null,null],[12,"0","","",21,null],[3,"Dot3","","",null,null],[12,"0","","",22,null],[3,"Eq","","",null,null],[12,"0","","",23,null],[3,"EqEq","","",null,null],[12,"0","","",24,null],[3,"Ge","","",null,null],[12,"0","","",25,null],[3,"Gt","","",null,null],[12,"0","","",26,null],[3,"Le","","",null,null],[12,"0","","",27,null],[3,"Lt","","",null,null],[12,"0","","",28,null],[3,"MulEq","","",null,null],[12,"0","","",29,null],[3,"Ne","","",null,null],[12,"0","","",30,null],[3,"Or","","",null,null],[12,"0","","",31,null],[3,"OrEq","","",null,null],[12,"0","","",32,null],[3,"OrOr","","",null,null],[12,"0","","",33,null],[3,"Pound","","",null,null],[12,"0","","",34,null],[3,"Question","","",null,null],[12,"0","","",35,null],[3,"RArrow","","",null,null],[12,"0","","",36,null],[3,"LArrow","","",null,null],[12,"0","","",37,null],[3,"Rem","","",null,null],[12,"0","","",38,null],[3,"RemEq","","",null,null],[12,"0","","",39,null],[3,"Rocket","","",null,null],[12,"0","","",40,null],[3,"Semi","","",null,null],[12,"0","","",41,null],[3,"Shl","","",null,null],[12,"0","","",42,null],[3,"ShlEq","","",null,null],[12,"0","","",43,null],[3,"Shr","","",null,null],[12,"0","","",44,null],[3,"ShrEq","","",null,null],[12,"0","","",45,null],[3,"Star","","",null,null],[12,"0","","",46,null],[3,"Sub","","",null,null],[12,"0","","",47,null],[3,"SubEq","","",null,null],[12,"0","","",48,null],[3,"Underscore","","",null,null],[12,"0","","",49,null],[3,"Brace","","",null,null],[12,"0","","",50,null],[3,"Bracket","","",null,null],[12,"0","","",51,null],[3,"Paren","","",null,null],[12,"0","","",52,null],[3,"Group","","",null,null],[12,"0","","",53,null],[3,"As","","",null,null],[12,"0","","",54,null],[3,"Box_","","",null,null],[12,"0","","",55,null],[3,"Break","","",null,null],[12,"0","","",56,null],[3,"CapSelf","","",null,null],[12,"0","","",57,null],[3,"Catch","","",null,null],[12,"0","","",58,null],[3,"Const","","",null,null],[12,"0","","",59,null],[3,"Continue","","",null,null],[12,"0","","",60,null],[3,"Crate","","",null,null],[12,"0","","",61,null],[3,"Default_","","",null,null],[12,"0","","",62,null],[3,"Do","","",null,null],[12,"0","","",63,null],[3,"Else","","",null,null],[12,"0","","",64,null],[3,"Enum","","",null,null],[12,"0","","",65,null],[3,"Extern","","",null,null],[12,"0","","",66,null],[3,"Fn_","","",null,null],[12,"0","","",67,null],[3,"For","","",null,null],[12,"0","","",68,null],[3,"If","","",null,null],[12,"0","","",69,null],[3,"Impl","","",null,null],[12,"0","","",70,null],[3,"In","","",null,null],[12,"0","","",71,null],[3,"Let","","",null,null],[12,"0","","",72,null],[3,"Loop","","",null,null],[12,"0","","",73,null],[3,"Match","","",null,null],[12,"0","","",74,null],[3,"Mod","","",null,null],[12,"0","","",75,null],[3,"Move","","",null,null],[12,"0","","",76,null],[3,"Mut","","",null,null],[12,"0","","",77,null],[3,"Pub","","",null,null],[12,"0","","",78,null],[3,"Ref","","",null,null],[12,"0","","",79,null],[3,"Return","","",null,null],[12,"0","","",80,null],[3,"Self_","","",null,null],[12,"0","","",81,null],[3,"Static","","",null,null],[12,"0","","",82,null],[3,"Struct","","",null,null],[12,"0","","",83,null],[3,"Super","","",null,null],[12,"0","","",84,null],[3,"Trait","","",null,null],[12,"0","","",85,null],[3,"Type","","",null,null],[12,"0","","",86,null],[3,"Union","","",null,null],[12,"0","","",87,null],[3,"Unsafe","","",null,null],[12,"0","","",88,null],[3,"Use","","",null,null],[12,"0","","",89,null],[3,"Where","","",null,null],[12,"0","","",90,null],[3,"While","","",null,null],[12,"0","","",91,null],[3,"Yield","","",null,null],[12,"0","","",92,null],[11,"default","","",6,{"inputs":[],"output":{"name":"add"}}],[11,"to_tokens","","",6,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",6,{"inputs":[{"name":"cursor"}],"output":{"generics":["add"],"name":"presult"}}],[11,"default","","",7,{"inputs":[],"output":{"name":"addeq"}}],[11,"to_tokens","","",7,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",7,{"inputs":[{"name":"cursor"}],"output":{"generics":["addeq"],"name":"presult"}}],[11,"default","","",8,{"inputs":[],"output":{"name":"and"}}],[11,"to_tokens","","",8,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",8,{"inputs":[{"name":"cursor"}],"output":{"generics":["and"],"name":"presult"}}],[11,"default","","",9,{"inputs":[],"output":{"name":"andand"}}],[11,"to_tokens","","",9,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",9,{"inputs":[{"name":"cursor"}],"output":{"generics":["andand"],"name":"presult"}}],[11,"default","","",10,{"inputs":[],"output":{"name":"andeq"}}],[11,"to_tokens","","",10,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",10,{"inputs":[{"name":"cursor"}],"output":{"generics":["andeq"],"name":"presult"}}],[11,"default","","",11,{"inputs":[],"output":{"name":"at"}}],[11,"to_tokens","","",11,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",11,{"inputs":[{"name":"cursor"}],"output":{"generics":["at"],"name":"presult"}}],[11,"default","","",12,{"inputs":[],"output":{"name":"bang"}}],[11,"to_tokens","","",12,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",12,{"inputs":[{"name":"cursor"}],"output":{"generics":["bang"],"name":"presult"}}],[11,"default","","",13,{"inputs":[],"output":{"name":"caret"}}],[11,"to_tokens","","",13,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",13,{"inputs":[{"name":"cursor"}],"output":{"generics":["caret"],"name":"presult"}}],[11,"default","","",14,{"inputs":[],"output":{"name":"careteq"}}],[11,"to_tokens","","",14,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",14,{"inputs":[{"name":"cursor"}],"output":{"generics":["careteq"],"name":"presult"}}],[11,"default","","",15,{"inputs":[],"output":{"name":"colon"}}],[11,"to_tokens","","",15,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",15,{"inputs":[{"name":"cursor"}],"output":{"generics":["colon"],"name":"presult"}}],[11,"default","","",16,{"inputs":[],"output":{"name":"colon2"}}],[11,"to_tokens","","",16,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",16,{"inputs":[{"name":"cursor"}],"output":{"generics":["colon2"],"name":"presult"}}],[11,"default","","",17,{"inputs":[],"output":{"name":"comma"}}],[11,"to_tokens","","",17,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",17,{"inputs":[{"name":"cursor"}],"output":{"generics":["comma"],"name":"presult"}}],[11,"default","","",18,{"inputs":[],"output":{"name":"div"}}],[11,"to_tokens","","",18,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",18,{"inputs":[{"name":"cursor"}],"output":{"generics":["div"],"name":"presult"}}],[11,"default","","",19,{"inputs":[],"output":{"name":"diveq"}}],[11,"to_tokens","","",19,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",19,{"inputs":[{"name":"cursor"}],"output":{"generics":["diveq"],"name":"presult"}}],[11,"default","","",20,{"inputs":[],"output":{"name":"dot"}}],[11,"to_tokens","","",20,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",20,{"inputs":[{"name":"cursor"}],"output":{"generics":["dot"],"name":"presult"}}],[11,"default","","",21,{"inputs":[],"output":{"name":"dot2"}}],[11,"to_tokens","","",21,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",21,{"inputs":[{"name":"cursor"}],"output":{"generics":["dot2"],"name":"presult"}}],[11,"default","","",22,{"inputs":[],"output":{"name":"dot3"}}],[11,"to_tokens","","",22,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",22,{"inputs":[{"name":"cursor"}],"output":{"generics":["dot3"],"name":"presult"}}],[11,"default","","",23,{"inputs":[],"output":{"name":"eq"}}],[11,"to_tokens","","",23,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",23,{"inputs":[{"name":"cursor"}],"output":{"generics":["eq"],"name":"presult"}}],[11,"default","","",24,{"inputs":[],"output":{"name":"eqeq"}}],[11,"to_tokens","","",24,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",24,{"inputs":[{"name":"cursor"}],"output":{"generics":["eqeq"],"name":"presult"}}],[11,"default","","",25,{"inputs":[],"output":{"name":"ge"}}],[11,"to_tokens","","",25,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",25,{"inputs":[{"name":"cursor"}],"output":{"generics":["ge"],"name":"presult"}}],[11,"default","","",26,{"inputs":[],"output":{"name":"gt"}}],[11,"to_tokens","","",26,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",26,{"inputs":[{"name":"cursor"}],"output":{"generics":["gt"],"name":"presult"}}],[11,"default","","",27,{"inputs":[],"output":{"name":"le"}}],[11,"to_tokens","","",27,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",27,{"inputs":[{"name":"cursor"}],"output":{"generics":["le"],"name":"presult"}}],[11,"default","","",28,{"inputs":[],"output":{"name":"lt"}}],[11,"to_tokens","","",28,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",28,{"inputs":[{"name":"cursor"}],"output":{"generics":["lt"],"name":"presult"}}],[11,"default","","",29,{"inputs":[],"output":{"name":"muleq"}}],[11,"to_tokens","","",29,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",29,{"inputs":[{"name":"cursor"}],"output":{"generics":["muleq"],"name":"presult"}}],[11,"default","","",30,{"inputs":[],"output":{"name":"ne"}}],[11,"to_tokens","","",30,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",30,{"inputs":[{"name":"cursor"}],"output":{"generics":["ne"],"name":"presult"}}],[11,"default","","",31,{"inputs":[],"output":{"name":"or"}}],[11,"to_tokens","","",31,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",31,{"inputs":[{"name":"cursor"}],"output":{"generics":["or"],"name":"presult"}}],[11,"default","","",32,{"inputs":[],"output":{"name":"oreq"}}],[11,"to_tokens","","",32,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",32,{"inputs":[{"name":"cursor"}],"output":{"generics":["oreq"],"name":"presult"}}],[11,"default","","",33,{"inputs":[],"output":{"name":"oror"}}],[11,"to_tokens","","",33,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",33,{"inputs":[{"name":"cursor"}],"output":{"generics":["oror"],"name":"presult"}}],[11,"default","","",34,{"inputs":[],"output":{"name":"pound"}}],[11,"to_tokens","","",34,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",34,{"inputs":[{"name":"cursor"}],"output":{"generics":["pound"],"name":"presult"}}],[11,"default","","",35,{"inputs":[],"output":{"name":"question"}}],[11,"to_tokens","","",35,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",35,{"inputs":[{"name":"cursor"}],"output":{"generics":["question"],"name":"presult"}}],[11,"default","","",36,{"inputs":[],"output":{"name":"rarrow"}}],[11,"to_tokens","","",36,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",36,{"inputs":[{"name":"cursor"}],"output":{"generics":["rarrow"],"name":"presult"}}],[11,"default","","",37,{"inputs":[],"output":{"name":"larrow"}}],[11,"to_tokens","","",37,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",37,{"inputs":[{"name":"cursor"}],"output":{"generics":["larrow"],"name":"presult"}}],[11,"default","","",38,{"inputs":[],"output":{"name":"rem"}}],[11,"to_tokens","","",38,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",38,{"inputs":[{"name":"cursor"}],"output":{"generics":["rem"],"name":"presult"}}],[11,"default","","",39,{"inputs":[],"output":{"name":"remeq"}}],[11,"to_tokens","","",39,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",39,{"inputs":[{"name":"cursor"}],"output":{"generics":["remeq"],"name":"presult"}}],[11,"default","","",40,{"inputs":[],"output":{"name":"rocket"}}],[11,"to_tokens","","",40,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",40,{"inputs":[{"name":"cursor"}],"output":{"generics":["rocket"],"name":"presult"}}],[11,"default","","",41,{"inputs":[],"output":{"name":"semi"}}],[11,"to_tokens","","",41,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",41,{"inputs":[{"name":"cursor"}],"output":{"generics":["semi"],"name":"presult"}}],[11,"default","","",42,{"inputs":[],"output":{"name":"shl"}}],[11,"to_tokens","","",42,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",42,{"inputs":[{"name":"cursor"}],"output":{"generics":["shl"],"name":"presult"}}],[11,"default","","",43,{"inputs":[],"output":{"name":"shleq"}}],[11,"to_tokens","","",43,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",43,{"inputs":[{"name":"cursor"}],"output":{"generics":["shleq"],"name":"presult"}}],[11,"default","","",44,{"inputs":[],"output":{"name":"shr"}}],[11,"to_tokens","","",44,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",44,{"inputs":[{"name":"cursor"}],"output":{"generics":["shr"],"name":"presult"}}],[11,"default","","",45,{"inputs":[],"output":{"name":"shreq"}}],[11,"to_tokens","","",45,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",45,{"inputs":[{"name":"cursor"}],"output":{"generics":["shreq"],"name":"presult"}}],[11,"default","","",46,{"inputs":[],"output":{"name":"star"}}],[11,"to_tokens","","",46,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",46,{"inputs":[{"name":"cursor"}],"output":{"generics":["star"],"name":"presult"}}],[11,"default","","",47,{"inputs":[],"output":{"name":"sub"}}],[11,"to_tokens","","",47,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",47,{"inputs":[{"name":"cursor"}],"output":{"generics":["sub"],"name":"presult"}}],[11,"default","","",48,{"inputs":[],"output":{"name":"subeq"}}],[11,"to_tokens","","",48,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",48,{"inputs":[{"name":"cursor"}],"output":{"generics":["subeq"],"name":"presult"}}],[11,"default","","",49,{"inputs":[],"output":{"name":"underscore"}}],[11,"to_tokens","","",49,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",49,{"inputs":[{"name":"cursor"}],"output":{"generics":["underscore"],"name":"presult"}}],[11,"default","","",50,{"inputs":[],"output":{"name":"brace"}}],[11,"surround","","",50,{"inputs":[{"name":"self"},{"name":"tokens"},{"name":"f"}],"output":null}],[11,"parse","","",50,{"inputs":[{"name":"cursor"},{"name":"f"}],"output":{"name":"presult"}}],[11,"default","","",51,{"inputs":[],"output":{"name":"bracket"}}],[11,"surround","","",51,{"inputs":[{"name":"self"},{"name":"tokens"},{"name":"f"}],"output":null}],[11,"parse","","",51,{"inputs":[{"name":"cursor"},{"name":"f"}],"output":{"name":"presult"}}],[11,"default","","",52,{"inputs":[],"output":{"name":"paren"}}],[11,"surround","","",52,{"inputs":[{"name":"self"},{"name":"tokens"},{"name":"f"}],"output":null}],[11,"parse","","",52,{"inputs":[{"name":"cursor"},{"name":"f"}],"output":{"name":"presult"}}],[11,"default","","",53,{"inputs":[],"output":{"name":"group"}}],[11,"surround","","",53,{"inputs":[{"name":"self"},{"name":"tokens"},{"name":"f"}],"output":null}],[11,"parse","","",53,{"inputs":[{"name":"cursor"},{"name":"f"}],"output":{"name":"presult"}}],[11,"default","","",54,{"inputs":[],"output":{"name":"as"}}],[11,"to_tokens","","",54,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",54,{"inputs":[{"name":"cursor"}],"output":{"generics":["as"],"name":"presult"}}],[11,"default","","",55,{"inputs":[],"output":{"name":"box_"}}],[11,"to_tokens","","",55,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",55,{"inputs":[{"name":"cursor"}],"output":{"generics":["box_"],"name":"presult"}}],[11,"default","","",56,{"inputs":[],"output":{"name":"break"}}],[11,"to_tokens","","",56,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",56,{"inputs":[{"name":"cursor"}],"output":{"generics":["break"],"name":"presult"}}],[11,"default","","",57,{"inputs":[],"output":{"name":"capself"}}],[11,"to_tokens","","",57,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",57,{"inputs":[{"name":"cursor"}],"output":{"generics":["capself"],"name":"presult"}}],[11,"default","","",58,{"inputs":[],"output":{"name":"catch"}}],[11,"to_tokens","","",58,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",58,{"inputs":[{"name":"cursor"}],"output":{"generics":["catch"],"name":"presult"}}],[11,"default","","",59,{"inputs":[],"output":{"name":"const"}}],[11,"to_tokens","","",59,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",59,{"inputs":[{"name":"cursor"}],"output":{"generics":["const"],"name":"presult"}}],[11,"default","","",60,{"inputs":[],"output":{"name":"continue"}}],[11,"to_tokens","","",60,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",60,{"inputs":[{"name":"cursor"}],"output":{"generics":["continue"],"name":"presult"}}],[11,"default","","",61,{"inputs":[],"output":{"name":"crate"}}],[11,"to_tokens","","",61,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",61,{"inputs":[{"name":"cursor"}],"output":{"generics":["crate"],"name":"presult"}}],[11,"default","","",62,{"inputs":[],"output":{"name":"default_"}}],[11,"to_tokens","","",62,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",62,{"inputs":[{"name":"cursor"}],"output":{"generics":["default_"],"name":"presult"}}],[11,"default","","",63,{"inputs":[],"output":{"name":"do"}}],[11,"to_tokens","","",63,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",63,{"inputs":[{"name":"cursor"}],"output":{"generics":["do"],"name":"presult"}}],[11,"default","","",64,{"inputs":[],"output":{"name":"else"}}],[11,"to_tokens","","",64,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",64,{"inputs":[{"name":"cursor"}],"output":{"generics":["else"],"name":"presult"}}],[11,"default","","",65,{"inputs":[],"output":{"name":"enum"}}],[11,"to_tokens","","",65,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",65,{"inputs":[{"name":"cursor"}],"output":{"generics":["enum"],"name":"presult"}}],[11,"default","","",66,{"inputs":[],"output":{"name":"extern"}}],[11,"to_tokens","","",66,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",66,{"inputs":[{"name":"cursor"}],"output":{"generics":["extern"],"name":"presult"}}],[11,"default","","",67,{"inputs":[],"output":{"name":"fn_"}}],[11,"to_tokens","","",67,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",67,{"inputs":[{"name":"cursor"}],"output":{"generics":["fn_"],"name":"presult"}}],[11,"default","","",68,{"inputs":[],"output":{"name":"for"}}],[11,"to_tokens","","",68,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",68,{"inputs":[{"name":"cursor"}],"output":{"generics":["for"],"name":"presult"}}],[11,"default","","",69,{"inputs":[],"output":{"name":"if"}}],[11,"to_tokens","","",69,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",69,{"inputs":[{"name":"cursor"}],"output":{"generics":["if"],"name":"presult"}}],[11,"default","","",70,{"inputs":[],"output":{"name":"impl"}}],[11,"to_tokens","","",70,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",70,{"inputs":[{"name":"cursor"}],"output":{"generics":["impl"],"name":"presult"}}],[11,"default","","",71,{"inputs":[],"output":{"name":"in"}}],[11,"to_tokens","","",71,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",71,{"inputs":[{"name":"cursor"}],"output":{"generics":["in"],"name":"presult"}}],[11,"default","","",72,{"inputs":[],"output":{"name":"let"}}],[11,"to_tokens","","",72,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",72,{"inputs":[{"name":"cursor"}],"output":{"generics":["let"],"name":"presult"}}],[11,"default","","",73,{"inputs":[],"output":{"name":"loop"}}],[11,"to_tokens","","",73,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",73,{"inputs":[{"name":"cursor"}],"output":{"generics":["loop"],"name":"presult"}}],[11,"default","","",74,{"inputs":[],"output":{"name":"match"}}],[11,"to_tokens","","",74,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",74,{"inputs":[{"name":"cursor"}],"output":{"generics":["match"],"name":"presult"}}],[11,"default","","",75,{"inputs":[],"output":{"name":"mod"}}],[11,"to_tokens","","",75,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",75,{"inputs":[{"name":"cursor"}],"output":{"generics":["mod"],"name":"presult"}}],[11,"default","","",76,{"inputs":[],"output":{"name":"move"}}],[11,"to_tokens","","",76,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",76,{"inputs":[{"name":"cursor"}],"output":{"generics":["move"],"name":"presult"}}],[11,"default","","",77,{"inputs":[],"output":{"name":"mut"}}],[11,"to_tokens","","",77,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",77,{"inputs":[{"name":"cursor"}],"output":{"generics":["mut"],"name":"presult"}}],[11,"default","","",78,{"inputs":[],"output":{"name":"pub"}}],[11,"to_tokens","","",78,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",78,{"inputs":[{"name":"cursor"}],"output":{"generics":["pub"],"name":"presult"}}],[11,"default","","",79,{"inputs":[],"output":{"name":"ref"}}],[11,"to_tokens","","",79,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",79,{"inputs":[{"name":"cursor"}],"output":{"generics":["ref"],"name":"presult"}}],[11,"default","","",80,{"inputs":[],"output":{"name":"return"}}],[11,"to_tokens","","",80,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",80,{"inputs":[{"name":"cursor"}],"output":{"generics":["return"],"name":"presult"}}],[11,"default","","",81,{"inputs":[],"output":{"name":"self_"}}],[11,"to_tokens","","",81,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",81,{"inputs":[{"name":"cursor"}],"output":{"generics":["self_"],"name":"presult"}}],[11,"default","","",82,{"inputs":[],"output":{"name":"static"}}],[11,"to_tokens","","",82,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",82,{"inputs":[{"name":"cursor"}],"output":{"generics":["static"],"name":"presult"}}],[11,"default","","",83,{"inputs":[],"output":{"name":"struct"}}],[11,"to_tokens","","",83,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",83,{"inputs":[{"name":"cursor"}],"output":{"generics":["struct"],"name":"presult"}}],[11,"default","","",84,{"inputs":[],"output":{"name":"super"}}],[11,"to_tokens","","",84,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",84,{"inputs":[{"name":"cursor"}],"output":{"generics":["super"],"name":"presult"}}],[11,"default","","",85,{"inputs":[],"output":{"name":"trait"}}],[11,"to_tokens","","",85,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",85,{"inputs":[{"name":"cursor"}],"output":{"generics":["trait"],"name":"presult"}}],[11,"default","","",86,{"inputs":[],"output":{"name":"type"}}],[11,"to_tokens","","",86,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",86,{"inputs":[{"name":"cursor"}],"output":{"generics":["type"],"name":"presult"}}],[11,"default","","",87,{"inputs":[],"output":{"name":"union"}}],[11,"to_tokens","","",87,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",87,{"inputs":[{"name":"cursor"}],"output":{"generics":["union"],"name":"presult"}}],[11,"default","","",88,{"inputs":[],"output":{"name":"unsafe"}}],[11,"to_tokens","","",88,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",88,{"inputs":[{"name":"cursor"}],"output":{"generics":["unsafe"],"name":"presult"}}],[11,"default","","",89,{"inputs":[],"output":{"name":"use"}}],[11,"to_tokens","","",89,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",89,{"inputs":[{"name":"cursor"}],"output":{"generics":["use"],"name":"presult"}}],[11,"default","","",90,{"inputs":[],"output":{"name":"where"}}],[11,"to_tokens","","",90,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",90,{"inputs":[{"name":"cursor"}],"output":{"generics":["where"],"name":"presult"}}],[11,"default","","",91,{"inputs":[],"output":{"name":"while"}}],[11,"to_tokens","","",91,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",91,{"inputs":[{"name":"cursor"}],"output":{"generics":["while"],"name":"presult"}}],[11,"default","","",92,{"inputs":[],"output":{"name":"yield"}}],[11,"to_tokens","","",92,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",92,{"inputs":[{"name":"cursor"}],"output":{"generics":["yield"],"name":"presult"}}],[0,"span","futures_await_synom","",null,null],[3,"Span","futures_await_synom::span","",null,null],[12,"0","","",93,null],[11,"clone","","",93,{"inputs":[{"name":"self"}],"output":{"name":"span"}}],[11,"default","","",93,{"inputs":[],"output":{"name":"span"}}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",93,{"inputs":[{"name":"self"},{"name":"span"}],"output":{"name":"bool"}}],[11,"hash","","",93,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[0,"cursor","futures_await_synom","This module defines a cheaply-copyable cursor into a TokenStream's data.",null,null],[3,"SynomBuffer","futures_await_synom::cursor","A buffer of data which contains a structured representation of the input `TokenStream` object.",null,null],[3,"SeqInfo","","",null,null],[12,"span","","",94,null],[12,"inside","","",94,null],[12,"outside","","",94,null],[3,"Cursor","","A cursor into an input `TokenStream`'s data. This cursor holds a reference into the immutable data which is used internally to represent a `TokenStream`, and can be efficiently manipulated and copied around.",null,null],[11,"fmt","","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new SynomBuffer, which contains the data from the given TokenStream.",95,{"inputs":[{"name":"tokenstream"}],"output":{"name":"synombuffer"}}],[11,"begin","","Create a cursor referencing the first token in the input.",95,{"inputs":[{"name":"self"}],"output":{"name":"cursor"}}],[11,"clone","","",94,{"inputs":[{"name":"self"}],"output":{"name":"seqinfo"}}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",96,{"inputs":[{"name":"self"}],"output":{"name":"cursor"}}],[11,"eq","","",96,{"inputs":[{"name":"self"},{"name":"cursor"}],"output":{"name":"bool"}}],[11,"ne","","",96,{"inputs":[{"name":"self"},{"name":"cursor"}],"output":{"name":"bool"}}],[11,"empty","","Create a cursor referencing a static empty TokenStream.",96,{"inputs":[],"output":{"name":"self"}}],[11,"eof","","Check if the cursor is currently pointing at the end of its valid scope.",96,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"seq","","If the cursor is pointing at a Seq with the given `Delimiter`, return a cursor into that sequence, and one pointing to the next `TokenTree`.",96,{"inputs":[{"name":"self"},{"name":"delimiter"}],"output":{"generics":["seqinfo"],"name":"option"}}],[11,"word","","If the cursor is pointing at a Term, return it and a cursor pointing at the next `TokenTree`.",96,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"op","","If the cursor is pointing at an Op, return it and a cursor pointing at the next `TokenTree`.",96,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"literal","","If the cursor is pointing at a Literal, return it and a cursor pointing at the next `TokenTree`.",96,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"token_stream","","Copy all remaining tokens visible from this cursor into a `TokenStream`.",96,{"inputs":[{"name":"self"}],"output":{"name":"tokenstream"}}],[11,"token_tree","","If the cursor is looking at a `TokenTree`, returns it along with a cursor pointing to the next token in the sequence, otherwise returns `None`.",96,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"PResult","futures_await_synom","The result of a parser",null,null],[8,"Synom","","",null,null],[10,"parse","","",97,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",97,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",98,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",98,{"inputs":[{"name":"lexerror"}],"output":{"name":"parseerror"}}],[11,"from","","",98,{"inputs":[{"name":"lexerror"}],"output":{"name":"parseerror"}}],[14,"option","","Turn a failed parse into `None` and a successful parse into `Some`.",null,null],[14,"opt_vec","","Turn a failed parse into an empty vector. The argument parser must itself return a vector.",null,null],[14,"epsilon","","Parses nothing and always succeeds.",null,null],[14,"syn","","Parse a type through the `Synom` trait.",null,null],[14,"parens","","Parse a parenthesized-surrounded subtree.",null,null],[14,"brackets","","Same as the `parens` macro, but for brackets.",null,null],[14,"braces","","Same as the `parens` macro, but for braces.",null,null],[14,"grouped","","Same as the `parens` macro, but for none-delimited sequences (groups).",null,null],[14,"named","","Define a function from a parser combination.",null,null],[14,"call","","Invoke the given parser function with the passed in arguments.",null,null],[14,"map","","Transform the result of a parser by applying a function or closure.",null,null],[14,"not","","Parses successfully if the given parser fails to parse. Does not consume any of the input.",null,null],[14,"cond","","Conditionally execute the given parser.",null,null],[14,"cond_reduce","","Fail to parse if condition is false, otherwise parse the given parser.",null,null],[14,"terminated","","Parse two things, returning the value of the first.",null,null],[14,"many0","","Parse zero or more values using the given parser.",null,null],[14,"peek","","Parse a value without consuming it from the input data.",null,null],[14,"switch","","Pattern-match the result of a parser to select which other parser to run.",null,null],[14,"value","","Produce the given value without parsing anything. Useful as an argument to `switch!`.",null,null],[14,"tuple","","Run a series of parsers and produce all of the results in a tuple.",null,null],[14,"alt","","Run a series of parsers, returning the result of the first one which succeeds.",null,null],[14,"do_parse","","Run a series of parsers, one after another, optionally assigning the results a name. Fail if any of the parsers fails.",null,null],[14,"input_end","","",null,null]],"paths":[[4,"Element"],[3,"Delimited"],[3,"Iter"],[3,"IterMut"],[3,"Items"],[3,"IntoIter"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"Rocket"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Underscore"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"As"],[3,"Box_"],[3,"Break"],[3,"CapSelf"],[3,"Catch"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default_"],[3,"Do"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Fn_"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"Self_"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Type"],[3,"Union"],[3,"Unsafe"],[3,"Use"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Span"],[3,"SeqInfo"],[3,"SynomBuffer"],[3,"Cursor"],[8,"Synom"],[3,"ParseError"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"group","libc","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"in_addr","","",null,null],[12,"s_addr","","",6,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",7,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",8,null],[12,"imr_interface","","",8,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",9,null],[12,"ipv6mr_interface","","",9,null],[3,"hostent","","",null,null],[12,"h_name","","",10,null],[12,"h_aliases","","",10,null],[12,"h_addrtype","","",10,null],[12,"h_length","","",10,null],[12,"h_addr_list","","",10,null],[3,"iovec","","",null,null],[12,"iov_base","","",11,null],[12,"iov_len","","",11,null],[3,"pollfd","","",null,null],[12,"fd","","",12,null],[12,"events","","",12,null],[12,"revents","","",12,null],[3,"winsize","","",null,null],[12,"ws_row","","",13,null],[12,"ws_col","","",13,null],[12,"ws_xpixel","","",13,null],[12,"ws_ypixel","","",13,null],[3,"linger","","",null,null],[12,"l_onoff","","",14,null],[12,"l_linger","","",14,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",15,null],[3,"itimerval","","",null,null],[12,"it_interval","","",16,null],[12,"it_value","","",16,null],[3,"tms","","",null,null],[12,"tms_utime","","",17,null],[12,"tms_stime","","",17,null],[12,"tms_cutime","","",17,null],[12,"tms_cstime","","",17,null],[3,"servent","","",null,null],[12,"s_name","","",18,null],[12,"s_aliases","","",18,null],[12,"s_port","","",18,null],[12,"s_proto","","",18,null],[3,"protoent","","",null,null],[12,"p_name","","",19,null],[12,"p_aliases","","",19,null],[12,"p_proto","","",19,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",20,null],[12,"sa_data","","",20,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",21,null],[12,"sin_port","","",21,null],[12,"sin_addr","","",21,null],[12,"sin_zero","","",21,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",22,null],[12,"sin6_port","","",22,null],[12,"sin6_flowinfo","","",22,null],[12,"sin6_addr","","",22,null],[12,"sin6_scope_id","","",22,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",23,null],[12,"sun_path","","",23,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",24,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",25,null],[12,"ai_family","","",25,null],[12,"ai_socktype","","",25,null],[12,"ai_protocol","","",25,null],[12,"ai_addrlen","","",25,null],[12,"ai_addr","","",25,null],[12,"ai_canonname","","",25,null],[12,"ai_next","","",25,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",26,null],[12,"nl_pid","","",26,null],[12,"nl_groups","","",26,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",27,null],[12,"sll_protocol","","",27,null],[12,"sll_ifindex","","",27,null],[12,"sll_hatype","","",27,null],[12,"sll_pkttype","","",27,null],[12,"sll_halen","","",27,null],[12,"sll_addr","","",27,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",28,null],[12,"tm_min","","",28,null],[12,"tm_hour","","",28,null],[12,"tm_mday","","",28,null],[12,"tm_mon","","",28,null],[12,"tm_year","","",28,null],[12,"tm_wday","","",28,null],[12,"tm_yday","","",28,null],[12,"tm_isdst","","",28,null],[12,"tm_gmtoff","","",28,null],[12,"tm_zone","","",28,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",29,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",30,null],[12,"dli_fbase","","",30,null],[12,"dli_sname","","",30,null],[12,"dli_saddr","","",30,null],[3,"epoll_event","","",null,null],[12,"events","","",31,null],[12,"u64","","",31,null],[3,"utsname","","",null,null],[12,"sysname","","",32,null],[12,"nodename","","",32,null],[12,"release","","",32,null],[12,"version","","",32,null],[12,"machine","","",32,null],[12,"domainname","","",32,null],[3,"lconv","","",null,null],[12,"decimal_point","","",33,null],[12,"thousands_sep","","",33,null],[12,"grouping","","",33,null],[12,"int_curr_symbol","","",33,null],[12,"currency_symbol","","",33,null],[12,"mon_decimal_point","","",33,null],[12,"mon_thousands_sep","","",33,null],[12,"mon_grouping","","",33,null],[12,"positive_sign","","",33,null],[12,"negative_sign","","",33,null],[12,"int_frac_digits","","",33,null],[12,"frac_digits","","",33,null],[12,"p_cs_precedes","","",33,null],[12,"p_sep_by_space","","",33,null],[12,"n_cs_precedes","","",33,null],[12,"n_sep_by_space","","",33,null],[12,"p_sign_posn","","",33,null],[12,"n_sign_posn","","",33,null],[12,"int_p_cs_precedes","","",33,null],[12,"int_p_sep_by_space","","",33,null],[12,"int_n_cs_precedes","","",33,null],[12,"int_n_sep_by_space","","",33,null],[12,"int_p_sign_posn","","",33,null],[12,"int_n_sign_posn","","",33,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",34,null],[12,"sigev_signo","","",34,null],[12,"sigev_notify","","",34,null],[12,"sigev_notify_thread_id","","",34,null],[3,"dirent","","",null,null],[12,"d_ino","","",35,null],[12,"d_off","","",35,null],[12,"d_reclen","","",35,null],[12,"d_type","","",35,null],[12,"d_name","","",35,null],[3,"dirent64","","",null,null],[12,"d_ino","","",36,null],[12,"d_off","","",36,null],[12,"d_reclen","","",36,null],[12,"d_type","","",36,null],[12,"d_name","","",36,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",37,null],[12,"rlim_max","","",37,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",38,null],[12,"gl_pathv","","",38,null],[12,"gl_offs","","",38,null],[12,"gl_flags","","",38,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",39,null],[12,"ifa_name","","",39,null],[12,"ifa_flags","","",39,null],[12,"ifa_addr","","",39,null],[12,"ifa_netmask","","",39,null],[12,"ifa_ifu","","",39,null],[12,"ifa_data","","",39,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",40,null],[12,"pw_passwd","","",40,null],[12,"pw_uid","","",40,null],[12,"pw_gid","","",40,null],[12,"pw_gecos","","",40,null],[12,"pw_dir","","",40,null],[12,"pw_shell","","",40,null],[3,"spwd","","",null,null],[12,"sp_namp","","",41,null],[12,"sp_pwdp","","",41,null],[12,"sp_lstchg","","",41,null],[12,"sp_min","","",41,null],[12,"sp_max","","",41,null],[12,"sp_warn","","",41,null],[12,"sp_inact","","",41,null],[12,"sp_expire","","",41,null],[12,"sp_flag","","",41,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",42,null],[12,"f_frsize","","",42,null],[12,"f_blocks","","",42,null],[12,"f_bfree","","",42,null],[12,"f_bavail","","",42,null],[12,"f_files","","",42,null],[12,"f_ffree","","",42,null],[12,"f_favail","","",42,null],[12,"f_fsid","","",42,null],[12,"f_flag","","",42,null],[12,"f_namemax","","",42,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",43,null],[12,"dqb_bsoftlimit","","",43,null],[12,"dqb_curspace","","",43,null],[12,"dqb_ihardlimit","","",43,null],[12,"dqb_isoftlimit","","",43,null],[12,"dqb_curinodes","","",43,null],[12,"dqb_btime","","",43,null],[12,"dqb_itime","","",43,null],[12,"dqb_valid","","",43,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",44,null],[12,"ssi_errno","","",44,null],[12,"ssi_code","","",44,null],[12,"ssi_pid","","",44,null],[12,"ssi_uid","","",44,null],[12,"ssi_fd","","",44,null],[12,"ssi_tid","","",44,null],[12,"ssi_band","","",44,null],[12,"ssi_overrun","","",44,null],[12,"ssi_trapno","","",44,null],[12,"ssi_status","","",44,null],[12,"ssi_int","","",44,null],[12,"ssi_ptr","","",44,null],[12,"ssi_utime","","",44,null],[12,"ssi_stime","","",44,null],[12,"ssi_addr","","",44,null],[3,"itimerspec","","",null,null],[12,"it_interval","","",45,null],[12,"it_value","","",45,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",46,null],[12,"mq_maxmsg","","",46,null],[12,"mq_msgsize","","",46,null],[12,"mq_curmsgs","","",46,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",47,null],[12,"if_name","","",47,null],[3,"msginfo","","",null,null],[12,"msgpool","","",48,null],[12,"msgmap","","",48,null],[12,"msgmax","","",48,null],[12,"msgmnb","","",48,null],[12,"msgmni","","",48,null],[12,"msgssz","","",48,null],[12,"msgtql","","",48,null],[12,"msgseg","","",48,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",49,null],[12,"msg_len","","",49,null],[3,"sembuf","","",null,null],[12,"sem_num","","",50,null],[12,"sem_op","","",50,null],[12,"sem_flg","","",50,null],[3,"input_event","","",null,null],[12,"time","","",51,null],[12,"type_","","",51,null],[12,"code","","",51,null],[12,"value","","",51,null],[3,"input_id","","",null,null],[12,"bustype","","",52,null],[12,"vendor","","",52,null],[12,"product","","",52,null],[12,"version","","",52,null],[3,"input_absinfo","","",null,null],[12,"value","","",53,null],[12,"minimum","","",53,null],[12,"maximum","","",53,null],[12,"fuzz","","",53,null],[12,"flat","","",53,null],[12,"resolution","","",53,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",54,null],[12,"len","","",54,null],[12,"index","","",54,null],[12,"keycode","","",54,null],[12,"scancode","","",54,null],[3,"input_mask","","",null,null],[12,"type_","","",55,null],[12,"codes_size","","",55,null],[12,"codes_ptr","","",55,null],[3,"ff_replay","","",null,null],[12,"length","","",56,null],[12,"delay","","",56,null],[3,"ff_trigger","","",null,null],[12,"button","","",57,null],[12,"interval","","",57,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",58,null],[12,"attack_level","","",58,null],[12,"fade_length","","",58,null],[12,"fade_level","","",58,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",59,null],[12,"envelope","","",59,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",60,null],[12,"end_level","","",60,null],[12,"envelope","","",60,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",61,null],[12,"left_saturation","","",61,null],[12,"right_coeff","","",61,null],[12,"left_coeff","","",61,null],[12,"deadband","","",61,null],[12,"center","","",61,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",62,null],[12,"period","","",62,null],[12,"magnitude","","",62,null],[12,"offset","","",62,null],[12,"phase","","",62,null],[12,"envelope","","",62,null],[12,"custom_len","","",62,null],[12,"custom_data","","",62,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",63,null],[12,"weak_magnitude","","",63,null],[3,"ff_effect","","",null,null],[12,"type_","","",64,null],[12,"id","","",64,null],[12,"direction","","",64,null],[12,"trigger","","",64,null],[12,"replay","","",64,null],[12,"u","","",64,null],[3,"dl_phdr_info","","",null,null],[12,"dlpi_addr","","",65,null],[12,"dlpi_name","","",65,null],[12,"dlpi_phdr","","",65,null],[12,"dlpi_phnum","","",65,null],[12,"dlpi_adds","","",65,null],[12,"dlpi_subs","","",65,null],[12,"dlpi_tls_modid","","",65,null],[12,"dlpi_tls_data","","",65,null],[3,"Elf32_Phdr","","",null,null],[12,"p_type","","",66,null],[12,"p_offset","","",66,null],[12,"p_vaddr","","",66,null],[12,"p_paddr","","",66,null],[12,"p_filesz","","",66,null],[12,"p_memsz","","",66,null],[12,"p_flags","","",66,null],[12,"p_align","","",66,null],[3,"Elf64_Phdr","","",null,null],[12,"p_type","","",67,null],[12,"p_flags","","",67,null],[12,"p_offset","","",67,null],[12,"p_vaddr","","",67,null],[12,"p_paddr","","",67,null],[12,"p_filesz","","",67,null],[12,"p_memsz","","",67,null],[12,"p_align","","",67,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",68,null],[12,"aio_lio_opcode","","",68,null],[12,"aio_reqprio","","",68,null],[12,"aio_buf","","",68,null],[12,"aio_nbytes","","",68,null],[12,"aio_sigevent","","",68,null],[12,"aio_offset","","",68,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",69,null],[12,"e_exit","","",69,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",70,null],[12,"tv_usec","","",70,null],[3,"utmpx","","",null,null],[12,"ut_type","","",71,null],[12,"ut_pid","","",71,null],[12,"ut_line","","",71,null],[12,"ut_id","","",71,null],[12,"ut_user","","",71,null],[12,"ut_host","","",71,null],[12,"ut_exit","","",71,null],[12,"ut_session","","",71,null],[12,"ut_tv","","",71,null],[12,"ut_addr_v6","","",71,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",72,null],[12,"sa_mask","","",72,null],[12,"sa_flags","","",72,null],[12,"sa_restorer","","",72,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",73,null],[12,"ss_flags","","",73,null],[12,"ss_size","","",73,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",74,null],[12,"si_errno","","",74,null],[12,"si_code","","",74,null],[12,"_pad","","",74,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",75,null],[12,"gl_pathv","","",75,null],[12,"gl_offs","","",75,null],[12,"gl_flags","","",75,null],[3,"ucred","","",null,null],[12,"pid","","",76,null],[12,"uid","","",76,null],[12,"gid","","",76,null],[3,"statfs","","",null,null],[12,"f_type","","",77,null],[12,"f_bsize","","",77,null],[12,"f_blocks","","",77,null],[12,"f_bfree","","",77,null],[12,"f_bavail","","",77,null],[12,"f_files","","",77,null],[12,"f_ffree","","",77,null],[12,"f_fsid","","",77,null],[12,"f_namelen","","",77,null],[12,"f_frsize","","",77,null],[3,"msghdr","","",null,null],[12,"msg_name","","",78,null],[12,"msg_namelen","","",78,null],[12,"msg_iov","","",78,null],[12,"msg_iovlen","","",78,null],[12,"msg_control","","",78,null],[12,"msg_controllen","","",78,null],[12,"msg_flags","","",78,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",79,null],[12,"cmsg_level","","",79,null],[12,"cmsg_type","","",79,null],[3,"termios","","",null,null],[12,"c_iflag","","",80,null],[12,"c_oflag","","",80,null],[12,"c_cflag","","",80,null],[12,"c_lflag","","",80,null],[12,"c_line","","",80,null],[12,"c_cc","","",80,null],[12,"c_ispeed","","",80,null],[12,"c_ospeed","","",80,null],[3,"flock","","",null,null],[12,"l_type","","",81,null],[12,"l_whence","","",81,null],[12,"l_start","","",81,null],[12,"l_len","","",81,null],[12,"l_pid","","",81,null],[3,"sem_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",82,null],[12,"loads","","",82,null],[12,"totalram","","",82,null],[12,"freeram","","",82,null],[12,"sharedram","","",82,null],[12,"bufferram","","",82,null],[12,"totalswap","","",82,null],[12,"freeswap","","",82,null],[12,"procs","","",82,null],[12,"pad","","",82,null],[12,"totalhigh","","",82,null],[12,"freehigh","","",82,null],[12,"mem_unit","","",82,null],[12,"_f","","",82,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",83,null],[12,"msg_stime","","",83,null],[12,"msg_rtime","","",83,null],[12,"msg_ctime","","",83,null],[12,"msg_qnum","","",83,null],[12,"msg_qbytes","","",83,null],[12,"msg_lspid","","",83,null],[12,"msg_lrpid","","",83,null],[3,"stat","","",null,null],[12,"st_dev","","",84,null],[12,"st_ino","","",84,null],[12,"st_nlink","","",84,null],[12,"st_mode","","",84,null],[12,"st_uid","","",84,null],[12,"st_gid","","",84,null],[12,"st_rdev","","",84,null],[12,"st_size","","",84,null],[12,"st_blksize","","",84,null],[12,"st_blocks","","",84,null],[12,"st_atime","","",84,null],[12,"st_atime_nsec","","",84,null],[12,"st_mtime","","",84,null],[12,"st_mtime_nsec","","",84,null],[12,"st_ctime","","",84,null],[12,"st_ctime_nsec","","",84,null],[3,"stat64","","",null,null],[12,"st_dev","","",85,null],[12,"st_ino","","",85,null],[12,"st_nlink","","",85,null],[12,"st_mode","","",85,null],[12,"st_uid","","",85,null],[12,"st_gid","","",85,null],[12,"st_rdev","","",85,null],[12,"st_size","","",85,null],[12,"st_blksize","","",85,null],[12,"st_blocks","","",85,null],[12,"st_atime","","",85,null],[12,"st_atime_nsec","","",85,null],[12,"st_mtime","","",85,null],[12,"st_mtime_nsec","","",85,null],[12,"st_ctime","","",85,null],[12,"st_ctime_nsec","","",85,null],[3,"statfs64","","",null,null],[12,"f_type","","",86,null],[12,"f_bsize","","",86,null],[12,"f_blocks","","",86,null],[12,"f_bfree","","",86,null],[12,"f_bavail","","",86,null],[12,"f_files","","",86,null],[12,"f_ffree","","",86,null],[12,"f_fsid","","",86,null],[12,"f_namelen","","",86,null],[12,"f_frsize","","",86,null],[12,"f_flags","","",86,null],[12,"f_spare","","",86,null],[3,"statvfs64","","",null,null],[12,"f_bsize","","",87,null],[12,"f_frsize","","",87,null],[12,"f_blocks","","",87,null],[12,"f_bfree","","",87,null],[12,"f_bavail","","",87,null],[12,"f_files","","",87,null],[12,"f_ffree","","",87,null],[12,"f_favail","","",87,null],[12,"f_fsid","","",87,null],[12,"f_flag","","",87,null],[12,"f_namemax","","",87,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",88,null],[12,"exponent","","",88,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",89,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",90,null],[12,"swd","","",90,null],[12,"ftw","","",90,null],[12,"fop","","",90,null],[12,"rip","","",90,null],[12,"rdp","","",90,null],[12,"mxcsr","","",90,null],[12,"mxcr_mask","","",90,null],[12,"_st","","",90,null],[12,"_xmm","","",90,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",91,null],[12,"swd","","",91,null],[12,"ftw","","",91,null],[12,"fop","","",91,null],[12,"rip","","",91,null],[12,"rdp","","",91,null],[12,"mxcsr","","",91,null],[12,"mxcr_mask","","",91,null],[12,"st_space","","",91,null],[12,"xmm_space","","",91,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",92,null],[12,"r14","","",92,null],[12,"r13","","",92,null],[12,"r12","","",92,null],[12,"rbp","","",92,null],[12,"rbx","","",92,null],[12,"r11","","",92,null],[12,"r10","","",92,null],[12,"r9","","",92,null],[12,"r8","","",92,null],[12,"rax","","",92,null],[12,"rcx","","",92,null],[12,"rdx","","",92,null],[12,"rsi","","",92,null],[12,"rdi","","",92,null],[12,"orig_rax","","",92,null],[12,"rip","","",92,null],[12,"cs","","",92,null],[12,"eflags","","",92,null],[12,"rsp","","",92,null],[12,"ss","","",92,null],[12,"fs_base","","",92,null],[12,"gs_base","","",92,null],[12,"ds","","",92,null],[12,"es","","",92,null],[12,"fs","","",92,null],[12,"gs","","",92,null],[3,"user","","",null,null],[12,"regs","","",93,null],[12,"u_fpvalid","","",93,null],[12,"i387","","",93,null],[12,"u_tsize","","",93,null],[12,"u_dsize","","",93,null],[12,"u_ssize","","",93,null],[12,"start_code","","",93,null],[12,"start_stack","","",93,null],[12,"signal","","",93,null],[12,"u_ar0","","",93,null],[12,"u_fpstate","","",93,null],[12,"magic","","",93,null],[12,"u_comm","","",93,null],[12,"u_debugreg","","",93,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",94,null],[12,"fpregs","","",94,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",95,null],[12,"uc_link","","",95,null],[12,"uc_stack","","",95,null],[12,"uc_mcontext","","",95,null],[12,"uc_sigmask","","",95,null],[3,"ipc_perm","","",null,null],[12,"__key","","",96,null],[12,"uid","","",96,null],[12,"gid","","",96,null],[12,"cuid","","",96,null],[12,"cgid","","",96,null],[12,"mode","","",96,null],[12,"__seq","","",96,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",97,null],[12,"shm_segsz","","",97,null],[12,"shm_atime","","",97,null],[12,"shm_dtime","","",97,null],[12,"shm_ctime","","",97,null],[12,"shm_cpid","","",97,null],[12,"shm_lpid","","",97,null],[12,"shm_nattch","","",97,null],[3,"termios2","","",null,null],[12,"c_iflag","","",98,null],[12,"c_oflag","","",98,null],[12,"c_cflag","","",98,null],[12,"c_lflag","","",98,null],[12,"c_line","","",98,null],[12,"c_cc","","",98,null],[12,"c_ispeed","","",98,null],[12,"c_ospeed","","",98,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFCONTINUED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"QCMD","","",null,{"inputs":[{"name":"c_int"},{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_CLR","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"major","","",null,{"inputs":[{"name":"dev_t"}],"output":{"name":"c_uint"}}],[5,"minor","","",null,{"inputs":[{"name":"dev_t"}],"output":{"name":"c_uint"}}],[5,"makedev","","",null,{"inputs":[{"name":"c_uint"},{"name":"c_uint"}],"output":{"name":"dev_t"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"openat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"mknod","","",null,null],[5,"uname","","",null,null],[5,"gethostname","","",null,null],[5,"getservbyname","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"timegm","","",null,null],[5,"getsid","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"cfsetspeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_settime","","",null,null],[5,"dirfd","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"pipe2","","",null,null],[5,"statfs","","",null,null],[5,"statfs64","","",null,null],[5,"fstatfs","","",null,null],[5,"fstatfs64","","",null,null],[5,"statvfs64","","",null,null],[5,"fstatvfs64","","",null,null],[5,"memrchr","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"fstatat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"preadv64","","",null,null],[5,"pwrite64","","",null,null],[5,"pwritev64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"fdopendir","","",null,null],[5,"mknodat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"wait4","","",null,null],[5,"openpty","","",null,null],[5,"execvpe","","",null,null],[5,"fexecve","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"timerfd_create","","",null,null],[5,"timerfd_gettime","","",null,null],[5,"timerfd_settime","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"sync","","",null,null],[5,"syscall","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_wait","","",null,null],[5,"epoll_ctl","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"unshare","","",null,null],[5,"umount","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"tee","","",null,null],[5,"settimeofday","","",null,null],[5,"splice","","",null,null],[5,"eventfd","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"sem_timedwait","","",null,null],[5,"sched_setparam","","",null,null],[5,"setns","","",null,null],[5,"swapoff","","",null,null],[5,"vmsplice","","",null,null],[5,"mount","","",null,null],[5,"personality","","",null,null],[5,"prctl","","",null,null],[5,"sched_getparam","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"clone","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"sethostname","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"sysinfo","","",null,null],[5,"umount2","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"swapon","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sendfile","","",null,null],[5,"sigsuspend","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"initgroups","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"daemon","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"getgrouplist","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"dl_iterate_phdr","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"pthread_rwlockattr_getkind_np","","",null,null],[5,"pthread_rwlockattr_setkind_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[5,"sysctl","","",null,null],[11,"clone","","",84,{"inputs":[{"name":"self"}],"output":{"name":"stat"}}],[11,"clone","","",85,{"inputs":[{"name":"self"}],"output":{"name":"stat64"}}],[11,"clone","","",86,{"inputs":[{"name":"self"}],"output":{"name":"statfs64"}}],[11,"clone","","",87,{"inputs":[{"name":"self"}],"output":{"name":"statvfs64"}}],[11,"clone","","",99,{"inputs":[{"name":"self"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","","",88,{"inputs":[{"name":"self"}],"output":{"name":"_libc_fpxreg"}}],[11,"clone","","",89,{"inputs":[{"name":"self"}],"output":{"name":"_libc_xmmreg"}}],[11,"clone","","",90,{"inputs":[{"name":"self"}],"output":{"name":"_libc_fpstate"}}],[11,"clone","","",91,{"inputs":[{"name":"self"}],"output":{"name":"user_fpregs_struct"}}],[11,"clone","","",92,{"inputs":[{"name":"self"}],"output":{"name":"user_regs_struct"}}],[11,"clone","","",93,{"inputs":[{"name":"self"}],"output":{"name":"user"}}],[11,"clone","","",94,{"inputs":[{"name":"self"}],"output":{"name":"mcontext_t"}}],[11,"clone","","",95,{"inputs":[{"name":"self"}],"output":{"name":"ucontext_t"}}],[11,"clone","","",96,{"inputs":[{"name":"self"}],"output":{"name":"ipc_perm"}}],[11,"clone","","",97,{"inputs":[{"name":"self"}],"output":{"name":"shmid_ds"}}],[11,"clone","","",98,{"inputs":[{"name":"self"}],"output":{"name":"termios2"}}],[11,"clone","","",100,{"inputs":[{"name":"self"}],"output":{"name":"sigset_t"}}],[11,"clone","","",82,{"inputs":[{"name":"self"}],"output":{"name":"sysinfo"}}],[11,"clone","","",83,{"inputs":[{"name":"self"}],"output":{"name":"msqid_ds"}}],[11,"clone","","",68,{"inputs":[{"name":"self"}],"output":{"name":"aiocb"}}],[11,"clone","","",69,{"inputs":[{"name":"self"}],"output":{"name":"__exit_status"}}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"__timeval"}}],[11,"clone","","",71,{"inputs":[{"name":"self"}],"output":{"name":"utmpx"}}],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"sigaction"}}],[11,"clone","","",73,{"inputs":[{"name":"self"}],"output":{"name":"stack_t"}}],[11,"clone","","",74,{"inputs":[{"name":"self"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",75,{"inputs":[{"name":"self"}],"output":{"name":"glob64_t"}}],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"ucred"}}],[11,"clone","","",77,{"inputs":[{"name":"self"}],"output":{"name":"statfs"}}],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"msghdr"}}],[11,"clone","","",79,{"inputs":[{"name":"self"}],"output":{"name":"cmsghdr"}}],[11,"clone","","",80,{"inputs":[{"name":"self"}],"output":{"name":"termios"}}],[11,"clone","","",81,{"inputs":[{"name":"self"}],"output":{"name":"flock"}}],[11,"clone","","",101,{"inputs":[{"name":"self"}],"output":{"name":"sem_t"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"dirent"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"dirent64"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"rlimit64"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"glob_t"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",102,{"inputs":[{"name":"self"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",103,{"inputs":[{"name":"self"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",104,{"inputs":[{"name":"self"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",105,{"inputs":[{"name":"self"}],"output":{"name":"pthread_rwlockattr_t"}}],[11,"clone","","",106,{"inputs":[{"name":"self"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",107,{"inputs":[{"name":"self"}],"output":{"name":"pthread_condattr_t"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"passwd"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"spwd"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"statvfs"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"dqblk"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"signalfd_siginfo"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"itimerspec"}}],[11,"clone","","",108,{"inputs":[{"name":"self"}],"output":{"name":"fsid_t"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"mq_attr"}}],[11,"clone","","",109,{"inputs":[{"name":"self"}],"output":{"name":"cpu_set_t"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"if_nameindex"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"msginfo"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"mmsghdr"}}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"sembuf"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"input_event"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"input_id"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"input_absinfo"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"input_keymap_entry"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"input_mask"}}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"ff_replay"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"ff_trigger"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"ff_envelope"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"ff_constant_effect"}}],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"ff_ramp_effect"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"ff_condition_effect"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"ff_periodic_effect"}}],[11,"clone","","",63,{"inputs":[{"name":"self"}],"output":{"name":"ff_rumble_effect"}}],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"ff_effect"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"dl_phdr_info"}}],[11,"clone","","",66,{"inputs":[{"name":"self"}],"output":{"name":"elf32_phdr"}}],[11,"clone","","",67,{"inputs":[{"name":"self"}],"output":{"name":"elf64_phdr"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"addrinfo"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_nl"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_ll"}}],[11,"clone","","",110,{"inputs":[{"name":"self"}],"output":{"name":"fd_set"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"tm"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"sched_param"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"dl_info"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"epoll_event"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"utsname"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"lconv"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"sigevent"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"group"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"utimbuf"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"timeval"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"timespec"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"rlimit"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"rusage"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"in_addr"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"in6_addr"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"hostent"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"iovec"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"pollfd"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"winsize"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"linger"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"sigval"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"itimerval"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"tms"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"servent"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"protoent"}}],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"loff_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__s16","","",null,null],[6,"__u32","","",null,null],[6,"__s32","","",null,null],[6,"Elf32_Half","","",null,null],[6,"Elf32_Word","","",null,null],[6,"Elf32_Off","","",null,null],[6,"Elf32_Addr","","",null,null],[6,"Elf64_Half","","",null,null],[6,"Elf64_Word","","",null,null],[6,"Elf64_Off","","",null,null],[6,"Elf64_Addr","","",null,null],[6,"Elf64_Xword","","",null,null],[6,"__priority_which_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__u64","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_CANCELLK","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"F_ADD_SEALS","","",null,null],[17,"F_GET_SEALS","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"MADV_SOFT_OFFLINE","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_O_MASK","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_PC_SYNC_IO","","",null,null],[17,"_PC_ASYNC_IO","","",null,null],[17,"_PC_PRIO_IO","","",null,null],[17,"_PC_SOCK_MAXBUF","","",null,null],[17,"_PC_FILESIZEBITS","","",null,null],[17,"_PC_REC_INCR_XFER_SIZE","","",null,null],[17,"_PC_REC_MAX_XFER_SIZE","","",null,null],[17,"_PC_REC_MIN_XFER_SIZE","","",null,null],[17,"_PC_REC_XFER_ALIGN","","",null,null],[17,"_PC_ALLOC_SIZE_MIN","","",null,null],[17,"_PC_SYMLINK_MAX","","",null,null],[17,"_PC_2_SYMLINKS","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_UIO_MAXIOV","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"_SC_AVPHYS_PAGES","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XOPEN_XPG2","","",null,null],[17,"_SC_XOPEN_XPG3","","",null,null],[17,"_SC_XOPEN_XPG4","","",null,null],[17,"_SC_NZERO","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_STREAMS","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_V7_ILP32_OFF32","","",null,null],[17,"_SC_V7_ILP32_OFFBIG","","",null,null],[17,"_SC_V7_LP64_OFF64","","",null,null],[17,"_SC_V7_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"IFF_LOWER_UP","","",null,null],[17,"IFF_DORMANT","","",null,null],[17,"IFF_ECHO","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"RENAME_NOREPLACE","","",null,null],[17,"RENAME_EXCHANGE","","",null,null],[17,"RENAME_WHITEOUT","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_DCCP","","DCCP",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_MTP","","",null,null],[17,"IPPROTO_BEETPH","","",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_PIM","","Protocol indep. multicast",null,null],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_MH","","",null,null],[17,"IPPROTO_UDPLITE","","",null,null],[17,"IPPROTO_MPLS","","",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"GRND_NONBLOCK","","",null,null],[17,"GRND_RANDOM","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"TFD_CLOEXEC","","",null,null],[17,"TFD_NONBLOCK","","",null,null],[17,"TFD_TIMER_ABSTIME","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FALLOC_FL_COLLAPSE_RANGE","","",null,null],[17,"FALLOC_FL_ZERO_RANGE","","",null,null],[17,"FALLOC_FL_INSERT_RANGE","","",null,null],[17,"FALLOC_FL_UNSHARE_RANGE","","",null,null],[17,"ENOATTR","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"IUTF8","","",null,null],[17,"CMSPAR","","",null,null],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[17,"PT_NULL","","",null,null],[17,"PT_LOAD","","",null,null],[17,"PT_DYNAMIC","","",null,null],[17,"PT_INTERP","","",null,null],[17,"PT_NOTE","","",null,null],[17,"PT_SHLIB","","",null,null],[17,"PT_PHDR","","",null,null],[17,"PT_TLS","","",null,null],[17,"PT_NUM","","",null,null],[17,"PT_LOOS","","",null,null],[17,"PT_GNU_EH_FRAME","","",null,null],[17,"PT_GNU_STACK","","",null,null],[17,"PT_GNU_RELRO","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_ALG","","",null,null],[17,"SOL_NFC","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_DCCP","","",null,null],[17,"SOCK_PACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",null,null],[17,"DCCP_SOCKOPT_SERVICE","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_L","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_R","","",null,null],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",null,null],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",null,null],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",null,null],[17,"DCCP_SOCKOPT_CCID","","",null,null],[17,"DCCP_SOCKOPT_TX_CCID","","",null,null],[17,"DCCP_SOCKOPT_RX_CCID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",null,null],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",null,null],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",null,null],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening port",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_EQUIV_CLASS_MAX","","",null,null],[17,"_SC_CHARCLASS_NAME_MAX","","",null,null],[17,"_SC_PII","","",null,null],[17,"_SC_PII_XTI","","",null,null],[17,"_SC_PII_SOCKET","","",null,null],[17,"_SC_PII_INTERNET","","",null,null],[17,"_SC_PII_OSI","","",null,null],[17,"_SC_POLL","","",null,null],[17,"_SC_SELECT","","",null,null],[17,"_SC_PII_INTERNET_STREAM","","",null,null],[17,"_SC_PII_INTERNET_DGRAM","","",null,null],[17,"_SC_PII_OSI_COTS","","",null,null],[17,"_SC_PII_OSI_CLTS","","",null,null],[17,"_SC_PII_OSI_M","","",null,null],[17,"_SC_T_IOV_MAX","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_CHAR_BIT","","",null,null],[17,"_SC_CHAR_MAX","","",null,null],[17,"_SC_CHAR_MIN","","",null,null],[17,"_SC_INT_MAX","","",null,null],[17,"_SC_INT_MIN","","",null,null],[17,"_SC_LONG_BIT","","",null,null],[17,"_SC_WORD_BIT","","",null,null],[17,"_SC_MB_LEN_MAX","","",null,null],[17,"_SC_SSIZE_MAX","","",null,null],[17,"_SC_SCHAR_MAX","","",null,null],[17,"_SC_SCHAR_MIN","","",null,null],[17,"_SC_SHRT_MAX","","",null,null],[17,"_SC_SHRT_MIN","","",null,null],[17,"_SC_UCHAR_MAX","","",null,null],[17,"_SC_UINT_MAX","","",null,null],[17,"_SC_ULONG_MAX","","",null,null],[17,"_SC_USHRT_MAX","","",null,null],[17,"_SC_NL_ARGMAX","","",null,null],[17,"_SC_NL_LANGMAX","","",null,null],[17,"_SC_NL_MSGMAX","","",null,null],[17,"_SC_NL_NMAX","","",null,null],[17,"_SC_NL_SETMAX","","",null,null],[17,"_SC_NL_TEXTMAX","","",null,null],[17,"_SC_BASE","","",null,null],[17,"_SC_C_LANG_SUPPORT","","",null,null],[17,"_SC_C_LANG_SUPPORT_R","","",null,null],[17,"_SC_DEVICE_IO","","",null,null],[17,"_SC_DEVICE_SPECIFIC","","",null,null],[17,"_SC_DEVICE_SPECIFIC_R","","",null,null],[17,"_SC_FD_MGMT","","",null,null],[17,"_SC_FIFO","","",null,null],[17,"_SC_PIPE","","",null,null],[17,"_SC_FILE_ATTRIBUTES","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_FILE_SYSTEM","","",null,null],[17,"_SC_MULTI_PROCESS","","",null,null],[17,"_SC_SINGLE_PROCESS","","",null,null],[17,"_SC_NETWORKING","","",null,null],[17,"_SC_REGEX_VERSION","","",null,null],[17,"_SC_SIGNALS","","",null,null],[17,"_SC_SYSTEM_DATABASE","","",null,null],[17,"_SC_SYSTEM_DATABASE_R","","",null,null],[17,"_SC_USER_GROUPS","","",null,null],[17,"_SC_USER_GROUPS_R","","",null,null],[17,"_SC_LEVEL1_ICACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"O_LARGEFILE","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"VSWTC","","",null,null],[17,"OLCUC","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"XTABS","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"BOTHER","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null],[17,"R15","","",null,null],[17,"R14","","",null,null],[17,"R13","","",null,null],[17,"R12","","",null,null],[17,"RBP","","",null,null],[17,"RBX","","",null,null],[17,"R11","","",null,null],[17,"R10","","",null,null],[17,"R9","","",null,null],[17,"R8","","",null,null],[17,"RAX","","",null,null],[17,"RCX","","",null,null],[17,"RDX","","",null,null],[17,"RSI","","",null,null],[17,"RDI","","",null,null],[17,"ORIG_RAX","","",null,null],[17,"RIP","","",null,null],[17,"CS","","",null,null],[17,"EFLAGS","","",null,null],[17,"RSP","","",null,null],[17,"SS","","",null,null],[17,"FS_BASE","","",null,null],[17,"GS_BASE","","",null,null],[17,"DS","","",null,null],[17,"ES","","",null,null],[17,"FS","","",null,null],[17,"GS","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"SYS_read","","",null,null],[17,"SYS_write","","",null,null],[17,"SYS_open","","",null,null],[17,"SYS_close","","",null,null],[17,"SYS_stat","","",null,null],[17,"SYS_fstat","","",null,null],[17,"SYS_lstat","","",null,null],[17,"SYS_poll","","",null,null],[17,"SYS_lseek","","",null,null],[17,"SYS_mmap","","",null,null],[17,"SYS_mprotect","","",null,null],[17,"SYS_munmap","","",null,null],[17,"SYS_brk","","",null,null],[17,"SYS_rt_sigaction","","",null,null],[17,"SYS_rt_sigprocmask","","",null,null],[17,"SYS_rt_sigreturn","","",null,null],[17,"SYS_ioctl","","",null,null],[17,"SYS_pread64","","",null,null],[17,"SYS_pwrite64","","",null,null],[17,"SYS_readv","","",null,null],[17,"SYS_writev","","",null,null],[17,"SYS_access","","",null,null],[17,"SYS_pipe","","",null,null],[17,"SYS_select","","",null,null],[17,"SYS_sched_yield","","",null,null],[17,"SYS_mremap","","",null,null],[17,"SYS_msync","","",null,null],[17,"SYS_mincore","","",null,null],[17,"SYS_madvise","","",null,null],[17,"SYS_shmget","","",null,null],[17,"SYS_shmat","","",null,null],[17,"SYS_shmctl","","",null,null],[17,"SYS_dup","","",null,null],[17,"SYS_dup2","","",null,null],[17,"SYS_pause","","",null,null],[17,"SYS_nanosleep","","",null,null],[17,"SYS_getitimer","","",null,null],[17,"SYS_alarm","","",null,null],[17,"SYS_setitimer","","",null,null],[17,"SYS_getpid","","",null,null],[17,"SYS_sendfile","","",null,null],[17,"SYS_socket","","",null,null],[17,"SYS_connect","","",null,null],[17,"SYS_accept","","",null,null],[17,"SYS_sendto","","",null,null],[17,"SYS_recvfrom","","",null,null],[17,"SYS_sendmsg","","",null,null],[17,"SYS_recvmsg","","",null,null],[17,"SYS_shutdown","","",null,null],[17,"SYS_bind","","",null,null],[17,"SYS_listen","","",null,null],[17,"SYS_getsockname","","",null,null],[17,"SYS_getpeername","","",null,null],[17,"SYS_socketpair","","",null,null],[17,"SYS_setsockopt","","",null,null],[17,"SYS_getsockopt","","",null,null],[17,"SYS_clone","","",null,null],[17,"SYS_fork","","",null,null],[17,"SYS_vfork","","",null,null],[17,"SYS_execve","","",null,null],[17,"SYS_exit","","",null,null],[17,"SYS_wait4","","",null,null],[17,"SYS_kill","","",null,null],[17,"SYS_uname","","",null,null],[17,"SYS_semget","","",null,null],[17,"SYS_semop","","",null,null],[17,"SYS_semctl","","",null,null],[17,"SYS_shmdt","","",null,null],[17,"SYS_msgget","","",null,null],[17,"SYS_msgsnd","","",null,null],[17,"SYS_msgrcv","","",null,null],[17,"SYS_msgctl","","",null,null],[17,"SYS_fcntl","","",null,null],[17,"SYS_flock","","",null,null],[17,"SYS_fsync","","",null,null],[17,"SYS_fdatasync","","",null,null],[17,"SYS_truncate","","",null,null],[17,"SYS_ftruncate","","",null,null],[17,"SYS_getdents","","",null,null],[17,"SYS_getcwd","","",null,null],[17,"SYS_chdir","","",null,null],[17,"SYS_fchdir","","",null,null],[17,"SYS_rename","","",null,null],[17,"SYS_mkdir","","",null,null],[17,"SYS_rmdir","","",null,null],[17,"SYS_creat","","",null,null],[17,"SYS_link","","",null,null],[17,"SYS_unlink","","",null,null],[17,"SYS_symlink","","",null,null],[17,"SYS_readlink","","",null,null],[17,"SYS_chmod","","",null,null],[17,"SYS_fchmod","","",null,null],[17,"SYS_chown","","",null,null],[17,"SYS_fchown","","",null,null],[17,"SYS_lchown","","",null,null],[17,"SYS_umask","","",null,null],[17,"SYS_gettimeofday","","",null,null],[17,"SYS_getrlimit","","",null,null],[17,"SYS_getrusage","","",null,null],[17,"SYS_sysinfo","","",null,null],[17,"SYS_times","","",null,null],[17,"SYS_ptrace","","",null,null],[17,"SYS_getuid","","",null,null],[17,"SYS_syslog","","",null,null],[17,"SYS_getgid","","",null,null],[17,"SYS_setuid","","",null,null],[17,"SYS_setgid","","",null,null],[17,"SYS_geteuid","","",null,null],[17,"SYS_getegid","","",null,null],[17,"SYS_setpgid","","",null,null],[17,"SYS_getppid","","",null,null],[17,"SYS_getpgrp","","",null,null],[17,"SYS_setsid","","",null,null],[17,"SYS_setreuid","","",null,null],[17,"SYS_setregid","","",null,null],[17,"SYS_getgroups","","",null,null],[17,"SYS_setgroups","","",null,null],[17,"SYS_setresuid","","",null,null],[17,"SYS_getresuid","","",null,null],[17,"SYS_setresgid","","",null,null],[17,"SYS_getresgid","","",null,null],[17,"SYS_getpgid","","",null,null],[17,"SYS_setfsuid","","",null,null],[17,"SYS_setfsgid","","",null,null],[17,"SYS_getsid","","",null,null],[17,"SYS_capget","","",null,null],[17,"SYS_capset","","",null,null],[17,"SYS_rt_sigpending","","",null,null],[17,"SYS_rt_sigtimedwait","","",null,null],[17,"SYS_rt_sigqueueinfo","","",null,null],[17,"SYS_rt_sigsuspend","","",null,null],[17,"SYS_sigaltstack","","",null,null],[17,"SYS_utime","","",null,null],[17,"SYS_mknod","","",null,null],[17,"SYS_uselib","","",null,null],[17,"SYS_personality","","",null,null],[17,"SYS_ustat","","",null,null],[17,"SYS_statfs","","",null,null],[17,"SYS_fstatfs","","",null,null],[17,"SYS_sysfs","","",null,null],[17,"SYS_getpriority","","",null,null],[17,"SYS_setpriority","","",null,null],[17,"SYS_sched_setparam","","",null,null],[17,"SYS_sched_getparam","","",null,null],[17,"SYS_sched_setscheduler","","",null,null],[17,"SYS_sched_getscheduler","","",null,null],[17,"SYS_sched_get_priority_max","","",null,null],[17,"SYS_sched_get_priority_min","","",null,null],[17,"SYS_sched_rr_get_interval","","",null,null],[17,"SYS_mlock","","",null,null],[17,"SYS_munlock","","",null,null],[17,"SYS_mlockall","","",null,null],[17,"SYS_munlockall","","",null,null],[17,"SYS_vhangup","","",null,null],[17,"SYS_modify_ldt","","",null,null],[17,"SYS_pivot_root","","",null,null],[17,"SYS__sysctl","","",null,null],[17,"SYS_prctl","","",null,null],[17,"SYS_arch_prctl","","",null,null],[17,"SYS_adjtimex","","",null,null],[17,"SYS_setrlimit","","",null,null],[17,"SYS_chroot","","",null,null],[17,"SYS_sync","","",null,null],[17,"SYS_acct","","",null,null],[17,"SYS_settimeofday","","",null,null],[17,"SYS_mount","","",null,null],[17,"SYS_umount2","","",null,null],[17,"SYS_swapon","","",null,null],[17,"SYS_swapoff","","",null,null],[17,"SYS_reboot","","",null,null],[17,"SYS_sethostname","","",null,null],[17,"SYS_setdomainname","","",null,null],[17,"SYS_iopl","","",null,null],[17,"SYS_ioperm","","",null,null],[17,"SYS_create_module","","",null,null],[17,"SYS_init_module","","",null,null],[17,"SYS_delete_module","","",null,null],[17,"SYS_get_kernel_syms","","",null,null],[17,"SYS_query_module","","",null,null],[17,"SYS_quotactl","","",null,null],[17,"SYS_nfsservctl","","",null,null],[17,"SYS_getpmsg","","",null,null],[17,"SYS_putpmsg","","",null,null],[17,"SYS_afs_syscall","","",null,null],[17,"SYS_tuxcall","","",null,null],[17,"SYS_security","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_readahead","","",null,null],[17,"SYS_setxattr","","",null,null],[17,"SYS_lsetxattr","","",null,null],[17,"SYS_fsetxattr","","",null,null],[17,"SYS_getxattr","","",null,null],[17,"SYS_lgetxattr","","",null,null],[17,"SYS_fgetxattr","","",null,null],[17,"SYS_listxattr","","",null,null],[17,"SYS_llistxattr","","",null,null],[17,"SYS_flistxattr","","",null,null],[17,"SYS_removexattr","","",null,null],[17,"SYS_lremovexattr","","",null,null],[17,"SYS_fremovexattr","","",null,null],[17,"SYS_tkill","","",null,null],[17,"SYS_time","","",null,null],[17,"SYS_futex","","",null,null],[17,"SYS_sched_setaffinity","","",null,null],[17,"SYS_sched_getaffinity","","",null,null],[17,"SYS_set_thread_area","","",null,null],[17,"SYS_io_setup","","",null,null],[17,"SYS_io_destroy","","",null,null],[17,"SYS_io_getevents","","",null,null],[17,"SYS_io_submit","","",null,null],[17,"SYS_io_cancel","","",null,null],[17,"SYS_get_thread_area","","",null,null],[17,"SYS_lookup_dcookie","","",null,null],[17,"SYS_epoll_create","","",null,null],[17,"SYS_epoll_ctl_old","","",null,null],[17,"SYS_epoll_wait_old","","",null,null],[17,"SYS_remap_file_pages","","",null,null],[17,"SYS_getdents64","","",null,null],[17,"SYS_set_tid_address","","",null,null],[17,"SYS_restart_syscall","","",null,null],[17,"SYS_semtimedop","","",null,null],[17,"SYS_fadvise64","","",null,null],[17,"SYS_timer_create","","",null,null],[17,"SYS_timer_settime","","",null,null],[17,"SYS_timer_gettime","","",null,null],[17,"SYS_timer_getoverrun","","",null,null],[17,"SYS_timer_delete","","",null,null],[17,"SYS_clock_settime","","",null,null],[17,"SYS_clock_gettime","","",null,null],[17,"SYS_clock_getres","","",null,null],[17,"SYS_clock_nanosleep","","",null,null],[17,"SYS_exit_group","","",null,null],[17,"SYS_epoll_wait","","",null,null],[17,"SYS_epoll_ctl","","",null,null],[17,"SYS_tgkill","","",null,null],[17,"SYS_utimes","","",null,null],[17,"SYS_vserver","","",null,null],[17,"SYS_mbind","","",null,null],[17,"SYS_set_mempolicy","","",null,null],[17,"SYS_get_mempolicy","","",null,null],[17,"SYS_mq_open","","",null,null],[17,"SYS_mq_unlink","","",null,null],[17,"SYS_mq_timedsend","","",null,null],[17,"SYS_mq_timedreceive","","",null,null],[17,"SYS_mq_notify","","",null,null],[17,"SYS_mq_getsetattr","","",null,null],[17,"SYS_kexec_load","","",null,null],[17,"SYS_waitid","","",null,null],[17,"SYS_add_key","","",null,null],[17,"SYS_request_key","","",null,null],[17,"SYS_keyctl","","",null,null],[17,"SYS_ioprio_set","","",null,null],[17,"SYS_ioprio_get","","",null,null],[17,"SYS_inotify_init","","",null,null],[17,"SYS_inotify_add_watch","","",null,null],[17,"SYS_inotify_rm_watch","","",null,null],[17,"SYS_migrate_pages","","",null,null],[17,"SYS_openat","","",null,null],[17,"SYS_mkdirat","","",null,null],[17,"SYS_mknodat","","",null,null],[17,"SYS_fchownat","","",null,null],[17,"SYS_futimesat","","",null,null],[17,"SYS_newfstatat","","",null,null],[17,"SYS_unlinkat","","",null,null],[17,"SYS_renameat","","",null,null],[17,"SYS_linkat","","",null,null],[17,"SYS_symlinkat","","",null,null],[17,"SYS_readlinkat","","",null,null],[17,"SYS_fchmodat","","",null,null],[17,"SYS_faccessat","","",null,null],[17,"SYS_pselect6","","",null,null],[17,"SYS_ppoll","","",null,null],[17,"SYS_unshare","","",null,null],[17,"SYS_set_robust_list","","",null,null],[17,"SYS_get_robust_list","","",null,null],[17,"SYS_splice","","",null,null],[17,"SYS_tee","","",null,null],[17,"SYS_sync_file_range","","",null,null],[17,"SYS_vmsplice","","",null,null],[17,"SYS_move_pages","","",null,null],[17,"SYS_utimensat","","",null,null],[17,"SYS_epoll_pwait","","",null,null],[17,"SYS_signalfd","","",null,null],[17,"SYS_timerfd_create","","",null,null],[17,"SYS_eventfd","","",null,null],[17,"SYS_fallocate","","",null,null],[17,"SYS_timerfd_settime","","",null,null],[17,"SYS_timerfd_gettime","","",null,null],[17,"SYS_accept4","","",null,null],[17,"SYS_signalfd4","","",null,null],[17,"SYS_eventfd2","","",null,null],[17,"SYS_epoll_create1","","",null,null],[17,"SYS_dup3","","",null,null],[17,"SYS_pipe2","","",null,null],[17,"SYS_inotify_init1","","",null,null],[17,"SYS_preadv","","",null,null],[17,"SYS_pwritev","","",null,null],[17,"SYS_rt_tgsigqueueinfo","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"SYS_recvmmsg","","",null,null],[17,"SYS_fanotify_init","","",null,null],[17,"SYS_fanotify_mark","","",null,null],[17,"SYS_prlimit64","","",null,null],[17,"SYS_name_to_handle_at","","",null,null],[17,"SYS_open_by_handle_at","","",null,null],[17,"SYS_clock_adjtime","","",null,null],[17,"SYS_syncfs","","",null,null],[17,"SYS_sendmmsg","","",null,null],[17,"SYS_setns","","",null,null],[17,"SYS_getcpu","","",null,null],[17,"SYS_process_vm_readv","","",null,null],[17,"SYS_process_vm_writev","","",null,null],[17,"SYS_kcmp","","",null,null],[17,"SYS_finit_module","","",null,null],[17,"SYS_sched_setattr","","",null,null],[17,"SYS_sched_getattr","","",null,null],[17,"SYS_renameat2","","",null,null],[17,"SYS_seccomp","","",null,null],[17,"SYS_getrandom","","",null,null],[17,"SYS_memfd_create","","",null,null],[17,"SYS_kexec_file_load","","",null,null],[17,"SYS_bpf","","",null,null],[17,"SYS_execveat","","",null,null],[17,"SYS_userfaultfd","","",null,null],[17,"SYS_membarrier","","",null,null],[17,"SYS_mlock2","","",null,null],[17,"SYS_copy_file_range","","",null,null],[17,"SYS_preadv2","","",null,null],[17,"SYS_pwritev2","","",null,null],[17,"SYS_pkey_mprotect","","",null,null],[17,"SYS_pkey_alloc","","",null,null],[17,"SYS_pkey_free","","",null,null]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"sigevent"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"spwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"mq_attr"],[3,"if_nameindex"],[3,"msginfo"],[3,"mmsghdr"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"flock"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_fpregs_struct"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex["proc_macro2"] = {"doc":"A \"shim crate\" intended to multiplex the `proc_macro` API on to stable Rust.","items":[[3,"TokenStream","proc_macro2","",null,null],[3,"LexError","","",null,null],[3,"Span","","",null,null],[3,"TokenTree","","",null,null],[12,"span","","",0,null],[12,"kind","","",0,null],[3,"Term","","",null,null],[3,"Literal","","",null,null],[3,"TokenTreeIter","","",null,null],[4,"TokenNode","","",null,null],[13,"Group","","",1,null],[13,"Term","","",1,null],[13,"Op","","",1,null],[13,"Literal","","",1,null],[4,"Delimiter","","",null,null],[13,"Parenthesis","","",2,null],[13,"Brace","","",2,null],[13,"Bracket","","",2,null],[13,"None","","",2,null],[4,"Spacing","","",null,null],[13,"Alone","","",3,null],[13,"Joint","","",3,null],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"tokenstream"}}],[11,"from_str","","",4,{"inputs":[{"name":"str"}],"output":{"generics":["tokenstream","lexerror"],"name":"result"}}],[11,"from","","",4,{"inputs":[{"name":"tokenstream"}],"output":{"name":"tokenstream"}}],[11,"from","","",4,{"inputs":[{"name":"tokentree"}],"output":{"name":"tokenstream"}}],[11,"from_iter","","",4,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"into_iter","","",4,{"inputs":[{"name":"self"}],"output":{"name":"tokentreeiter"}}],[11,"empty","","",4,{"inputs":[],"output":{"name":"tokenstream"}}],[11,"is_empty","","",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"span"}}],[11,"call_site","","",5,{"inputs":[],"output":{"name":"span"}}],[11,"def_site","","",5,{"inputs":[],"output":{"name":"span"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"tokentree"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"tokennode"}],"output":{"name":"tokentree"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"tokennode"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"delimiter"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"delimiter"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"term"}}],[11,"intern","","",6,{"inputs":[{"name":"str"}],"output":{"name":"term"}}],[11,"as_str","","",6,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"spacing"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"spacing"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"literal"}}],[11,"integer","","",7,{"inputs":[{"name":"i64"}],"output":{"name":"literal"}}],[11,"u8","","",7,{"inputs":[{"name":"u8"}],"output":{"name":"literal"}}],[11,"u16","","",7,{"inputs":[{"name":"u16"}],"output":{"name":"literal"}}],[11,"u32","","",7,{"inputs":[{"name":"u32"}],"output":{"name":"literal"}}],[11,"u64","","",7,{"inputs":[{"name":"u64"}],"output":{"name":"literal"}}],[11,"usize","","",7,{"inputs":[{"name":"usize"}],"output":{"name":"literal"}}],[11,"i8","","",7,{"inputs":[{"name":"i8"}],"output":{"name":"literal"}}],[11,"i16","","",7,{"inputs":[{"name":"i16"}],"output":{"name":"literal"}}],[11,"i32","","",7,{"inputs":[{"name":"i32"}],"output":{"name":"literal"}}],[11,"i64","","",7,{"inputs":[{"name":"i64"}],"output":{"name":"literal"}}],[11,"isize","","",7,{"inputs":[{"name":"isize"}],"output":{"name":"literal"}}],[11,"float","","",7,{"inputs":[{"name":"f64"}],"output":{"name":"literal"}}],[11,"f64","","",7,{"inputs":[{"name":"f64"}],"output":{"name":"literal"}}],[11,"f32","","",7,{"inputs":[{"name":"f32"}],"output":{"name":"literal"}}],[11,"string","","",7,{"inputs":[{"name":"str"}],"output":{"name":"literal"}}],[11,"character","","",7,{"inputs":[{"name":"char"}],"output":{"name":"literal"}}],[11,"byte_string","","",7,null],[11,"byte_char","","",7,{"inputs":[{"name":"u8"}],"output":{"name":"literal"}}],[11,"doccomment","","",7,{"inputs":[{"name":"str"}],"output":{"name":"literal"}}],[11,"raw_string","","",7,{"inputs":[{"name":"str"},{"name":"usize"}],"output":{"name":"literal"}}],[11,"raw_byte_string","","",7,{"inputs":[{"name":"str"},{"name":"usize"}],"output":{"name":"literal"}}],[11,"next","","",8,{"inputs":[{"name":"self"}],"output":{"generics":["tokentree"],"name":"option"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"TokenTree"],[4,"TokenNode"],[4,"Delimiter"],[4,"Spacing"],[3,"TokenStream"],[3,"Span"],[3,"Term"],[3,"Literal"],[3,"TokenTreeIter"],[3,"LexError"]]};
searchIndex["quote"] = {"doc":"Quasi-quoting without a Syntex dependency, intended for use with Macros 1.1.","items":[[3,"Tokens","quote","Tokens produced by a `quote!(...)` invocation.",null,null],[3,"ByteStr","","Wrap a `&str` so it interpolates as a byte-string: `b\"abc\"`.",null,null],[12,"0","","",0,null],[3,"Hex","","Wrap an integer so it interpolates as a hexadecimal.",null,null],[12,"0","","",1,null],[3,"Ident","","An identifier that should be interpolated without quotes.",null,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"tokens"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":{"name":"bool"}}],[11,"new","","Empty tokens.",2,{"inputs":[],"output":{"name":"self"}}],[11,"append","","For use by `ToTokens` implementations.",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"append_all","","For use by `ToTokens` implementations.",2,{"inputs":[{"name":"self"},{"name":"i"}],"output":null}],[11,"append_separated","","For use by `ToTokens` implementations.",2,{"inputs":[{"name":"self"},{"name":"i"},{"name":"s"}],"output":null}],[11,"append_terminated","","For use by `ToTokens` implementations.",2,{"inputs":[{"name":"self"},{"name":"i"},{"name":"s"}],"output":null}],[11,"as_str","","",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"into_string","","",2,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"parse","","",2,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"as_ref","","",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_tokens","","",0,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",2,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"ident"}}],[11,"hash","","",3,null],[11,"new","","",3,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"generics":["str"],"name":"cow"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"as_ref","","",3,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"to_tokens","","",3,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[8,"ToTokens","","Types that can be interpolated inside a `quote!(...)` invocation.",null,null],[10,"to_tokens","","Write `self` to the given `Tokens`.",4,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[14,"quote","","The whole point.",null,null]],"paths":[[3,"ByteStr"],[3,"Hex"],[3,"Tokens"],[3,"Ident"],[8,"ToTokens"]]};
searchIndex["reactfs"] = {"doc":"","items":[[0,"reactor","reactfs","",null,null],[3,"StreamId","reactfs::reactor","The ID of a `Stream`",null,null],[12,"0","","",0,null],[3,"EventId","","The ID of an `Event`",null,null],[12,"0","","",1,null],[3,"TaskId","","The ID of a `Task`",null,null],[12,"0","","",2,null],[3,"SpawnedTask","","Represents a spawned task.",null,null],[3,"ReadRequest","","A block device read request",null,null],[12,"event_id","","",3,null],[12,"task_id","","",3,null],[12,"offset","","",3,null],[12,"length","","",3,null],[3,"WriteRequest","","A block device write request",null,null],[12,"event_id","","",4,null],[12,"task_id","","",4,null],[12,"offset","","",4,null],[12,"data","","",4,null],[3,"FlushRequest","","A block device flush request",null,null],[12,"event_id","","",5,null],[12,"task_id","","",5,null],[3,"ReadResponse","","A block device read response",null,null],[12,"data","","",6,null],[3,"WriteResponse","","A block device write response",null,null],[3,"FlushResponse","","A block device flush response",null,null],[3,"FSRequest","","A filesystem request",null,null],[3,"FSResponse","","A filesystem response",null,null],[3,"Handle","","A handle to the `reactor::Inner` structure of `reactor::Core` (`Weak<RefCell<Inner>>`)",null,null],[3,"Core","","The `Core` of the `reactor` containing the event loop.",null,null],[3,"FutureRead","","`Future` returned by `Handle::read()` which will resolve to a `Vec<u8>` on completion.",null,null],[3,"FutureWrite","","`Future` returned by `Handle::write()` which will resolve to `()` when completed.",null,null],[3,"FutureFlush","","`Future` returned by `Handle::flush()` which will resolve to `()` when completed.",null,null],[3,"FSCallStream","","`Stream` returned by `Handle::get_fs_call()` which will resolve to `FSRequest`s.",null,null],[4,"FutureEvent","","Represents an event which destination is a `Future` ",null,null],[13,"ReadResponse","","",7,null],[13,"WriteResponse","","",7,null],[13,"FlushResponse","","",7,null],[4,"StreamEvent","","Represents an event which destination is a `Stream` ",null,null],[13,"FSRequest","","",8,null],[4,"Event","","Represents an event to be sent to the `reactor`'s `Core`'s main loop",null,null],[13,"ToFuture","","",9,null],[12,"event_id","reactfs::reactor::Event","",9,null],[12,"task_id","","",9,null],[12,"event","","",9,null],[13,"ToStream","reactfs::reactor","",9,null],[12,"stream_id","reactfs::reactor::Event","",9,null],[12,"task_id","","",9,null],[12,"event","","",9,null],[4,"BDRequest","reactfs::reactor","A block device request",null,null],[13,"Read","","",10,null],[13,"Write","","",10,null],[13,"Flush","","",10,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"streamid"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"streamid"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"streamid"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"streamid"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"streamid"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"streamid"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"streamid"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"streamid"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"streamid"}],"output":{"name":"ordering"}}],[11,"hash","","",0,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"eventid"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"eventid"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"eventid"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"eventid"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"self"},{"name":"eventid"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"self"},{"name":"eventid"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"self"},{"name":"eventid"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"self"},{"name":"eventid"}],"output":{"name":"bool"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"eventid"}],"output":{"name":"ordering"}}],[11,"hash","","",1,null],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"taskid"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"taskid"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"taskid"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"taskid"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"self"},{"name":"taskid"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"self"},{"name":"taskid"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"self"},{"name":"taskid"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"self"},{"name":"taskid"}],"output":{"name":"bool"}}],[11,"cmp","","",2,{"inputs":[{"name":"self"},{"name":"taskid"}],"output":{"name":"ordering"}}],[11,"hash","","",2,null],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"handle"}}],[11,"read","","Reads `length` bytes at `offset` and returns a `ReadFuture` which resolves to `Vec<u8>`.",16,{"inputs":[{"name":"self"},{"name":"u64"},{"name":"u64"}],"output":{"name":"futureread"}}],[11,"write","","Writes `data` bytes at `offset` and returns a `WriteFuture` which resolves when the write is done`.",16,{"inputs":[{"name":"self"},{"generics":["u8"],"name":"vec"},{"name":"u64"}],"output":{"name":"futurewrite"}}],[11,"flush","","Flush block device queue and returns a `FlushFuture` which resolves when the flush is done`.",16,{"inputs":[{"name":"self"}],"output":{"name":"futureflush"}}],[11,"recv_fs_request","","Return a `FSCallStream` which resolves to `FSRequest`s.",16,{"inputs":[{"name":"self"}],"output":{"name":"fscallstream"}}],[11,"send_fs_response","","Sends `fs_response` back through the filesystem channel",16,{"inputs":[{"name":"self"},{"name":"fsresponse"}],"output":null}],[11,"spawn","","Spawns a new `SpawnedTask` in the event loop from a `Future` or a `Stream`",16,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"taskid"}}],[11,"new","","Creates a new `reactor`.",17,{"inputs":[{"generics":["bdrequest"],"name":"sender"},{"generics":["fsresponse"],"name":"sender"},{"generics":["event"],"name":"receiver"}],"output":{"name":"core"}}],[11,"handle","","Returns a `Handle` to the `Inner` state of the `reactor`.",17,{"inputs":[{"name":"self"}],"output":{"name":"handle"}}],[11,"run","","Runs a `future` until completion.",17,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",18,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",19,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",20,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[14,"stream_yield","","",null,null],[14,"await","","Ye Olde Await Macro",null,null],[0,"fake_bd","reactfs","",null,null],[5,"fake_bd_loop","reactfs::fake_bd","This function implements a fake block device.",null,{"inputs":[{"generics":["event"],"name":"sender"},{"generics":["bdrequest"],"name":"receiver"}],"output":null}],[14,"stream_yield","reactfs","",null,null],[14,"await","","Ye Olde Await Macro",null,null]],"paths":[[3,"StreamId"],[3,"EventId"],[3,"TaskId"],[3,"ReadRequest"],[3,"WriteRequest"],[3,"FlushRequest"],[3,"ReadResponse"],[4,"FutureEvent"],[4,"StreamEvent"],[4,"Event"],[4,"BDRequest"],[3,"SpawnedTask"],[3,"WriteResponse"],[3,"FlushResponse"],[3,"FSRequest"],[3,"FSResponse"],[3,"Handle"],[3,"Core"],[3,"FutureRead"],[3,"FutureWrite"],[3,"FutureFlush"],[3,"FSCallStream"]]};
searchIndex["rustc_demangle"] = {"doc":"Demangle Rust compiler symbol names.","items":[[3,"Demangle","rustc_demangle","Representation of a demangled symbol name.",null,null],[3,"TryDemangleError","","Error returned from the `try_demangle` function below when demangling fails.",null,null],[5,"demangle","","De-mangles a Rust symbol into a more readable version",null,{"inputs":[{"name":"str"}],"output":{"name":"demangle"}}],[5,"try_demangle","","The same as `demangle`, except return an `Err` if the string does not appear to be a Rust symbol, rather than \"demangling\" the given string as a no-op.",null,{"inputs":[{"name":"str"}],"output":{"generics":["demangle","trydemangleerror"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"trydemangleerror"}}],[11,"as_str","","Returns the underlying string that's being demangled.",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"TryDemangleError"],[3,"Demangle"]]};
searchIndex["slab"] = {"doc":"Pre-allocated storage for a uniform data type.","items":[[3,"Slab","slab","Pre-allocated storage for a uniform data type",null,null],[3,"VacantEntry","","A handle to an vacant entry in a `Slab`.",null,null],[3,"Iter","","An iterator over the values stored in the `Slab`",null,null],[3,"IterMut","","A mutable iterator over the values stored in the `Slab`",null,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"slab"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct a new, empty `Slab`.",0,{"inputs":[],"output":{"name":"slab"}}],[11,"with_capacity","","Construct a new, empty `Slab` with the specified capacity.",0,{"inputs":[{"name":"usize"}],"output":{"name":"slab"}}],[11,"capacity","","Returns the number of values the slab can store without reallocating.",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more values to be stored without allocating.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"reserve_exact","","Reserves the minimum capacity required to store exactly `additional` more values.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shrink_to_fit","","Shrinks the capacity of the slab as much as possible.",0,{"inputs":[{"name":"self"}],"output":null}],[11,"clear","","Clear the slab of all values",0,{"inputs":[{"name":"self"}],"output":null}],[11,"len","","Returns the number of stored values",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if no values are stored in the slab",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"iter","","Returns an iterator over the slab",0,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns an iterator that allows modifying each value.",0,{"inputs":[{"name":"self"}],"output":{"name":"itermut"}}],[11,"get","","Returns a reference to the value associated with the given key",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the value associated with the given key",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_unchecked","","Returns a reference to the value associated with the given key without performing bounds checking.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"t"}}],[11,"get_unchecked_mut","","Returns a mutable reference to the value associated with the given key without performing bounds checking.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"t"}}],[11,"insert","","Insert a value in the slab, returning key assigned to the value",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"usize"}}],[11,"vacant_entry","","Returns a handle to a vacant entry allowing for further manipulation.",0,{"inputs":[{"name":"self"}],"output":{"name":"vacantentry"}}],[11,"remove","","Removes and returns the value associated with the given key.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"t"}}],[11,"contains","","Returns `true` if a value is associated with the given key.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"retain","","Retain only the elements specified by the predicate.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"index","","",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"t"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"insert","","Insert a value in the entry, returning a mutable reference to the value.",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"t"}}],[11,"key","","Return the key associated with this entry.",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"next","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}]],"paths":[[3,"Slab"],[3,"VacantEntry"],[3,"Iter"],[3,"IterMut"]]};
searchIndex["syn"] = {"doc":"","items":[[3,"Attribute","syn","Doc-comments are promoted to attributes that have `is_sugared_doc` = true",null,null],[12,"style","","",0,null],[12,"value","","",0,null],[12,"is_sugared_doc","","",0,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"ident","","Name of the field, if any.",1,null],[12,"vis","","Visibility of the field.",1,null],[12,"attrs","","Attributes tagged on the field.",1,null],[12,"ty","","Type of the field.",1,null],[3,"Variant","","An enum variant.",null,null],[12,"ident","","Name of the variant.",2,null],[12,"attrs","","Attributes tagged on the variant.",2,null],[12,"data","","Type of variant.",2,null],[12,"discriminant","","Explicit discriminant, e.g. `Foo = 1`",2,null],[3,"Generics","","Represents lifetimes and type parameters attached to a declaration of a function, enum, trait, etc.",null,null],[12,"lifetimes","","",3,null],[12,"ty_params","","",3,null],[12,"where_clause","","",3,null],[3,"Lifetime","","",null,null],[12,"ident","","",4,null],[3,"LifetimeDef","","A lifetime definition, e.g. `'a: 'b+'c+'d`",null,null],[12,"attrs","","",5,null],[12,"lifetime","","",5,null],[12,"bounds","","",5,null],[3,"TyParam","","A generic type parameter, e.g. `T: Into<String>`.",null,null],[12,"attrs","","",6,null],[12,"ident","","",6,null],[12,"bounds","","",6,null],[12,"default","","",6,null],[3,"WhereBoundPredicate","","A type bound.",null,null],[12,"bound_lifetimes","","Any lifetimes from a `for` binding",7,null],[12,"bounded_ty","","The type being bounded",7,null],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",7,null],[3,"WhereClause","","A `where` clause in a definition",null,null],[12,"predicates","","",8,null],[3,"WhereEqPredicate","","An equality predicate (unsupported).",null,null],[12,"lhs_ty","","",9,null],[12,"rhs_ty","","",9,null],[3,"WhereRegionPredicate","","A lifetime predicate.",null,null],[12,"lifetime","","",10,null],[12,"bounds","","",10,null],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Turbofish","","Returned by `TyGenerics::as_turbofish`.",null,null],[3,"TyGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Ident","","",null,null],[3,"ByteStrLit","","",null,null],[12,"value","","",11,null],[12,"style","","",11,null],[3,"FloatLit","","",null,null],[12,"value","","",12,null],[12,"suffix","","",12,null],[3,"IntLit","","",null,null],[12,"value","","",13,null],[12,"suffix","","",13,null],[3,"StrLit","","",null,null],[12,"value","","",14,null],[12,"style","","",14,null],[3,"Delimited","","",null,null],[12,"delim","","The type of delimiter",15,null],[12,"tts","","The delimited sequence of token trees",15,null],[3,"Mac","","Represents a macro invocation. The Path indicates which macro is being invoked, and the vector of token-trees contains the source of the macro invocation.",null,null],[12,"path","","",16,null],[12,"tts","","",16,null],[3,"DeriveInput","","Struct or enum sent to a `proc_macro_derive` macro.",null,null],[12,"ident","","Name of the struct or enum.",17,null],[12,"vis","","Visibility of the struct or enum.",17,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",17,null],[12,"generics","","Generics required to complete the definition.",17,null],[12,"body","","Data within the struct or enum.",17,null],[3,"AngleBracketedParameterData","","A path like `Foo<'a, T>`",null,null],[12,"lifetimes","","The lifetime parameters for this path segment.",18,null],[12,"types","","The type parameters for this path segment, if present.",18,null],[12,"bindings","","Bindings (equality constraints) on associated types, if present.",18,null],[3,"BareFnArg","","An argument in a function type.",null,null],[12,"name","","",19,null],[12,"ty","","",19,null],[3,"BareFnTy","","",null,null],[12,"unsafety","","",20,null],[12,"abi","","",20,null],[12,"lifetimes","","",20,null],[12,"inputs","","",20,null],[12,"output","","",20,null],[12,"variadic","","",20,null],[3,"MutTy","","",null,null],[12,"ty","","",21,null],[12,"mutability","","",21,null],[3,"ParenthesizedParameterData","","A path like `Foo(A,B) -> C`",null,null],[12,"inputs","","`(A, B)`",22,null],[12,"output","","`C`",22,null],[3,"Path","","A \"Path\" is essentially Rust's notion of a name.",null,null],[12,"global","","A `::foo` path, is relative to the crate root rather than current module (like paths in an import).",23,null],[12,"segments","","The segments in the path: the things separated by `::`.",23,null],[3,"PathSegment","","A segment of a path: an identifier, an optional lifetime, and a set of types.",null,null],[12,"ident","","The identifier portion of this path segment.",24,null],[12,"parameters","","Type/lifetime parameters attached to this path. They come in two flavors: `Path<A,B,C>` and `Path(A,B) -> C`. Note that this is more than just simple syntactic sugar; the use of parens affects the region binding rules, so we preserve the distinction.",24,null],[3,"PolyTraitRef","","",null,null],[12,"bound_lifetimes","","The `'a` in `<'a> Foo<&'a T>`",25,null],[12,"trait_ref","","The `Foo<&'a T>` in `<'a> Foo<&'a T>`",25,null],[3,"QSelf","","The explicit Self type in a \"qualified path\". The actual path, including the trait and the associated item, is stored separately. `position` represents the index of the associated item qualified with this Self type.",null,null],[12,"ty","","",26,null],[12,"position","","",26,null],[3,"TypeBinding","","Bind a type to an associated type: `A=Foo`.",null,null],[12,"ident","","",27,null],[12,"ty","","",27,null],[4,"AttrStyle","","Distinguishes between Attributes that decorate items and Attributes that are contained as statements within items. These two cases need to be distinguished for pretty-printing.",null,null],[13,"Outer","","Attribute of the form `#![...]`.",28,null],[13,"Inner","","Attribute of the form `#[...]`.",28,null],[4,"MetaItem","","A compile-time attribute item.",null,null],[13,"Word","","Word meta item.",29,null],[13,"List","","List meta item.",29,null],[13,"NameValue","","Name-value meta item.",29,null],[4,"NestedMetaItem","","Possible values inside of compile-time attribute lists.",null,null],[13,"MetaItem","","A full `MetaItem`.",30,null],[13,"Literal","","A Rust literal.",30,null],[4,"ConstExpr","","",null,null],[13,"Call","","A function call",31,null],[13,"Binary","","A binary operation (For example: `a + b`, `a * b`)",31,null],[13,"Unary","","A unary operation (For example: `!x`, `*x`)",31,null],[13,"Lit","","A literal (For example: `1`, `\"foo\"`)",31,null],[13,"Cast","","A cast (`foo as f64`)",31,null],[13,"Path","","Variable reference, possibly containing `::` and/or type parameters, e.g. foo::bar::.",31,null],[13,"Index","","An indexing operation (`foo[2]`)",31,null],[13,"Paren","","No-op: used solely so we can pretty-print faithfully",31,null],[13,"Other","","If compiling with full support for expression syntax, any expression is allowed",31,null],[4,"VariantData","","Data stored within an enum variant or struct.",null,null],[13,"Struct","","Struct variant, e.g. `Point { x: f64, y: f64 }`.",32,null],[13,"Tuple","","Tuple variant, e.g. `Some(T)`.",32,null],[13,"Unit","","Unit variant, e.g. `None`.",32,null],[4,"Visibility","","Visibility level of an item.",null,null],[13,"Public","","Public, i.e. `pub`.",33,null],[13,"Crate","","Crate-visible, i.e. `pub(crate)`.",33,null],[13,"Restricted","","Restricted, e.g. `pub(some::module)`.",33,null],[13,"Inherited","","Inherited, i.e. private.",33,null],[4,"TraitBoundModifier","","A modifier on a bound, currently this is only used for `?Sized`, where the modifier is `Maybe`. Negative bounds should also be handled here.",null,null],[13,"None","","",34,null],[13,"Maybe","","",34,null],[4,"TyParamBound","","The AST represents all type param bounds as types. `typeck::collect::compute_bounds` matches these against the \"special\" built-in traits (see `middle::lang_items`) and detects Copy, Send and Sync.",null,null],[13,"Trait","","",35,null],[13,"Region","","",35,null],[4,"WherePredicate","","A single predicate in a `where` clause",null,null],[13,"BoundPredicate","","A type binding, e.g. `for<'c> Foo: Send+Clone+'c`",36,null],[13,"RegionPredicate","","A lifetime predicate, e.g. `'a: 'b+'c`",36,null],[13,"EqPredicate","","An equality predicate (unsupported)",36,null],[4,"FloatTy","","",null,null],[13,"F32","","",37,null],[13,"F64","","",37,null],[13,"Unsuffixed","","",37,null],[4,"IntTy","","",null,null],[13,"Isize","","",38,null],[13,"I8","","",38,null],[13,"I16","","",38,null],[13,"I32","","",38,null],[13,"I64","","",38,null],[13,"Usize","","",38,null],[13,"U8","","",38,null],[13,"U16","","",38,null],[13,"U32","","",38,null],[13,"U64","","",38,null],[13,"Unsuffixed","","",38,null],[4,"Lit","","Literal kind.",null,null],[13,"Str","","A string literal (`\"foo\"`)",39,null],[13,"ByteStr","","A byte string (`b\"foo\"`)",39,null],[13,"Byte","","A byte char (`b'f'`)",39,null],[13,"Char","","A character literal (`'a'`)",39,null],[13,"Int","","An integer literal (`1`)",39,null],[13,"Float","","A float literal (`1f64` or `1E10f64` or `1.0E10`)",39,null],[13,"Bool","","A boolean literal",39,null],[4,"StrStyle","","",null,null],[13,"Cooked","","A regular string, like `\"foo\"`",40,null],[13,"Raw","","A raw string, like `r##\"foo\"##`",40,null],[4,"BinOpToken","","",null,null],[13,"Plus","","",41,null],[13,"Minus","","",41,null],[13,"Star","","",41,null],[13,"Slash","","",41,null],[13,"Percent","","",41,null],[13,"Caret","","",41,null],[13,"And","","",41,null],[13,"Or","","",41,null],[13,"Shl","","",41,null],[13,"Shr","","",41,null],[4,"DelimToken","","A delimiter token",null,null],[13,"Paren","","A round parenthesis: `(` or `)`",42,null],[13,"Bracket","","A square bracket: `[` or `]`",42,null],[13,"Brace","","A curly brace: `{` or `}`",42,null],[4,"Token","","",null,null],[13,"Eq","","",43,null],[13,"Lt","","",43,null],[13,"Le","","",43,null],[13,"EqEq","","",43,null],[13,"Ne","","",43,null],[13,"Ge","","",43,null],[13,"Gt","","",43,null],[13,"AndAnd","","",43,null],[13,"OrOr","","",43,null],[13,"Not","","",43,null],[13,"Tilde","","",43,null],[13,"BinOp","","",43,null],[13,"BinOpEq","","",43,null],[13,"At","","",43,null],[13,"Dot","","",43,null],[13,"DotDot","","",43,null],[13,"DotDotDot","","",43,null],[13,"Comma","","",43,null],[13,"Semi","","",43,null],[13,"Colon","","",43,null],[13,"ModSep","","",43,null],[13,"RArrow","","",43,null],[13,"LArrow","","",43,null],[13,"FatArrow","","",43,null],[13,"Pound","","",43,null],[13,"Dollar","","",43,null],[13,"Question","","",43,null],[13,"Literal","","",43,null],[13,"Ident","","",43,null],[13,"Underscore","","",43,null],[13,"Lifetime","","",43,null],[13,"DocComment","","",43,null],[4,"TokenTree","","When the main rust parser encounters a syntax-extension invocation, it parses the arguments to the invocation as a token-tree. This is a very loose structure, such that all sorts of different AST-fragments can be passed to syntax extensions using a uniform type.",null,null],[13,"Token","","A single token",44,null],[13,"Delimited","","A delimited sequence of token trees",44,null],[4,"Body","","Body of a derived struct or enum.",null,null],[13,"Enum","","It's an enum.",45,null],[13,"Struct","","It's a struct.",45,null],[4,"BinOp","","",null,null],[13,"Add","","The `+` operator (addition)",46,null],[13,"Sub","","The `-` operator (subtraction)",46,null],[13,"Mul","","The `*` operator (multiplication)",46,null],[13,"Div","","The `/` operator (division)",46,null],[13,"Rem","","The `%` operator (modulus)",46,null],[13,"And","","The `&&` operator (logical and)",46,null],[13,"Or","","The `||` operator (logical or)",46,null],[13,"BitXor","","The `^` operator (bitwise xor)",46,null],[13,"BitAnd","","The `&` operator (bitwise and)",46,null],[13,"BitOr","","The `|` operator (bitwise or)",46,null],[13,"Shl","","The `<<` operator (shift left)",46,null],[13,"Shr","","The `>>` operator (shift right)",46,null],[13,"Eq","","The `==` operator (equality)",46,null],[13,"Lt","","The `<` operator (less than)",46,null],[13,"Le","","The `<=` operator (less than or equal to)",46,null],[13,"Ne","","The `!=` operator (not equal to)",46,null],[13,"Ge","","The `>=` operator (greater than or equal to)",46,null],[13,"Gt","","The `>` operator (greater than)",46,null],[4,"UnOp","","",null,null],[13,"Deref","","The `*` operator for dereferencing",47,null],[13,"Not","","The `!` operator for logical inversion",47,null],[13,"Neg","","The `-` operator for negation",47,null],[4,"Abi","","",null,null],[13,"Named","","",48,null],[13,"Rust","","",48,null],[4,"FunctionRetTy","","",null,null],[13,"Default","","Return type is not specified.",49,null],[13,"Ty","","Everything else",49,null],[4,"Mutability","","",null,null],[13,"Mutable","","",50,null],[13,"Immutable","","",50,null],[4,"PathParameters","","Parameters of a path segment.",null,null],[13,"AngleBracketed","","The `<'a, A, B, C>` in `foo::bar::baz::<'a, A, B, C>`",51,null],[13,"Parenthesized","","The `(A, B)` and `C` in `Foo(A, B) -> C`",51,null],[4,"Ty","","The different kinds of types recognized by the compiler",null,null],[13,"Slice","","A variable-length array (`[T]`)",52,null],[13,"Array","","A fixed length array (`[T; n]`)",52,null],[13,"Ptr","","A raw pointer (`*const T` or `*mut T`)",52,null],[13,"Rptr","","A reference (`&'a T` or `&'a mut T`)",52,null],[13,"BareFn","","A bare function (e.g. `fn(usize) -> bool`)",52,null],[13,"Never","","The never type (`!`)",52,null],[13,"Tup","","A tuple (`(A, B, C, D, ...)`)",52,null],[13,"Path","","A path (`module::module::...::Type`), optionally \"qualified\", e.g. `<Vec<T> as SomeTrait>::SomeType`.",52,null],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a trait or a lifetime.",52,null],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or a lifetime.",52,null],[13,"Paren","","No-op; kept solely so that we can pretty-print faithfully",52,null],[13,"Infer","","TyKind::Infer means the type should be inferred instead of it having been specified. This can appear anywhere in a type.",52,null],[13,"Mac","","A macro in the type position.",52,null],[4,"Unsafety","","",null,null],[13,"Unsafe","","",53,null],[13,"Normal","","",53,null],[5,"parse_derive_input","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["deriveinput","string"],"name":"result"}}],[5,"parse_type","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["ty","string"],"name":"result"}}],[5,"parse_path","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["path","string"],"name":"result"}}],[5,"parse_where_clause","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["whereclause","string"],"name":"result"}}],[5,"parse_token_trees","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["vec","string"],"name":"result"}}],[5,"parse_ident","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["ident","string"],"name":"result"}}],[5,"parse_ty_param_bound","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["typarambound","string"],"name":"result"}}],[5,"parse_outer_attr","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["attribute","string"],"name":"result"}}],[11,"to_tokens","","",0,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",29,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",30,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"attribute"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"attribute"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"attribute"}],"output":{"name":"bool"}}],[11,"hash","","",0,null],[11,"name","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"attrstyle"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"attrstyle"}],"output":{"name":"bool"}}],[11,"hash","","",28,null],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"metaitem"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"metaitem"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"self"},{"name":"metaitem"}],"output":{"name":"bool"}}],[11,"hash","","",29,null],[11,"name","","Name of the item.",29,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"nestedmetaitem"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"nestedmetaitem"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"self"},{"name":"nestedmetaitem"}],"output":{"name":"bool"}}],[11,"hash","","",30,null],[11,"to_tokens","","",31,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"constexpr"}}],[11,"eq","","",31,{"inputs":[{"name":"self"},{"name":"constexpr"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"self"},{"name":"constexpr"}],"output":{"name":"bool"}}],[11,"hash","","",31,null],[11,"to_tokens","","",2,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",32,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",33,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"variant"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"variant"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"variant"}],"output":{"name":"bool"}}],[11,"hash","","",2,null],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"variantdata"}}],[11,"eq","","",32,{"inputs":[{"name":"self"},{"name":"variantdata"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"self"},{"name":"variantdata"}],"output":{"name":"bool"}}],[11,"hash","","",32,null],[11,"fields","","Slice containing the fields stored in the variant.",32,null],[11,"fields_mut","","Mutable slice containing the fields stored in the variant.",32,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"field"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"field"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"field"}],"output":{"name":"bool"}}],[11,"hash","","",1,null],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"visibility"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"visibility"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"self"},{"name":"visibility"}],"output":{"name":"bool"}}],[11,"hash","","",33,null],[11,"to_tokens","","",3,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",54,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",55,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",56,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",4,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",5,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",6,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",35,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",8,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",36,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",7,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",10,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",9,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"generics"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"generics"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"generics"}],"output":{"name":"bool"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"generics"}}],[11,"hash","","",3,null],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"split_for_impl","","Split a type's generics into the pieces required for impl'ing a trait for that type.",3,null],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like `::<X, Y>`.",55,{"inputs":[{"name":"self"}],"output":{"name":"turbofish"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"lifetime"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"hash","","",4,null],[11,"cmp","","",4,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"new","","",4,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"lifetimedef"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"lifetimedef"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"lifetimedef"}],"output":{"name":"bool"}}],[11,"hash","","",5,null],[11,"new","","",5,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"typaram"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"typaram"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"typaram"}],"output":{"name":"bool"}}],[11,"hash","","",6,null],[11,"from","","",6,{"inputs":[{"name":"ident"}],"output":{"name":"self"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"typarambound"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"typarambound"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"self"},{"name":"typarambound"}],"output":{"name":"bool"}}],[11,"hash","","",35,null],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"traitboundmodifier"}}],[11,"eq","","",34,{"inputs":[{"name":"self"},{"name":"traitboundmodifier"}],"output":{"name":"bool"}}],[11,"hash","","",34,null],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"whereclause"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"whereclause"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"whereclause"}],"output":{"name":"bool"}}],[11,"default","","",8,{"inputs":[],"output":{"name":"whereclause"}}],[11,"hash","","",8,null],[11,"none","","",8,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"wherepredicate"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"wherepredicate"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"self"},{"name":"wherepredicate"}],"output":{"name":"bool"}}],[11,"hash","","",36,null],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"whereboundpredicate"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"whereboundpredicate"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"whereboundpredicate"}],"output":{"name":"bool"}}],[11,"hash","","",7,null],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"whereregionpredicate"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"whereregionpredicate"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"self"},{"name":"whereregionpredicate"}],"output":{"name":"bool"}}],[11,"hash","","",10,null],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"whereeqpredicate"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"whereeqpredicate"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"whereeqpredicate"}],"output":{"name":"bool"}}],[11,"hash","","",9,null],[11,"to_tokens","","",57,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"ident"}}],[11,"hash","","",57,null],[11,"cmp","","",57,{"inputs":[{"name":"self"},{"name":"ident"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",57,{"inputs":[{"name":"self"},{"name":"ident"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",57,{"inputs":[{"name":"self"},{"name":"ident"}],"output":{"name":"bool"}}],[11,"le","","",57,{"inputs":[{"name":"self"},{"name":"ident"}],"output":{"name":"bool"}}],[11,"gt","","",57,{"inputs":[{"name":"self"},{"name":"ident"}],"output":{"name":"bool"}}],[11,"ge","","",57,{"inputs":[{"name":"self"},{"name":"ident"}],"output":{"name":"bool"}}],[11,"new","","",57,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from","","",57,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",57,{"inputs":[{"generics":["str"],"name":"cow"}],"output":{"name":"self"}}],[11,"from","","",57,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"from","","",57,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"as_ref","","",57,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"eq","","",57,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"to_tokens","","",39,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"lit"}}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"lit"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"self"},{"name":"lit"}],"output":{"name":"bool"}}],[11,"hash","","",39,null],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"strstyle"}}],[11,"eq","","",40,{"inputs":[{"name":"self"},{"name":"strstyle"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"self"},{"name":"strstyle"}],"output":{"name":"bool"}}],[11,"hash","","",40,null],[11,"from","","",39,{"inputs":[{"name":"string"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"str"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"generics":["u8"],"name":"vec"}],"output":{"name":"lit"}}],[11,"from","","",39,null],[11,"from","","",39,{"inputs":[{"name":"char"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"bool"}],"output":{"name":"lit"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"intty"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"intty"}],"output":{"name":"bool"}}],[11,"hash","","",38,null],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"floatty"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"floatty"}],"output":{"name":"bool"}}],[11,"hash","","",37,null],[11,"from","","",39,{"inputs":[{"name":"isize"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"i8"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"i16"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"i32"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"i64"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"usize"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"u8"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"u16"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"u32"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"u64"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"f32"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"f64"}],"output":{"name":"lit"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"strlit"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bytestrlit"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"intlit"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"floatlit"}}],[11,"to_tokens","","",16,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",44,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",15,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",43,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",41,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"mac"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"mac"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"self"},{"name":"mac"}],"output":{"name":"bool"}}],[11,"hash","","",16,null],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"tokentree"}}],[11,"eq","","",44,{"inputs":[{"name":"self"},{"name":"tokentree"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"self"},{"name":"tokentree"}],"output":{"name":"bool"}}],[11,"hash","","",44,null],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"delimited"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"delimited"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"self"},{"name":"delimited"}],"output":{"name":"bool"}}],[11,"hash","","",15,null],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"token"}}],[11,"eq","","",43,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"bool"}}],[11,"hash","","",43,null],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"binoptoken"}}],[11,"eq","","",41,{"inputs":[{"name":"self"},{"name":"binoptoken"}],"output":{"name":"bool"}}],[11,"hash","","",41,null],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"delimtoken"}}],[11,"eq","","",42,{"inputs":[{"name":"self"},{"name":"delimtoken"}],"output":{"name":"bool"}}],[11,"hash","","",42,null],[11,"to_tokens","","",17,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"deriveinput"}}],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"deriveinput"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"self"},{"name":"deriveinput"}],"output":{"name":"bool"}}],[11,"hash","","",17,null],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"body"}}],[11,"eq","","",45,{"inputs":[{"name":"self"},{"name":"body"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"self"},{"name":"body"}],"output":{"name":"bool"}}],[11,"hash","","",45,null],[11,"op","","",46,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"assign_op","","",46,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"to_tokens","","",46,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"op","","",47,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"to_tokens","","",47,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"binop"}}],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"binop"}],"output":{"name":"bool"}}],[11,"hash","","",46,null],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"unop"}}],[11,"eq","","",47,{"inputs":[{"name":"self"},{"name":"unop"}],"output":{"name":"bool"}}],[11,"hash","","",47,null],[11,"to_tokens","","",52,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",50,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",23,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",24,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",51,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",18,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",27,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",22,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",25,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",20,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",19,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",53,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",48,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"ty"}}],[11,"eq","","",52,{"inputs":[{"name":"self"},{"name":"ty"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"self"},{"name":"ty"}],"output":{"name":"bool"}}],[11,"hash","","",52,null],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"mutty"}}],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"mutty"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"self"},{"name":"mutty"}],"output":{"name":"bool"}}],[11,"hash","","",21,null],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"mutability"}}],[11,"eq","","",50,{"inputs":[{"name":"self"},{"name":"mutability"}],"output":{"name":"bool"}}],[11,"hash","","",50,null],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"path"}}],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"path"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"self"},{"name":"path"}],"output":{"name":"bool"}}],[11,"hash","","",23,null],[11,"from","","",23,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"pathsegment"}}],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"pathsegment"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"self"},{"name":"pathsegment"}],"output":{"name":"bool"}}],[11,"hash","","",24,null],[11,"from","","",24,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"pathparameters"}}],[11,"eq","","",51,{"inputs":[{"name":"self"},{"name":"pathparameters"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"self"},{"name":"pathparameters"}],"output":{"name":"bool"}}],[11,"hash","","",51,null],[11,"none","","",51,{"inputs":[],"output":{"name":"self"}}],[11,"is_empty","","",51,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"anglebracketedparameterdata"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"anglebracketedparameterdata"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"self"},{"name":"anglebracketedparameterdata"}],"output":{"name":"bool"}}],[11,"default","","",18,{"inputs":[],"output":{"name":"anglebracketedparameterdata"}}],[11,"hash","","",18,null],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"typebinding"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"typebinding"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"self"},{"name":"typebinding"}],"output":{"name":"bool"}}],[11,"hash","","",27,null],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"parenthesizedparameterdata"}}],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"parenthesizedparameterdata"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"self"},{"name":"parenthesizedparameterdata"}],"output":{"name":"bool"}}],[11,"hash","","",22,null],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"polytraitref"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"polytraitref"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"self"},{"name":"polytraitref"}],"output":{"name":"bool"}}],[11,"hash","","",25,null],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"qself"}}],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"qself"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"self"},{"name":"qself"}],"output":{"name":"bool"}}],[11,"hash","","",26,null],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"barefnty"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"barefnty"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"self"},{"name":"barefnty"}],"output":{"name":"bool"}}],[11,"hash","","",20,null],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"unsafety"}}],[11,"eq","","",53,{"inputs":[{"name":"self"},{"name":"unsafety"}],"output":{"name":"bool"}}],[11,"hash","","",53,null],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"abi"}}],[11,"eq","","",48,{"inputs":[{"name":"self"},{"name":"abi"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"self"},{"name":"abi"}],"output":{"name":"bool"}}],[11,"hash","","",48,null],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"barefnarg"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"barefnarg"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"self"},{"name":"barefnarg"}],"output":{"name":"bool"}}],[11,"hash","","",19,null],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"functionretty"}}],[11,"eq","","",49,{"inputs":[{"name":"self"},{"name":"functionretty"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"self"},{"name":"functionretty"}],"output":{"name":"bool"}}],[11,"hash","","",49,null],[0,"visit","","AST walker. Each overridden visit method has full control over what happens with its node, it can do its own traversal of the node's children, call `visit::walk_*` to apply the default traversal algorithm, or prevent deeper traversal by doing nothing.",null,null],[5,"walk_opt_ident","syn::visit","",null,{"inputs":[{"name":"v"},{"name":"option"}],"output":null}],[5,"walk_lifetime_def","","",null,{"inputs":[{"name":"v"},{"name":"lifetimedef"}],"output":null}],[5,"walk_poly_trait_ref","","",null,{"inputs":[{"name":"v"},{"name":"polytraitref"},{"name":"traitboundmodifier"}],"output":null}],[5,"walk_derive_input","","",null,{"inputs":[{"name":"v"},{"name":"deriveinput"}],"output":null}],[5,"walk_variant","","",null,{"inputs":[{"name":"v"},{"name":"variant"},{"name":"generics"}],"output":null}],[5,"walk_ty","","",null,{"inputs":[{"name":"v"},{"name":"ty"}],"output":null}],[5,"walk_path","","",null,{"inputs":[{"name":"v"},{"name":"path"}],"output":null}],[5,"walk_path_segment","","",null,{"inputs":[{"name":"v"},{"name":"pathsegment"}],"output":null}],[5,"walk_path_parameters","","",null,{"inputs":[{"name":"v"},{"name":"pathparameters"}],"output":null}],[5,"walk_assoc_type_binding","","",null,{"inputs":[{"name":"v"},{"name":"typebinding"}],"output":null}],[5,"walk_ty_param_bound","","",null,{"inputs":[{"name":"v"},{"name":"typarambound"}],"output":null}],[5,"walk_generics","","",null,{"inputs":[{"name":"v"},{"name":"generics"}],"output":null}],[5,"walk_fn_ret_ty","","",null,{"inputs":[{"name":"v"},{"name":"functionretty"}],"output":null}],[5,"walk_variant_data","","",null,{"inputs":[{"name":"v"},{"name":"variantdata"}],"output":null}],[5,"walk_field","","",null,{"inputs":[{"name":"v"},{"name":"field"}],"output":null}],[5,"walk_const_expr","","",null,{"inputs":[{"name":"v"},{"name":"constexpr"}],"output":null}],[5,"walk_mac","","",null,{"inputs":[{"name":"v"},{"name":"mac"}],"output":null}],[8,"Visitor","","Each method of the Visitor trait is a hook to be potentially overridden.  Each method's default implementation recursively visits the substructure of the input via the corresponding `walk` method; e.g. the `visit_mod` method by default calls `visit::walk_mod`.",null,null],[11,"visit_ident","","",58,{"inputs":[{"name":"self"},{"name":"ident"}],"output":null}],[11,"visit_derive_input","","",58,{"inputs":[{"name":"self"},{"name":"deriveinput"}],"output":null}],[11,"visit_ty","","",58,{"inputs":[{"name":"self"},{"name":"ty"}],"output":null}],[11,"visit_generics","","",58,{"inputs":[{"name":"self"},{"name":"generics"}],"output":null}],[11,"visit_ty_param_bound","","",58,{"inputs":[{"name":"self"},{"name":"typarambound"}],"output":null}],[11,"visit_poly_trait_ref","","",58,{"inputs":[{"name":"self"},{"name":"polytraitref"},{"name":"traitboundmodifier"}],"output":null}],[11,"visit_variant_data","","",58,{"inputs":[{"name":"self"},{"name":"variantdata"},{"name":"ident"},{"name":"generics"}],"output":null}],[11,"visit_field","","",58,{"inputs":[{"name":"self"},{"name":"field"}],"output":null}],[11,"visit_variant","","",58,{"inputs":[{"name":"self"},{"name":"variant"},{"name":"generics"}],"output":null}],[11,"visit_lifetime","","",58,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":null}],[11,"visit_lifetime_def","","",58,{"inputs":[{"name":"self"},{"name":"lifetimedef"}],"output":null}],[11,"visit_path","","",58,{"inputs":[{"name":"self"},{"name":"path"}],"output":null}],[11,"visit_path_segment","","",58,{"inputs":[{"name":"self"},{"name":"pathsegment"}],"output":null}],[11,"visit_path_parameters","","",58,{"inputs":[{"name":"self"},{"name":"pathparameters"}],"output":null}],[11,"visit_assoc_type_binding","","",58,{"inputs":[{"name":"self"},{"name":"typebinding"}],"output":null}],[11,"visit_attribute","","",58,{"inputs":[{"name":"self"},{"name":"attribute"}],"output":null}],[11,"visit_fn_ret_ty","","",58,{"inputs":[{"name":"self"},{"name":"functionretty"}],"output":null}],[11,"visit_const_expr","","",58,{"inputs":[{"name":"self"},{"name":"constexpr"}],"output":null}],[11,"visit_lit","","",58,{"inputs":[{"name":"self"},{"name":"lit"}],"output":null}],[11,"visit_mac","","",58,{"inputs":[{"name":"self"},{"name":"mac"}],"output":null}],[0,"parse","syn","This module contains a set of exported nom parsers which can be used to parse custom grammars when used alongside the `synom` crate.",null,null],[4,"IResult","syn::parse","The result of a parser.",null,null],[13,"Done","","Parsing succeeded. The first field contains the rest of the unparsed data and the second field contains the parse result.",59,null],[13,"Error","","Parsing failed.",59,null],[5,"lit","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","lit"],"name":"iresult"}}],[5,"string","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","strlit"],"name":"iresult"}}],[5,"byte_string","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","bytestrlit"],"name":"iresult"}}],[5,"byte","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","u8"],"name":"iresult"}}],[5,"character","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","char"],"name":"iresult"}}],[5,"float","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","floatlit"],"name":"iresult"}}],[5,"int","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","intlit"],"name":"iresult"}}],[5,"boolean","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","bool"],"name":"iresult"}}],[5,"ty","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","ty"],"name":"iresult"}}],[5,"path","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","path"],"name":"iresult"}}],[5,"tt","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","tokentree"],"name":"iresult"}}],[5,"ident","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","ident"],"name":"iresult"}}],[5,"lifetime","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","lifetime"],"name":"iresult"}}],[11,"expect","","Unwraps the result, asserting the the parse is complete. Panics with a message based on the given string if the parse failed or is incomplete.",59,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"o"}}],[11,"eq","","",59,{"inputs":[{"name":"self"},{"name":"iresult"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"self"},{"name":"iresult"}],"output":{"name":"bool"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"iresult"}}]],"paths":[[3,"Attribute"],[3,"Field"],[3,"Variant"],[3,"Generics"],[3,"Lifetime"],[3,"LifetimeDef"],[3,"TyParam"],[3,"WhereBoundPredicate"],[3,"WhereClause"],[3,"WhereEqPredicate"],[3,"WhereRegionPredicate"],[3,"ByteStrLit"],[3,"FloatLit"],[3,"IntLit"],[3,"StrLit"],[3,"Delimited"],[3,"Mac"],[3,"DeriveInput"],[3,"AngleBracketedParameterData"],[3,"BareFnArg"],[3,"BareFnTy"],[3,"MutTy"],[3,"ParenthesizedParameterData"],[3,"Path"],[3,"PathSegment"],[3,"PolyTraitRef"],[3,"QSelf"],[3,"TypeBinding"],[4,"AttrStyle"],[4,"MetaItem"],[4,"NestedMetaItem"],[4,"ConstExpr"],[4,"VariantData"],[4,"Visibility"],[4,"TraitBoundModifier"],[4,"TyParamBound"],[4,"WherePredicate"],[4,"FloatTy"],[4,"IntTy"],[4,"Lit"],[4,"StrStyle"],[4,"BinOpToken"],[4,"DelimToken"],[4,"Token"],[4,"TokenTree"],[4,"Body"],[4,"BinOp"],[4,"UnOp"],[4,"Abi"],[4,"FunctionRetTy"],[4,"Mutability"],[4,"PathParameters"],[4,"Ty"],[4,"Unsafety"],[3,"ImplGenerics"],[3,"TyGenerics"],[3,"Turbofish"],[3,"Ident"],[8,"Visitor"],[4,"IResult"]]};
searchIndex["synom"] = {"doc":"Adapted from `nom` by removing the `IResult::Incomplete` variant which:","items":[[4,"IResult","synom","The result of a parser.",null,null],[13,"Done","","Parsing succeeded. The first field contains the rest of the unparsed data and the second field contains the parse result.",0,null],[13,"Error","","Parsing failed.",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"iresult"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"iresult"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"iresult"}}],[11,"expect","","Unwraps the result, asserting the the parse is complete. Panics with a message based on the given string if the parse failed or is incomplete.",0,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"o"}}],[14,"punct","","Parse a piece of punctuation like \"+\" or \"+=\".",null,null],[14,"keyword","","Parse a keyword like \"fn\" or \"struct\".",null,null],[14,"option","","Turn a failed parse into `None` and a successful parse into `Some`.",null,null],[14,"opt_vec","","Turn a failed parse into an empty vector. The argument parser must itself return a vector.",null,null],[14,"epsilon","","Parses nothing and always succeeds.",null,null],[14,"separated_list","","Zero or more values separated by some separator. Does not allow a trailing seperator.",null,null],[14,"terminated_list","","Zero or more values separated by some separator. A trailing separator is allowed.",null,null],[14,"named","","Define a function from a parser combination.",null,null],[14,"call","","Invoke the given parser function with the passed in arguments.",null,null],[14,"map","","Transform the result of a parser by applying a function or closure.",null,null],[14,"not","","Parses successfully if the given parser fails to parse. Does not consume any of the input.",null,null],[14,"cond","","Conditionally execute the given parser.",null,null],[14,"cond_reduce","","Fail to parse if condition is false, otherwise parse the given parser.",null,null],[14,"preceded","","Parse two things, returning the value of the second.",null,null],[14,"terminated","","Parse two things, returning the value of the first.",null,null],[14,"many0","","Parse zero or more values using the given parser.",null,null],[14,"peek","","Parse a value without consuming it from the input data.",null,null],[14,"take_until","","Parse the part of the input up to but not including the given string. Fail to parse if the given string is not present in the input.",null,null],[14,"tag","","Parse the given string from exactly the current position in the input. You almost always want `punct!` or `keyword!` instead of this.",null,null],[14,"switch","","Pattern-match the result of a parser to select which other parser to run.",null,null],[14,"value","","Produce the given value without parsing anything. Useful as an argument to `switch!`.",null,null],[14,"delimited","","Value surrounded by a pair of delimiters.",null,null],[14,"separated_nonempty_list","","One or more values separated by some separator. Does not allow a trailing separator.",null,null],[14,"tuple","","Run a series of parsers and produce all of the results in a tuple.",null,null],[14,"alt","","Run a series of parsers, returning the result of the first one which succeeds.",null,null],[14,"do_parse","","Run a series of parsers, one after another, optionally assigning the results a name. Fail if any of the parsers fails.",null,null]],"paths":[[4,"IResult"]]};
searchIndex["synstructure"] = {"doc":"This crate provides helper types for matching against enum variants, and extracting bindings to each of the fields in the deriving Struct or Enum in a generic way.","items":[[3,"BindingInfo","synstructure","Information about a specific binding. This contains both an `Ident` reference to the given field, and the syn `&'a Field` descriptor for that field.",null,null],[12,"binding","","The name which this BindingInfo will bind to.",0,null],[12,"style","","The type of binding which this BindingInfo will create.",0,null],[3,"VariantAst","","This type is similar to `syn`'s `Variant` type, however each of the fields are references rather than owned. When this is used as the AST for a real variant, this struct simply borrows the fields of the `syn` `Variant`, however this type may also be used as the sole variant for astruct.",null,null],[12,"ident","","",1,null],[12,"attrs","","",1,null],[12,"data","","",1,null],[12,"discriminant","","",1,null],[3,"VariantInfo","","A wrapper around a `syn` `DeriveInput`'s variant which provides utilities for destructuring `Variant`s with `match` expressions.",null,null],[12,"prefix","","",2,null],[3,"Structure","","A wrapper around a `syn` `DeriveInput` which provides utilities for creating custom derive trait implementations.",null,null],[4,"BindStyle","","The type of binding to use when generating a pattern.",null,null],[13,"Move","","`x`",3,null],[13,"MoveMut","","`mut x`",3,null],[13,"Ref","","`ref x`",3,null],[13,"RefMut","","`ref mut x`",3,null],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bindstyle"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"bindstyle"}],"output":{"name":"bool"}}],[11,"hash","","",3,null],[11,"to_tokens","","",3,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"bindinginfo"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"bindinginfo"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"bindinginfo"}],"output":{"name":"bool"}}],[11,"hash","","",0,null],[11,"to_tokens","","",0,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"ast","","Returns a reference to the underlying `syn` AST node which this `BindingInfo` references",0,{"inputs":[{"name":"self"}],"output":{"name":"field"}}],[11,"pat","","Generates the pattern fragment for this field binding.",0,{"inputs":[{"name":"self"}],"output":{"name":"tokens"}}],[11,"referenced_ty_params","","Returns a list of the type parameters which are referenced in this field's type.",0,{"inputs":[{"name":"self"}],"output":{"generics":["ident"],"name":"vec"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"variantast"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"variantast"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"variantast"}],"output":{"name":"bool"}}],[11,"hash","","",1,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"variantinfo"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"variantinfo"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"variantinfo"}],"output":{"name":"bool"}}],[11,"hash","","",2,null],[11,"bindings","","Returns a slice of the bindings in this Variant.",2,null],[11,"bindings_mut","","Returns a mut slice of the bindings in this Variant.",2,null],[11,"ast","","Returns a `VariantAst` object which contains references to the underlying `syn` AST node which this `Variant` was created from.",2,{"inputs":[{"name":"self"}],"output":{"name":"variantast"}}],[11,"omitted_bindings","","True if any bindings were omitted due to a `filter` call.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"pat","","Generates the match-arm pattern which could be used to match against this Variant.",2,{"inputs":[{"name":"self"}],"output":{"name":"tokens"}}],[11,"construct","","Generates the token stream required to construct the current variant.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"tokens"}}],[11,"each","","Runs the passed-in function once for each bound field, passing in a `BindingInfo`. and generating a `match` arm which evaluates the returned tokens.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"tokens"}}],[11,"fold","","Runs the passed-in function once for each bound field, passing in the result of the previous call, and a `BindingInfo`. generating a `match` arm which evaluates to the resulting tokens.",2,{"inputs":[{"name":"self"},{"name":"i"},{"name":"f"}],"output":{"name":"tokens"}}],[11,"filter","","Filter the bindings created by this `Variant` object. This has 2 effects:",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"remove_binding","","Remove the binding at the given index.",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"bind_with","","Updates the `BindStyle` for each of the passed-in fields by calling the passed-in function for each `BindingInfo`.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"binding_name","","Updates the binding name for each fo the passed-in fields by calling the passed-in function for each `BindingInfo`.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"referenced_ty_params","","Returns a list of the type parameters which are referenced in this field's type.",2,{"inputs":[{"name":"self"}],"output":{"generics":["ident"],"name":"vec"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"structure"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"structure"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"structure"}],"output":{"name":"bool"}}],[11,"hash","","",4,null],[11,"new","","Create a new `Structure` with the variants and fields from the passed-in `DeriveInput`.",4,{"inputs":[{"name":"deriveinput"}],"output":{"name":"self"}}],[11,"variants","","Returns a slice of the variants in this Structure.",4,null],[11,"variants_mut","","Returns a mut slice of the variants in this Structure.",4,null],[11,"ast","","Returns a reference to the underlying `syn` AST node which this `Structure` was created from.",4,{"inputs":[{"name":"self"}],"output":{"name":"deriveinput"}}],[11,"omitted_variants","","True if any variants were omitted due to a `filter_variants` call.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"each","","Runs the passed-in function once for each bound field, passing in a `BindingInfo`. and generating `match` arms which evaluate the returned tokens.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"tokens"}}],[11,"fold","","Runs the passed-in function once for each bound field, passing in the result of the previous call, and a `BindingInfo`. generating `match` arms which evaluate to the resulting tokens.",4,{"inputs":[{"name":"self"},{"name":"i"},{"name":"f"}],"output":{"name":"tokens"}}],[11,"each_variant","","Runs the passed-in function once for each variant, passing in a `VariantInfo`. and generating `match` arms which evaluate the returned tokens.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"tokens"}}],[11,"filter","","Filter the bindings created by this `Structure` object. This has 2 effects:",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"filter_variants","","Filter the variants matched by this `Structure` object. This has 2 effects:",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"remove_variant","","Remove the variant at the given index.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"bind_with","","Updates the `BindStyle` for each of the passed-in fields by calling the passed-in function for each `BindingInfo`.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"binding_name","","Updates the binding name for each fo the passed-in fields by calling the passed-in function for each `BindingInfo`.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"referenced_ty_params","","Returns a list of the type parameters which are refrenced in the types of non-filtered fields / variants.",4,{"inputs":[{"name":"self"}],"output":{"generics":["ident"],"name":"vec"}}],[11,"add_trait_bounds","","Add trait bounds for a trait with the given path for each type parmaeter referenced in the types of non-filtered fields.",4,{"inputs":[{"name":"self"},{"name":"typarambound"},{"name":"vec"}],"output":null}],[11,"bound_impl","","Creates an `impl` block with the required generic type fields filled in to implement the trait `path`.",4,{"inputs":[{"name":"self"},{"name":"p"},{"name":"b"}],"output":{"name":"tokens"}}],[11,"unsafe_bound_impl","","This method is the same as `bound_impl`, except also includes the `unsafe` keyword for implementing unsafe traits.",4,{"inputs":[{"name":"self"},{"name":"p"},{"name":"b"}],"output":{"name":"tokens"}}],[11,"unbound_impl","","This method is like `bound_impl` but doesn't add the additional bounds to the where clause.",4,{"inputs":[{"name":"self"},{"name":"p"},{"name":"b"}],"output":{"name":"tokens"}}],[11,"unsafe_unbound_impl","","This method is the same as `unbound_impl`, except also includes the `unsafe` keyword for implementing unsafe traits.",4,{"inputs":[{"name":"self"},{"name":"p"},{"name":"b"}],"output":{"name":"tokens"}}],[14,"decl_derive","","The `decl_derive!` macro declares a custom derive wrapper. It will parse the incoming TokenStream into a `synstructure::Structure` object, and pass it into the inner function.",null,null],[14,"test_derive","","Run a test on a custom derive. This macro expands both the original struct and the expansion to ensure that they compile correctly, and confirms that feeding the original struct into the named derive will produce the written output.",null,null]],"paths":[[3,"BindingInfo"],[3,"VariantAst"],[3,"VariantInfo"],[4,"BindStyle"],[3,"Structure"]]};
searchIndex["unicode_xid"] = {"doc":"Determine if a `char` is a valid identifier for a parser and/or lexer according to Unicode Standard Annex #31 rules.","items":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is based on.",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid identifier character.",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the 'XID_Start' Unicode property.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the 'XID_Continue' Unicode property.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}]],"paths":[[8,"UnicodeXID"]]};
initSearch(searchIndex);
